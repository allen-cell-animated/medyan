############MAKEFILE FOR MEDYAN####################
#
# As outlined in the install guide, the following
# libraries and compilers are needed:
#
#	GCC 4.7 and above
#	Boost 1.49 and above
#
#   If running unit tests, googletest is needed.
#
# Tweak the following compiler and library options
# for your given system.
##################################################

TESTS	:= $(shell find ./TESTS -name 'test_*')
SOURCES := $(shell find . -name '*.cpp' ! -path './TESTS/*')
HEADERS := $(shell find . -name '*.h')

OBJECTS := $(SOURCES:.cpp=.o)

#CPP COMPILER CHOICE AND FLAGS
CXX = /usr/bin/g++ -std=c++11
DEBUG = -g
FAST = -Os -ffast-math -flto -funroll-loops -DNDEBUG -mtune=native

LDLIBS = -L/usr/local/lib/ -lboost_system
LDFLAGS = $(FAST)

CPPFLAGS = $(FAST) -Wall -Wno-sign-compare -Wno-maybe-uninitialized \
-Wno-uninitialized -Wno-unknown-warning-option \
-I/usr/local/include -I/usr/include/boost \
-I./ -IStructure -IStructure/Special      \
-IStructure/SurfaceMesh                   \
-IChemistry                               \
-IMechanics/Minimizer                     \
-IMechanics/ForceField                    \
-IMechanics/ForceField/Volume             \
-IMechanics/ForceField/VolumeConservation \
-IMechanics/ForceField/Boundary           \
-IMechanics/ForceField/Branching          \
-IMechanics/ForceField/Filament           \
-IMechanics/ForceField/Linker             \
-IMechanics/ForceField/Membrane           \
-IMechanics/ForceField/MotorGhost         \
-IMechanics/ForceField/Bubble             \


#################MAIN USER MACROS#################
#
# Please set these macros according to the 	
# desired simulation type. See the install
# and usage guides for more details.
#
##################################################

#Initialize chemical components of system
CPPFLAGS += -DCHEMISTRY
#Initialize mechanical components of system
CPPFLAGS += -DMECHANICS
#Use dynamic rate changing 
CPPFLAGS += -DDYNAMICRATES

#Boost memory macros
CPPFLAGS += -DBOOST_MEM_POOL
CPPFLAGS += -DBOOL_POOL_NSIZE=65536

#if compiling the testing suite
#CPPFLAGS += -DTESTING

#Detailed chemistry macros. 
#FOR ALL STANDARD FUNCTIONALITY, NONE OF THESE SHOULD BE TURNED OFF!!!

#Track dependents. Needed for Gillespie and NRM algorithm
CPPFLAGS += -DTRACK_DEPENDENTS

#Track zero copy and max copy number. 
#For passivating and activating reactions accordingly
CPPFLAGS += -DTRACK_ZERO_COPY_N
CPPFLAGS += -DTRACK_UPPER_COPY_N

#Reaction signaling. Needed for all Filament, Linker, 
#Motor, and BranchingPoint reactions in system
CPPFLAGS += -DREACTION_SIGNALING

#Species signaling
CPPFLAGS += -DRSPECIES_SIGNALING

################MAKEFILE OPTIONS###################
#
#	
#   make [all]        - makes everything
#   make Makefile.dep - makes dependencies
#   make clean	      - remove all files 
#						generated by make
#
##################################################

all: MEDYAN

MEDYAN: $(OBJECTS)
	$(CXX) $(LDFLAGS) -o MEDYAN $(OBJECTS) $(LDLIBS)

%.o: %.cpp 
	$(CXX) $(CPPFLAGS) -c $< -o $@

clean:
	\find . -name '*.o' -delete
	\rm -f MEDYAN

Makefile.dep: $(SOURCES) $(HEADERS)
	@echo "Updating the dependency file: Makefile.dep"
	$(SHELL) -ec '$(CXX) -MM $(CPPFLAGS) $(INCLUDES)  $(filter %.cpp,$^) \
	| sed '\''s/^\(.*\)\.o[ :]*/\1.o $@ : /g'\'' > $@; \
	[ -s $@ ] || rm -f $@'

include Makefile.dep
