<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>elapsed14</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8cpp.html</Path>
    <Anchor>a68a173bc13857916e3d027860629a4a8</Anchor>
    <DeclaredIn>ChemNRMImpl.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed16</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8cpp.html</Path>
    <Anchor>ae323016048db3679fe27aaab768045a5</Anchor>
    <DeclaredIn>ChemNRMImpl.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed23</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8cpp.html</Path>
    <Anchor>afe421e73101362b3eafa942fb03f1e95</Anchor>
    <DeclaredIn>ChemNRMImpl.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed45</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8cpp.html</Path>
    <Anchor>a5cb009d498852d064e39129554299d69</Anchor>
    <DeclaredIn>ChemNRMImpl.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed56</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8cpp.html</Path>
    <Anchor>a9d09f20ea527c18c15780dde25e5ed81</Anchor>
    <DeclaredIn>ChemNRMImpl.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BOOST_POOL_MEM_PQNODE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8h.html</Path>
    <Anchor>ac7284cce00b645fa49b08ae6aecbdc11</Anchor>
    <Abstract>The algorithm implemented here is based on the following reference: ** Michael A. Gibson...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BOOST_POOL_MEM_RNODENRM</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8h.html</Path>
    <Anchor>a6d805cd02e3606f51cda9faca85b1670</Anchor>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BOOST_POOL_MEM_HEAP_ELEMENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8h.html</Path>
    <Anchor>ad9d458cf298e6ecf4f6b58527b9e5281</Anchor>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost_heap</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8h.html</Path>
    <Anchor>a57f859851909ca786c37681af9b01d45</Anchor>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>ChemNRMImpl_8h.html</Path>
    <Anchor>a386f0f8003798d7e30dc670c31be1992</Anchor>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FORWARD</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionManager_8h.html</Path>
    <Anchor>abd87353a558418244b64a5b5b90b8538aa26736999186daf8146f809e863712a1</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BACKWARD</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionManager_8h.html</Path>
    <Anchor>abd87353a558418244b64a5b5b90b8538afed2fca77e454294d6b8bda1bf2c9fd6</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INPLACE</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionManager_8h.html</Path>
    <Anchor>abd87353a558418244b64a5b5b90b8538a5b2a7c1e7d51d7f2b4a1a7b364d25adb</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>global_time</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>common_8cpp.html</Path>
    <Anchor>aa3ea98c7e5ad42511b3ec7e0e90e61a4</Anchor>
    <DeclaredIn>common.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MECHANICS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a25a814d1a6bf61fbdb4635ed7721f8df</Anchor>
    <Abstract>Defining chemical and mechanical capablilites turned on/off. </Abstract>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHEMISTRY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>ad6bcb4b8592a6cec203d48431fc7320f</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TESTING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a68df6a1c0e7634ba32a66f9f01d4cb6f</Anchor>
    <Abstract>If compiling for testing. </Abstract>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRACK_DEPENDENTS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>ac331c2ee4410c5495c7d06314fdbc888</Anchor>
    <Abstract>Other chemistry macros. </Abstract>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRACK_ZERO_COPY_N</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a03fd44bcbf25c32054a4982f84f45259</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRACK_UPPER_COPY_N</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a318b9661d7fcfe101415b83880576138</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSPECIES_SIGNALING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a43feffc25272564f18d1800dc2147078</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REACTION_SIGNALING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a90ae0a2b8b2561f58e976b84d3b5a755</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>species_copy_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>a3503f321fd36304ee274141275cca586</Anchor>
    <Abstract>Species constants. </Abstract>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tau</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>abca55e6a21e0401c42bfb5da79ad3ad5</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max_ulim</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>adaf831a0b61083f29adf8fc6e8edab35</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>global_time</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>common_8h.html</Path>
    <Anchor>aa3ea98c7e5ad42511b3ec7e0e90e61a4</Anchor>
    <DeclaredIn>common.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>example__composite_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>example_composite.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>example__kostya_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>example_kostya.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_species</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>example__misc_8cpp.html</Path>
    <Anchor>ad83b302bda333800c7dd249e4ea5313b</Anchor>
    <DeclaredIn>example_misc.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>example__misc_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>example_misc.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>M3Sym_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>M3Sym.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoSegmentDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a4f2e296612642f3ac1b4789f85b02c41</Anchor>
    <Abstract>Function to calculate a diatance between two segments. </Abstract>
    <DeclaredIn>MathFunctions.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a43b9be958a97530eba2073e9816881eb</Anchor>
    <Abstract>Compute distance between two points with coordinates: (x1,y1,z1) and (x2,y2,z3);. ...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDistanceStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a79cd843c8fc2ad6513a091c86744e9f4</Anchor>
    <Abstract>Compute distance between two points with coordinates (x1 -d*p1x,y1-d*p1y,z1-d*p1z) and (x2-d*p2x...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>aa45b754771ac16d546864a1a7fb9bf59</Anchor>
    <Abstract>Calculates a normal to a line starting at (x1,y1,z1) and ending at (x2,y2,z2);. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScalarProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a003be58c2f6df9098c88b2ae33d5b5d4</Anchor>
    <Abstract>Scalar product of two vectors with coordinates: (x2-x1,y2-y1,z2-z1) and (x4-x3,y4-y3,z4-z3) </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScalarProductStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a3dffb1288c676c7809d4a6caae9601bb</Anchor>
    <Abstract>Scalar product of two vectors with coordinates: (x2-x1,y2-y1,z2-z1) and (x4-x3,y4-y3,z4-z3) but with x-d*p coordinates. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NextPointProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a1781854650a2eb9e2d88ad0ee14a8a69</Anchor>
    <Abstract>Projection of a new point based on a given direction and starting point. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MidPointCoordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a5c9392edbc56add20a4f95d7406a6757</Anchor>
    <Abstract>Returns coordinates of a point v located on a line between v1 and v2. |v-v1|/|v2-v| = alpha...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MidPointCoordinateStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>aaaf523827e15939d17307f0c3724973c</Anchor>
    <Abstract>Returns coordinates of a point v located on a line between v1 and v2. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoSegmentDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a4f2e296612642f3ac1b4789f85b02c41</Anchor>
    <Abstract>Function to calculate a diatance between two segments. </Abstract>
    <DeclaredIn>MathFunctions.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>split</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Parser_8h.html</Path>
    <Anchor>ae398d828d0fed77597e8486a7888b40a</Anchor>
    <Abstract>Split a string by whitespace into generic type. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpeciesCopyNChangedSignal</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>Signaling_8h.html</Path>
    <Anchor>a0e8f1e8752c518bbfbcfe0147eca4587</Anchor>
    <Abstract>This is a RSpecies signal object that will be called by ChemSignal, usually when requested by the rea...</Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionEventSignal</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>Signaling_8h.html</Path>
    <Anchor>a474e8de96ad1d2e184edd4655b5367a5</Anchor>
    <Abstract>This is a Reaction signal object that will be called by ChemSignal, usually when requested by the rea...</Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cube</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Boundary_8h.html</Path>
    <Anchor>a0099b369f2bc119c1b54728734b41132aa296104f0c61a9cf39f4824d05315e12</Anchor>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Capsule</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Boundary_8h.html</Path>
    <Anchor>a0099b369f2bc119c1b54728734b41132a4880c0f12c06dd6d142e7a40b041bf1a</Anchor>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Boundary_8h.html</Path>
    <Anchor>a0099b369f2bc119c1b54728734b41132ab7095f057db3fefa7325ad93a04e14fd</Anchor>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Compartment_8cpp.html</Path>
    <Anchor>ab45e5038a170f915298923d7a658ee8c</Anchor>
    <DeclaredIn>Compartment.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionEventSignal</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a474e8de96ad1d2e184edd4655b5367a5</Anchor>
    <Abstract>This is a ReactionBase signal object that may be called by a ReactionBase simulation algorithm...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REGULAR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30bafc488491175a6dac9e5881e363ad4c41</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DIFFUSION</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba64b145492a27539220bb4a4cb95af90c</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POLYMERIZATION</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30babd20bf878365c6e2977762273612e0ed</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPOLYMERIZATION</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba257a5b76956a3f0cdb04f2735cec8f40</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASICBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30baad5d22d8f660819c71009b276b0d9853</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LINKERBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30babb4246236a45de12ae33ca9742756203</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MOTORBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba052134034550952b4e637e90ea92ab58</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASICUNBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30bad4ad31e4ddc141353bf712b0f38c5945</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LINKERUNBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba20b685df2710300aaecba86159ed5f78</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MOTORUNBINDING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba207d328c12ccc4519abf501f23d7a66a</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MOTORWALKINGFORWARD</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba4819cd4ea14d6c4a25d52ec38eda3331</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MOTORWALKINGBACKWARD</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba010bf487e9e1de2000dce9ac118e2f2e</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CREATION</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30baf2481146540dbd021e1d88aeb83d6150</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DESTRUCTION</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>ReactionBase_8h.html</Path>
    <Anchor>a360e20f142dbd097b0d0d0620111b30ba7992404634380cda2526a7ea4149cbba</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>RSpecies_8cpp.html</Path>
    <Anchor>a981a9e7578d9040574937d550b2af0ce</Anchor>
    <Abstract>Print self into an iostream. </Abstract>
    <DeclaredIn>RSpecies.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vr_iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>a880cf21a44f76fb48cdb194a17487590</Anchor>
    <Abstract>vr stands for vector of Reactions </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vr_const_iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>a5024f9d9d5d7773a89c63d490ea10989</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vrsp_iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>a3c18a061bbca9cbe900dd8768e259c36</Anchor>
    <Abstract>vsp stands for vector of RSpecies </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vrsp_const_iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>aab7f1cf00103db2f4cb740f22b387c9f</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpeciesCopyNChangedSignal</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>a0e8f1e8752c518bbfbcfe0147eca4587</Anchor>
    <Abstract>This is a RSpecies signal object that can be used to signal when the copy number changes. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>RSpecies_8h.html</Path>
    <Anchor>a981a9e7578d9040574937d550b2af0ce</Anchor>
    <Abstract>Print self into an iostream. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Species_8cpp.html</Path>
    <Anchor>a4816bb7d9ee0557b45580bb9ece06e0d</Anchor>
    <Abstract>Print self into an iostream. </Abstract>
    <DeclaredIn>Species.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a4816bb7d9ee0557b45580bb9ece06e0d</Anchor>
    <Abstract>Print self into an iostream. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BULK</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfa7cf8c698367d8a7e5f568d30b4b17910</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DIFFUSING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfaeeaca4feca72d6318a4872d2a99974ee</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILAMENT</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfa8092891c785d1ee8a04eefe7b7a76d06</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BOUND</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfa86a60267aa7b85040d2bf45177fc1e3c</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LINKER</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfa9f815d55cc48f593e6aebe3a765a93d3</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MOTOR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfab68c2dc00a4681c10297284f6b803e2a</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLUSEND</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfabe356ec9d470ed0a78240e7d4bb6f0d1</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MINUSEND</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Species_8h.html</Path>
    <Anchor>a50651af47c56ea0e27235468d23542cfa2d5e0f0eef32809b20fce09baadf60dd</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_T</Name>
      <APILanguage>python</APILanguage>
      <Type>func</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a5185de4b3f647f2c0fd827dc61787e74</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propagate</Name>
      <APILanguage>python</APILanguage>
      <Type>func</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a59ce12842045f3ad4619feb145abdcf8</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a23b7c1024d319feae9e3a687526aeb94</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>t</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>ab55624a349d5a1ba164d1dde7d24524d</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>af487b8de68dc3e23fe5f16f3580525a7</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alpha</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a11169d0a2c42df806b8825edefea9f4d</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>A</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a2e58583729f8a298b9a4fa611c0ac787</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>B</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a9771d340c90ea87ee784c884fe2de3dc</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a6b1467f9bbedb7a62110239efb9e068b</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xx1</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>ada302b2e3d775f1258d503301d1c2377</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xx2</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a9a299d8ac16b9cdc11b6643776732552</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T_analyt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a36440b61a4f8a38a160c7d71c35e0af3</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>N</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ac17162d2d7790ca7d605541ee4c919bb</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>t</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a63df2169b3cb7b9db0743a51320bbf4f</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kf</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a772b5e72a16864c6d0d2895bf2bb5ada</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kb</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a2f4e77a45b10e727874ecd0a83be77fd</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a7095a52e98b19868ca09b3ea24726258</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ONES</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ab14192a58d248288a57a53a88e824aa1</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a238e2ae63555f68c3395add1edad1692</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p0</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ad5efb9fc14774d8a02dccd90d7978214</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>aae033c0920890d37257bb86daf8996f8</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p_analyt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a2f98730f45b559f9aece65c8682734bf</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_unique</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>utility_8h.html</Path>
    <Anchor>aadaabc53863af079cda1d92fa0518339</Anchor>
    <DeclaredIn>utility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSame</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>utility_8h.html</Path>
    <Anchor>a9fe61d6c6d59c130e9fd77b9043fbae1</Anchor>
    <DeclaredIn>utility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicBindingManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BasicBindingManager</Scope>
    </TokenIdentifier>
    <Path>classBasicBindingManager.html</Path>
    <Abstract>Manager for basic binding to Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicBindingManager</Scope>
    </TokenIdentifier>
    <Path>classBasicBindingManager.html</Path>
    <Anchor>ad57b38f098621ae0408069c49c17db52</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BasicBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicBindingManager</Scope>
    </TokenIdentifier>
    <Path>classBasicBindingManager.html</Path>
    <Anchor>ab382b0c661238e95df9d64f556ddc6d4</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicBindingManager</Scope>
    </TokenIdentifier>
    <Path>classBasicBindingManager.html</Path>
    <Anchor>a9dbb688abc218187913b23fa3dccd97d</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicBindingManager</Scope>
    </TokenIdentifier>
    <Path>classBasicBindingManager.html</Path>
    <Anchor>aea22a428f792f83f02ba58796ccd882e</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bead</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Abstract>Represents a single coordinate between Cylinders, and holds forces needed for mechanical equilibratio...</Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>aa91581c9111d101b95bec920798e22ac</Anchor>
    <Abstract>Main constructor. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a5bb15ab11fee13f78721759cadb5a5b4</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Bead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a21f0ccd7041f56c4038171d0da3a58ed</Anchor>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>ae6cfcc2936a2e12a3887c9fd824c6343</Anchor>
    <Abstract>Get Compartment. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>adfda91d08764f284b4a23c05da34c84c</Anchor>
    <Abstract>Update the position. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPositionFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a3178379864ec93ff5e9f8a2e7916c94a</Anchor>
    <Abstract>Set position on the local Filament. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a3df2bf2b6063545ba9a68b890004057e</Anchor>
    <Abstract>Get position on the local Filament. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBirthTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>afa239062c738d1db95a1456c9b357a68</Anchor>
    <Abstract>Get the birth time. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a06be9328d615af20a155e9060def1470</Anchor>
    <Abstract>When this function is applied to a ConditionalVisitor v, the corresponding v.visit(this) is called...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0f1cd7534ba27c165a1574adc8d422dd</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>aa911f6c2be71a33eeeb44f03c82cd421</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a42566ba7ad92afe0d84d9d1d4e05745e</Anchor>
    <Abstract>Returns the number of children of this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a14bcb60799865752cd293fba2076d84a</Anchor>
    <Abstract>Returns true if this node is a Composite node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ae99bcb165a9403e64ffea2b840192b4c</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a116a02dd48baa6bf46c1162998548814</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a42dd891a934150f6d6ef74b9850d4b5c</Anchor>
    <Abstract>Return a string indicating the full name of this node (presumably used mainly for debugging) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a38336c92dacb78175dfc7746bde5055d</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ae4b35cc8ce749e1219bec0eeea16b4bc</Anchor>
    <Abstract>Return the number of Species contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a446ee3fa9e36a6b56642a9d2a14d983d</Anchor>
    <Abstract>Return the number of ReactionBase objects contained under this node&amp;#39;s hieararchy. ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calcForceSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a8f10459bad94f72599f2e239644c4421</Anchor>
    <Abstract>Auxiliary method for CG minimization. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calcForceAuxSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a82e3c084cb26f343b5de59619c854f2b</Anchor>
    <Abstract>Auxiliary method for CG minimization. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calcDotForceProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a3df6e55d379663d002c73651a24718f5</Anchor>
    <Abstract>Auxiliary method for CG minimization. </Abstract>
    <DeclaredIn>Bead.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a8c9c7d97a682694bf3b16a0922b23786</Anchor>
    <Abstract>Coordinates of the bead. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinateAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a4d46596f52ee0ce95e3e717483e1a921</Anchor>
    <Abstract>An auxiliary coordinate field needed during CG minimization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>force</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>afc556d77d1d80e11c1256e89bba0db66</Anchor>
    <Abstract>Forces based on curent coordinates. Forces should always correspond to current coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a59758227cd7afbb3ec5fbcafe32773b8</Anchor>
    <Abstract>An auxiliary field needed during CG minimization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>ac9d2080d5d8f80f60535dfeea9cd38e9</Anchor>
    <Abstract>Pointer to the compartment that this bead is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_positionFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a0eafb8f259549846d4714e6120cbc87c</Anchor>
    <Abstract>Position on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_birthTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Bead</Scope>
    </TokenIdentifier>
    <Path>classBead.html</Path>
    <Anchor>a356c8525fcf176bca4cd539f735c1de6</Anchor>
    <Abstract>Time of birth. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeadDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Abstract>A database for all Beads in the system. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeadDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a47d7b62ae87aeffb76e6ded2798188ac</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a7e9c6a6635a39aa7cb4f18c1103df01d</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a2c4d09dbcad9f65129308ae570583134</Anchor>
    <Abstract>Add a bead. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>aa5069d3136246c17201f3d49c3e96405</Anchor>
    <Abstract>Remove a bead. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a7a57dea5ef46dff11f7589d00d05a4c0</Anchor>
    <Abstract>Get the instance of this singleton. </Abstract>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bdb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a0312ccca7bb1de087f91481aec353d60</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeadDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>ac25beed230d37dc184ca8c7e7b4ea087</Anchor>
    <DeclaredIn>BeadDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BeadDB</Scope>
    </TokenIdentifier>
    <Path>classBeadDB.html</Path>
    <Anchor>a99d68441bc8e90450f7d1fd6d65acd22</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Boundary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Abstract>To store all BoundarySurfaces that are in the SubSystem. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Boundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>ac6eb3bf752b27d4d799c4d2691b312ce</Anchor>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Boundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a86eab4f2362618c5b1e3d0df3a5f7f42</Anchor>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a20d2121527b207eed35f6719393e3499</Anchor>
    <Abstract>Get shape. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>acfa6640f65c432e339108887913539eb</Anchor>
    <Abstract>Get boundarysurfaces. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>within</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>aef1af10ace9eae30e86b6bd23087b3ff</Anchor>
    <Abstract>Check if coordinates are within boundary. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>abbac1843206a158e7d0a6e741cdc00c1</Anchor>
    <Abstract>Vector of boundarysurfaces (could be different implementations) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a04c10c9a7aea1924d779d392e29f94ff</Anchor>
    <Abstract>Shape of boundary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a96f2294e0c822ab216fe5ab7e17258c7</Anchor>
    <Abstract>Dimensionality. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryCapsule</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryCapsule</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCapsule.html</Path>
    <Abstract>A capsule Boundary implementation. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryCapsule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryCapsule</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCapsule.html</Path>
    <Anchor>a8a5ab010ef57a344a1cb0a233572b0e1</Anchor>
    <Abstract>Default constructor, will create a capsule with given diameter, and height equal to current grid...</Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>within</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryCapsule</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCapsule.html</Path>
    <Anchor>a9e462a1fbb221933735c35df1e7eb75d</Anchor>
    <Abstract>Check if coordinates are within boundary. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a20d2121527b207eed35f6719393e3499</Anchor>
    <Abstract>Get shape. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>acfa6640f65c432e339108887913539eb</Anchor>
    <Abstract>Get boundarysurfaces. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>abbac1843206a158e7d0a6e741cdc00c1</Anchor>
    <Abstract>Vector of boundarysurfaces (could be different implementations) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a04c10c9a7aea1924d779d392e29f94ff</Anchor>
    <Abstract>Shape of boundary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a96f2294e0c822ab216fe5ab7e17258c7</Anchor>
    <Abstract>Dimensionality. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryCubic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryCubic</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCubic.html</Path>
    <Abstract>A cubic Boundary implementation. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryCubic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryCubic</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCubic.html</Path>
    <Anchor>abba330bb75d623c8fa0884eeea937e63</Anchor>
    <Abstract>Default constructor, this will create a cube with given corners at edges of current CompartmentGrid...</Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>within</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryCubic</Scope>
    </TokenIdentifier>
    <Path>classBoundaryCubic.html</Path>
    <Anchor>a07b7fc5d0d09b0ce39e92e6b4bd2a7a4</Anchor>
    <Abstract>Check if coordinates are within boundary. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a20d2121527b207eed35f6719393e3499</Anchor>
    <Abstract>Get shape. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>acfa6640f65c432e339108887913539eb</Anchor>
    <Abstract>Get boundarysurfaces. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>abbac1843206a158e7d0a6e741cdc00c1</Anchor>
    <Abstract>Vector of boundarysurfaces (could be different implementations) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a04c10c9a7aea1924d779d392e29f94ff</Anchor>
    <Abstract>Shape of boundary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a96f2294e0c822ab216fe5ab7e17258c7</Anchor>
    <Abstract>Dimensionality. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Abstract>Represents an element of a BoundarySurface. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>a51b203260855060fea195fa02b1cb07c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>a4f0bec4466a42c311be8a3c1fc67cc52</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ace76817d750bb44c11edd918f1a8b78f</Anchor>
    <Abstract>return coordinates of boundary element </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ac84f39882c9994b1f842c5be9a03db9d</Anchor>
    <Abstract>Implement for all boundary elements Returns the distance from a given point to this boundary element...</Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stretchedDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>a15e0453be158c2c9774b06f27bf6ae9b</Anchor>
    <Abstract>Returns stretched distance, similar to distance above. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>aef0aa594a42167a34efbc757b47eb012</Anchor>
    <Abstract>Returns normal vector of point to plane. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRepulsionConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>aff96a5a1faa7df9b30899d9c3de84f4a</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreeningLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>a075dff05ab75cfd8be7f1a731030045a</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ab51302e10e3e2def98438234ba5bf801</Anchor>
    <Abstract>coordinates </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Abstract>A database for all BoundaryElements in the system. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>a734b7bbb4aa92a6fcbb0e13a2730542d</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>ad42f6c382956dee33a609da771fdce88</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>a87b287f3028a92ee56edba04d0293b6f</Anchor>
    <Abstract>Add a boundary element. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>a0392d6b0a27d7dfc57d39194165c3543</Anchor>
    <Abstract>Remove boundary element. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>a576c2f5e552686c2f40e70e206693f2a</Anchor>
    <Abstract>Get the instance of this singleton. </Abstract>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bedb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>af2b807e8b6e93168ee80bc57182b7b34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>a71f6fba6551793efc93ffc60a2b246a6</Anchor>
    <DeclaredIn>BoundaryElementDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElementDB</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementDB.html</Path>
    <Anchor>af537420197d88dcca76a50db7d7b7079</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementNeighborList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryElementNeighborList</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNeighborList.html</Path>
    <Abstract>An implementation of NeighborList for Bead-BoundaryElement interactions. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNeighborList</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNeighborList.html</Path>
    <Anchor>a84cc0a08aa4d985fa708ead757e90a93</Anchor>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNeighborList</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNeighborList.html</Path>
    <Anchor>a39ce6b818ef3fd745fae6b5d45e9c3aa</Anchor>
    <Abstract>Add neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNeighborList</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNeighborList.html</Path>
    <Anchor>a1af8a9581758cf2ddbf82318570876e5</Anchor>
    <Abstract>U pdate a neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNeighborList</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNeighborList.html</Path>
    <Anchor>af2114492e49ddeb5da9ddddd81afc4bd</Anchor>
    <Abstract>Get all Bead neighbors of a boundary element. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>aa64ee01bc18598fae6906ca6d5dcc7d6</Anchor>
    <Abstract>Remove a neighbor if possible. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a93a07ead9349edba7d763b483ec42847</Anchor>
    <Abstract>Re-initialize the neighborlist. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>af09da5281bc352cf028e39276ba5b68f</Anchor>
    <Abstract>The neighbors list, as a hash map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a94d5215ec2f93c2191cd0ca87e062c5e</Anchor>
    <Abstract>max distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a5fc2a03a950ca3867920527410ee8aa0</Anchor>
    <Abstract>min distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementNLContainer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Abstract>Holds a BoundaryElementNeighborList. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryElementNLContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>a6192ee44d946090df7d3518ae4035b9c</Anchor>
    <Abstract>Constructor, adds a cylinder neighbor list to the database. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BoundaryElementNLContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>a0621abe49cc7cf101e011ac3178a1519</Anchor>
    <Abstract>Destructor, removes boundary element neighbor list from the database. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>aa665161110c46e0a2af9f760c96afe19</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>ab75a418765e2601ec98e2159bab6ed84</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryFF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Abstract>An implementation of the ForceField class that calculates BoundaryElement repulsion and attraction to...</Abstract>
    <DeclaredIn>BoundaryFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Anchor>adc5b93d797c1a0b58445625311fc00af</Anchor>
    <Abstract>Initialize the forcefields (repulsion, attraction, etc) </Abstract>
    <DeclaredIn>BoundaryFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Anchor>a3a3c0dd0f82424d358c6b19abea9b743</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>BoundaryFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Anchor>a6ae273b9af97e9f50923958c486ec7f7</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>BoundaryFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Anchor>abf4fc3bd031457f68611c239f955da83</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>BoundaryFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_BoundaryInteractionVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryFF</Scope>
    </TokenIdentifier>
    <Path>classBoundaryFF.html</Path>
    <Anchor>ae2eab3aa7d1d57be9bd511249b54e074</Anchor>
    <Abstract>Vector of initialized boundary element interactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryInteractions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Abstract>Represents a BoundaryElement interaction with a Bead. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryInteractions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>aad77fa96cf328adb581dda20c68eb313</Anchor>
    <Abstract>Constructor, intializes the neighbor list needed. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>a78b34313aa441137288dea97cbf37912</Anchor>
    <Abstract>Compute energy of this interaction. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>a4280d211cec7be35730a7a7b6c5c4bd4</Anchor>
    <Abstract>Compute forces of this interaction. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>a112697f0d9dd8884ef67f1ce81e892da</Anchor>
    <Abstract>Compute auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>aece29831e11962476a9d6c016b5d4b86</Anchor>
    <Abstract>Get name of interaction. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>aa665161110c46e0a2af9f760c96afe19</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>a25e60fb01cc037ab06ba79edbf7073d4</Anchor>
    <Abstract>Name of interaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryParameters</Scope>
    </TokenIdentifier>
    <Path>structBoundaryParameters.html</Path>
    <Abstract>Struct to hold Boundary parameters for the system. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryCutoff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryParameters</Scope>
    </TokenIdentifier>
    <Path>structBoundaryParameters.html</Path>
    <Anchor>a90e9efca0ade0a603523945c49056edd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryParameters</Scope>
    </TokenIdentifier>
    <Path>structBoundaryParameters.html</Path>
    <Anchor>aeb92b89caa0bf379a2dd1e26a032bb75</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryParameters</Scope>
    </TokenIdentifier>
    <Path>structBoundaryParameters.html</Path>
    <Anchor>a75161f641debbb58f2829d8bba03b532</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryParameters</Scope>
    </TokenIdentifier>
    <Path>structBoundaryParameters.html</Path>
    <Anchor>aff24f2bccaef825eff7c3181ec1cefcc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryRepulsion</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>BoundaryRepulsion</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsion.html</Path>
    <Abstract>Represents a repulsive interaction between a BoundaryElement and Bead. </Abstract>
    <DeclaredIn>BoundaryRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsion</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsion.html</Path>
    <Anchor>ace56d8bd2b0287fdf1953366cdbef133</Anchor>
    <Abstract>Template specializations. </Abstract>
    <DeclaredIn>BoundaryRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsion</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsion.html</Path>
    <Anchor>a2b7426b4039634b5837e52aa22ca2f1c</Anchor>
    <Abstract>Compute forces of this interaction. </Abstract>
    <DeclaredIn>BoundaryRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsion</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsion.html</Path>
    <Anchor>a7fd265f247cfd0b15b8112654ab44b89</Anchor>
    <Abstract>Compute auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>BoundaryRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryInteractions</Scope>
    </TokenIdentifier>
    <Path>classBoundaryInteractions.html</Path>
    <Anchor>aece29831e11962476a9d6c016b5d4b86</Anchor>
    <Abstract>Get name of interaction. </Abstract>
    <DeclaredIn>BoundaryInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElementNLContainer</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElementNLContainer.html</Path>
    <Anchor>aa665161110c46e0a2af9f760c96afe19</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryRepulsion</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsion.html</Path>
    <Anchor>a155fc2c7cded4f928ebd0371276e8016</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryRepulsionExp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryRepulsionExp</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionExp.html</Path>
    <Abstract>A exponential repulsive potential used by the BoundaryRepulsion template. </Abstract>
    <DeclaredIn>BoundaryRepulsionExp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionExp</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionExp.html</Path>
    <Anchor>a43ddf5cd299610b06bf95d30e87c7310</Anchor>
    <DeclaredIn>BoundaryRepulsionExp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionExp</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionExp.html</Path>
    <Anchor>a4c837a8b9a90b3987cfb1a7000c4163c</Anchor>
    <DeclaredIn>BoundaryRepulsionExp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionExp</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionExp.html</Path>
    <Anchor>aa0da9a38c4a9dfcca390ea8350fde2b4</Anchor>
    <DeclaredIn>BoundaryRepulsionExp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryRepulsionLJ</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryRepulsionLJ</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionLJ.html</Path>
    <Abstract>A Lennard-Jones repulsive potential used by the BoundaryRepulsion template. </Abstract>
    <DeclaredIn>BoundaryRepulsionLJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionLJ</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionLJ.html</Path>
    <Anchor>ae2ed4a186c5f751e4f712bc527e745ac</Anchor>
    <DeclaredIn>BoundaryRepulsionLJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionLJ</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionLJ.html</Path>
    <Anchor>a0b0e10016d0bbb787bd250c7b06285d1</Anchor>
    <DeclaredIn>BoundaryRepulsionLJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryRepulsionLJ</Scope>
    </TokenIdentifier>
    <Path>classBoundaryRepulsionLJ.html</Path>
    <Anchor>a0cf407047ab1f4e601c6838919242566</Anchor>
    <DeclaredIn>BoundaryRepulsionLJ.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundarySpherical</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundarySpherical</Scope>
    </TokenIdentifier>
    <Path>classBoundarySpherical.html</Path>
    <Abstract>A spherical Boundary implementation. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundarySpherical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySpherical</Scope>
    </TokenIdentifier>
    <Path>classBoundarySpherical.html</Path>
    <Anchor>ae94c30c1bbb81df2cb57aef65eecfa10</Anchor>
    <Abstract>Default constructor, will create an sphere with given diameter. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>within</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySpherical</Scope>
    </TokenIdentifier>
    <Path>classBoundarySpherical.html</Path>
    <Anchor>a653f35719ff4baec5848053093978ee9</Anchor>
    <Abstract>Check if coordinates are within boundary. </Abstract>
    <DeclaredIn>BoundaryImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a20d2121527b207eed35f6719393e3499</Anchor>
    <Abstract>Get shape. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>acfa6640f65c432e339108887913539eb</Anchor>
    <Abstract>Get boundarysurfaces. </Abstract>
    <DeclaredIn>Boundary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundarySurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>abbac1843206a158e7d0a6e741cdc00c1</Anchor>
    <Abstract>Vector of boundarysurfaces (could be different implementations) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a04c10c9a7aea1924d779d392e29f94ff</Anchor>
    <Abstract>Shape of boundary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Boundary</Scope>
    </TokenIdentifier>
    <Path>classBoundary.html</Path>
    <Anchor>a96f2294e0c822ab216fe5ab7e17258c7</Anchor>
    <Abstract>Dimensionality. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundarySurface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Abstract>A boundary shape that holds BoundaryElements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundarySurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a87739ff516e9c879943263440e2c837d</Anchor>
    <Abstract>Constructor, does nothing. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BoundarySurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a15f38669a0a75aa5177e326090710907</Anchor>
    <Abstract>Destructor, removes boundary elements from DB. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a402dcf23f4f96110569d01e401edee5a</Anchor>
    <Abstract>Get boundary elements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a67f60b2d22fb67f097e98025803d3d34</Anchor>
    <Abstract>Vector of boundary elements that make up this surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>af3ed79310c6ba6cdc8e9f176bf463eb1</Anchor>
    <Abstract>Dimensionality of surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryType</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BoundaryType</Scope>
    </TokenIdentifier>
    <Path>structBoundaryType.html</Path>
    <Abstract>Struct to hold the parameters of the boundary. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryType</Scope>
    </TokenIdentifier>
    <Path>structBoundaryType.html</Path>
    <Anchor>a1c437edf87bf307f6f7023ef8fe75f1f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CBound</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Abstract>Represents a chemical object that is bound to a Filament. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a6fd75889661a816ef641a3963d83c2b8</Anchor>
    <Abstract>Constructor, just sets species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>adbee50be51a5fec03fe60a9ee7c5879f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a17d4b84d683b0b7bd75b793410fed18f</Anchor>
    <Abstract>Set first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>aad60656a671e4ffdc45b4c904fa7c320</Anchor>
    <Abstract>Get first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a01badbb54867fb99b6f3a895d555867a</Anchor>
    <Abstract>Set second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a1e706b6472c40ae1d98a64eda0acdadf</Anchor>
    <Abstract>Get second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a6c4d7b1b35d06725c8659424bf0c3f18</Anchor>
    <Abstract>Get compartment that this CBound is in. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_firstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a7ee4f44fd39c414be1f7b74b1031c1ce</Anchor>
    <Abstract>Corresponding first species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_secondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>ae6818ab861d273598a2507be75183e41</Anchor>
    <Abstract>Corresponding second species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a95a66719b898cf32e60ae7137186bbbf</Anchor>
    <Abstract>Compartment this CBound is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CController</Scope>
    </TokenIdentifier>
    <Path>classCController.html</Path>
    <Abstract>Used to intialize, control, and run the chemical components of a simulation. </Abstract>
    <DeclaredIn>CController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CController</Scope>
    </TokenIdentifier>
    <Path>classCController.html</Path>
    <Anchor>a8d10d61d353a0fc1ee9a531b4ec570db</Anchor>
    <Abstract>Constructor which sets subsystem pointer. </Abstract>
    <DeclaredIn>CController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CController</Scope>
    </TokenIdentifier>
    <Path>classCController.html</Path>
    <Anchor>a6f1523b66f627d2cecf6e32ad88aca58</Anchor>
    <Abstract>Initialize the ChemSim algorithm as well as the ChemManager. </Abstract>
    <DeclaredIn>CController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CController</Scope>
    </TokenIdentifier>
    <Path>classCController.html</Path>
    <Anchor>a45dad60ad7d810684d45385c45e5c876</Anchor>
    <Abstract>Run a number of chemical steps. </Abstract>
    <DeclaredIn>CController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_subSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CController</Scope>
    </TokenIdentifier>
    <Path>classCController.html</Path>
    <Anchor>a334a900bd08abab80bda555a155d234a</Anchor>
    <Abstract>A pointer to the subsystem. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Abstract>Holds all CMonomers and Reactions associated with it. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a0be01ef2708175a8a147ca45fd290b83</Anchor>
    <Abstract>Default constructor, sets compartment. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a71863b46b8fee12a2bfb03c12c52f5ee</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a82cdc245e542d14ceab4bb1df061dce4</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a715d736c871953942e497290867f591c</Anchor>
    <Abstract>Default destructor, explicitly removes CMonomers(including their species, rxns) Removes all reactions...</Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a5085f34b8f011a8be07b675a59d16d6f</Anchor>
    <Abstract>Clone, calls copy constructor. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>ab58156c4f6efbe01ad58540fef073930</Anchor>
    <Abstract>Get compartment. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a8a0a3292e299521278152921ebfbce51</Anchor>
    <Abstract>Set parent. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a53332923a74acb20fe192d870215a687</Anchor>
    <Abstract>Get parent. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCMonomer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a14fb0bbed36384ea72519e85ad4e91b8</Anchor>
    <Abstract>Add a monomer. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCMonomer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>ac6b0fb293c40045db64365debca77c1d</Anchor>
    <Abstract>Get monomer at an index. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a2bccfcdda7d524213d87066d1735fec9</Anchor>
    <Abstract>Get list of reactions associated. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactingCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>ac495877eae9e12fe90a9f4f85323d13f</Anchor>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCrossCylinderReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>aa1fd48d90a614bd82268367a548eb8d5</Anchor>
    <Abstract>Get map of reactions associated. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a9c358ffc39c2503fc63d67333976bf69</Anchor>
    <Abstract>Print. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a1e45d32541c9fb3145803cfbf0f93566</Anchor>
    <Abstract>Get size in number of monomers. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInternalReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a53bed608f1b287eca275e0833a1233f1</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCrossCylinderReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a5535278dcbc8498e3006b5176858bddd</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReactingCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>adeb2d133a53137e281b3134bfba5a4db</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInternalReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a9ee95b562068b9ffbc6c3b989be7af5f</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllInternalReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>ae35ab9042ad585fa7ea9ba32ecd6e60f</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCrossCylinderReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a4cb0c141bef0820e345b5e3c756fa163</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllCrossCylinderReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a7767880083ceda061babd4225557d7c3</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReactingCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a3aecfb4bb31a032ccb73200f71f40ed9</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllReactingCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a97f1758093c7275bdb17ac92b6a05117</Anchor>
    <Abstract>Reaction management function. </Abstract>
    <DeclaredIn>CCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_monomers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a2583ee1b23a42501ece73a2a35d92a31</Anchor>
    <Abstract>List of monomers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_internalReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a2f377a8697a4b4e053e747287e7a6a09</Anchor>
    <Abstract>REACTION CONTAINERS. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactingCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>afdf5de084ef7692b8ee75b078eca384f</Anchor>
    <Abstract>Set of ccylinders that this ccylinder has reactions with, but not ownership. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_crossCylinderReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a4263400be58cd0e11e0be99a42595c88</Anchor>
    <Abstract>Map of cross-cylinder reactions owned. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>ad8a1a406025aa82a072215aeb645c8c1</Anchor>
    <Abstract>Compartment this ccylinder is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a4439d9b805e3e206fd495540aa975346</Anchor>
    <Abstract>Parent cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CCylinder</Scope>
    </TokenIdentifier>
    <Path>classCCylinder.html</Path>
    <Anchor>a9951ded0fd9d228a2358bee18f8b61b6</Anchor>
    <Abstract>Max length of full Cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGMethod</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Abstract>For performing a conjugate gradient minimization method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a7a03bce08f9b88d41392894d071a1ff7</Anchor>
    <Abstract>Minimize the system. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a98910fcbef9f0af69076c955b887c254</Anchor>
    <Abstract>helpers for searching and bracketing </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ac091059dd8c44e8e4ec372767f18f1c9</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a947d6e38d75fe84a08f0fc071c94c225</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sign</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aea6d1129677d44e11fe2afb08b5ca52c</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeBracket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a276c57252367bec9fcf08ae1e7c7df71</Anchor>
    <Abstract>Gracketing function (from Numerical Recipes in C++, second edition) </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>abd5135fdbe89793bfb5926f9dcc6de7e</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa2af8a3ecad085f6c07f759bfe50ccb1</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradAuxSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab9c35ec6681e97472d0442a37163d46d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradDotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a531b7d0bc38b6372dc323185f51233dc</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>afe717a6a06f677933b55628ea4d0014d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeadsAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a885a9627cc4e8b2db8f3384f29cd4069</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiftGradient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a7e8d5b8d77aff6c4564c4b1d72ab5ace</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ace5a720fe0f5d6ffcefeb9f4afcfe28f</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa1fcbcd087af6fa3aa9aab67b0b60103</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binarySearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2d9a41ddbf7d54e6f89ee02966c7d85c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrackingLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a432019c8a52f50b0cb8cb39b937db978</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quadraticLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa77b006b710d67b248dd18517db7709c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSENERGYTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a084794992bdcec9285f6512b56e6c578</Anchor>
    <Abstract>Line search energy tolerance for all linesearch methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_energyChangeCounter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aadb778c988685e46d7d109350973d826</Anchor>
    <Abstract>Energy counter, for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENERGYCHANGEITER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aaee1e11813855cc66c360f7cb3d9665a</Anchor>
    <Abstract>Max number of iterations allowed where &quot;&quot;&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GRADTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ad0118dc4da7526f196a4b4172bba9625</Anchor>
    <Abstract>Gradient minimization tolerance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ae28b20ab18f9a0b7c6a1c443add1026e</Anchor>
    <Abstract>Lambda parameter for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a04127fd877e82fdf4f71cd3709581419</Anchor>
    <Abstract>Max lambda that can be returned, used in all methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAXDIST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a814ea57c3493f31f4ffd1cfa71795871</Anchor>
    <Abstract>Max distance beads can be moved, used only in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAREDUCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a0fa651bde0efa2e195ec6a367a0e346e</Anchor>
    <Abstract>Parameter used in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BACKTRACKSLOPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa7a8cad90cb1961052e323ded645b4c2</Anchor>
    <Abstract>Backtrack slope parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUADRATICTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>acd9c51fe93f6d563f731dd2e30eb7922</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EPSQUAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>adb2a688fe52a8729d703d81e52b9fdb3</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PHI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab6ca0706dec56fe6e35f15f9791b3e23</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2e7906b4b29a1b76dca43d56eaf2efac</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>af8587ca1c0394c244ce84fe8a6ad29ff</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemGillespieImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Abstract>Implements a slightly optimized version of the Gillespie algorithm. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a262281b68b8fdd026a8d28f57315b13d</Anchor>
    <Abstract>Ctor: Seeds the random number generator, sets global time to 0.0 and the number of reactions to 0...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>aa492ec3985b18a49352c47d8d12c3647</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a1c0c24205d43a0f70be04ead713d18f9</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a56b73cf9e60b5ebd9ead82d4b6dd1b1a</Anchor>
    <Abstract>Dtor: The reaction network is cleared. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a8deb307599919a7a2f8d597245761fdd</Anchor>
    <Abstract>Return the number of reactions in the network. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a8295735915237bae30d18cd6c31c058a</Anchor>
    <Abstract>Return the current global time (as defined in the Gillespie algorithm) </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a21fcdf4c1f9c8372ebf292c5b4006b4a</Anchor>
    <Abstract>Sets the global time to 0.0. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>syncGlobalTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ae1fb14fb7f6eaa6a3ce21c8917de4624</Anchor>
    <Abstract>Sets global time variable to ChemGillespieImpl&amp;#39;s global time. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>afc2764e90e24e70b48577525421815c0</Anchor>
    <Abstract>Add ReactionBase *r to the network. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ad818d065b15a17427793ab099ee987a8</Anchor>
    <Abstract>Remove ReactionBase *r from the network. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeTotalA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a9a5292f5ede270611175f2061ef5d2c1</Anchor>
    <Abstract>Unconditionally compute the total propensity associated with the network. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ae2a584042f976aa39399b700011abe43</Anchor>
    <Abstract>Returns a random time tau, drawn from the exponential distribution, with the propensity given by a...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a165ea88d8e31bbd994f6b81a4ceda67e</Anchor>
    <Abstract>Returns a random number between 0 and 1, drawn from the uniform distribution. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a4362f0c7944ab1f6b07d43a2efbe8951</Anchor>
    <Abstract>This function iterates over all RNodeGillespie objects in the network, activating all Reaction object...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a1db4057b9cc7f51c2c8e3d880349f8a3</Anchor>
    <Abstract>This method runs the Gillespie algorithm for the given number of steps. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>aefbeeeb2edf0d6726cf50c129e320e58</Anchor>
    <Abstract>This method is used to track the change in the total propensity of the network as the previously pass...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a5916a11b71b642edee290af9fc969b28</Anchor>
    <Abstract>This method is used to track the change in the total propensity of the network as the ReactionBase *r...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a389502576c64b5c4454a79c4b6ccd4b2</Anchor>
    <Abstract>Prints all RNodes in the reaction network. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a4474dce6c1c9074569cbdf75a991f82a</Anchor>
    <Abstract>This subroutine, along with with passivateReaction() and activateReaction() implements a cached versi...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_map_rnodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ab8d6bcef48ea219a249cebdb436dbc30</Anchor>
    <Abstract>The database of RNodeGillespie objects, representing the reaction network. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eng</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a27162663b9cf776971f2f32483c6fe95</Anchor>
    <Abstract>Random number generator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_exp_distr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a6ea99580ca00386e7db98a4059fbed0c</Anchor>
    <Abstract>Adaptor for the exponential distribution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_uniform_distr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>a6d37367996fad3157b63e6750ce6569b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ab709229380a7bd5458d6c4b382036a7a</Anchor>
    <Abstract>global time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_a_total</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>aeec18c37a7c9ad88199a78d613e7f8ac</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_n_reacts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemGillespieImpl.html</Path>
    <Anchor>ae66f4f44055f9af574bd334f78f92393</Anchor>
    <Abstract>number of reactions in the network </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistryAlgorithm</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemistryAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structChemistryAlgorithm.html</Path>
    <Abstract>Struct to hold chemistry algorithm information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>algorithm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structChemistryAlgorithm.html</Path>
    <Anchor>a79823d8025ebda7f40a0fa7683008ce2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structChemistryAlgorithm.html</Path>
    <Anchor>a6ba1dded2edadb96427909fcead6cdeb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numStepsPerMech</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structChemistryAlgorithm.html</Path>
    <Anchor>a8f1e4fb749816d74760c866b8beb0884</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistryData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Abstract>Struct to hold chemistry species and reaction information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a4faa68797fd22c5247b9b52a9057023a</Anchor>
    <Abstract>Reaction happening between bulk and diffusing species ONLY. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bulkReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a18d2b4d3d417507768bb50f7f43f427b</Anchor>
    <Abstract>Reaction happening between bulk species ONLY. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorWalkingReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a96d5d5289ae3651ab139b1de586b80e7</Anchor>
    <Abstract>MotorGhost walking reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>ae9c303af6cd6b503fe45515c4ee5132b</Anchor>
    <Abstract>SpeciesBulk parsed, in the form of a tuple which contains the name and initial copy number...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>acf21fd3143fa3bc4e0e1097ce15cb77c</Anchor>
    <Abstract>SpeicesDiffusing parsed, in the form of a tuple which contains name, initial copy number per compartm...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polymerizationReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a407c6129330a3cffc5afb45f83936945</Anchor>
    <Abstract>Filament reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depolymerizationReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>aac04b01fc7430d924ce82eee1835cbc7</Anchor>
    <Abstract>Depolymerization reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindingReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>aec9c915b7471596fa86d4c7ae2f0f8af</Anchor>
    <Abstract>Binding reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbindingReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a0509ae76d9f3eef9f676c4c8fbab17e7</Anchor>
    <Abstract>Unbinding reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkerBindingReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>ae3e27a2c950e196017c06f416ee94628</Anchor>
    <Abstract>Cross filament binding reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorBindingReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a2a4b2e949b6e0b8f32158cf101d24fa6</Anchor>
    <Abstract>MotorGhost reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a3389b17268aaefcba28539ec3b5e5e35</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>acab0ca129148f43eaa33847782411b3a</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>ab41e13ef134b8cb9066fff74ece920ca</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a273fd2565deae219bbd1fe3d557f53ba</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a627b89ad8dad87e03d249e5dc56eff5a</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryData</Scope>
    </TokenIdentifier>
    <Path>structChemistryData.html</Path>
    <Anchor>a8b638671871e8cc1ef65f2c7429d6254</Anchor>
    <Abstract>Filament species parsed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Abstract>Struct to hold chemistry parameters for the system. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numBulkSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a33f49ae4bed264d303989b7372b1ba4b</Anchor>
    <Abstract>Number of general species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numDiffusingSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a78116d90c15faebd400cb5c75ce00e26</Anchor>
    <Abstract>Number of general species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numFilamentSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>aa3ff68ed0be86482f1ea6d40b9d0fa1c</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numPlusEndSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a14a3adb276b758bb6f2e5d0a27f80b15</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numMinusEndSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a13d911b0639656b466b1ea13be22be00</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numBoundSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a47fbf96b070976e8e0b7bb25a381ea54</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numLinkerSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>af82c8c5d13f1e092d9eb69a7e8e3b5a4</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numMotorSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistryParameters</Scope>
    </TokenIdentifier>
    <Path>structChemistryParameters.html</Path>
    <Anchor>a6aecadee2f3bb6bc436395473447c485</Anchor>
    <Abstract>Number of filament related species. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistryParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemistryParser</Scope>
    </TokenIdentifier>
    <Path>classChemistryParser.html</Path>
    <Abstract>Used to parse all chemical information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistryParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemistryParser</Scope>
    </TokenIdentifier>
    <Path>classChemistryParser.html</Path>
    <Anchor>af054e9adc10a110223bdab9ed0a22adc</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemistryParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemistryParser</Scope>
    </TokenIdentifier>
    <Path>classChemistryParser.html</Path>
    <Anchor>a0918e9fb2e03ef37f920c1214b5286cf</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readChemistryInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemistryParser</Scope>
    </TokenIdentifier>
    <Path>classChemistryParser.html</Path>
    <Anchor>a655de1a88016755e9dffae5081d00963</Anchor>
    <Abstract>Reads chemical reactions and species from input file. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>adc64c51d84a8fe723f7b4f13ca4d37cd</Anchor>
    <Abstract>input file being used </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemistrySetup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemistrySetup</Scope>
    </TokenIdentifier>
    <Path>structChemistrySetup.html</Path>
    <Abstract>Struct to hold chem setup information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemistrySetup</Scope>
    </TokenIdentifier>
    <Path>structChemistrySetup.html</Path>
    <Anchor>a662524c2c7d29c8b83a6016559d256e5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Abstract>For initailizing chemical reactions based on a specific system. </Abstract>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>a47f584be692f31e39d7598f4f7488796</Anchor>
    <Abstract>Set the chemManager instance. </Abstract>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>ab3344ccf25c9ea90337e90bd9cf5ebff</Anchor>
    <Abstract>Initialize the compartment grid, based on the given simulation. </Abstract>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>a8c3958ed962520cff0e1d26b92596e68</Anchor>
    <Abstract>Initializer, based on the given simulation. </Abstract>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>ae85244eb50a4254d525eb749c44a96a6</Anchor>
    <Abstract>Add/update cross cylinder reactions that are within range. </Abstract>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>ac133ef2eabc4f5f002660f9d69e9c0fb</Anchor>
    <DeclaredIn>ChemManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pimpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemManager</Scope>
    </TokenIdentifier>
    <Path>classChemManager.html</Path>
    <Anchor>aa8fe0dad2d7ed00b8fd05e3ae6a2dd4a</Anchor>
    <Abstract>Store a pointer to a specific implementation of the initializer; no ownership. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemManagerImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classChemManagerImpl.html</Path>
    <Abstract>An abstract base class for initialization of all chemistry in the system. </Abstract>
    <DeclaredIn>ChemManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemManagerImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classChemManagerImpl.html</Path>
    <Anchor>a87a97fda042c8f326793321e2bc28e69</Anchor>
    <Abstract>Destructor does nothing. </Abstract>
    <DeclaredIn>ChemManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classChemManagerImpl.html</Path>
    <Anchor>a5b71cbf0b7919d573b6d7b148eb52d0a</Anchor>
    <DeclaredIn>ChemManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classChemManagerImpl.html</Path>
    <Anchor>af40877d374e6792e8a0c927acce43a06</Anchor>
    <DeclaredIn>ChemManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classChemManagerImpl.html</Path>
    <Anchor>a49530caf0062fa43dfd0123b30b22011</Anchor>
    <DeclaredIn>ChemManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemNRMImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Abstract>The chemical NRM implementation. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemNRMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a4c4a0173b3d449fd4abd651a686cd3e8</Anchor>
    <Abstract>Ctor: Seeds the random number generator, sets global time to 0.0 and the number of reactions to 0...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemNRMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a3005ba8e7b13e722ea4334d986bc5615</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a05a2c41acff85971fe6e054e29ef6d1d</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemNRMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>aca8d50551cdb52e67f1707df35a60c46</Anchor>
    <Abstract>Dtor: The reaction network is cleared. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>ac48e214385413158609cf016caaaac6b</Anchor>
    <Abstract>Return the number of reactions in the network. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a94194658c0574c4a8673683305db5eea</Anchor>
    <Abstract>Return the current global time (as defined in the NRM algorithm) </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a0f4c7dfb6010e457d2750b58ff03a623</Anchor>
    <Abstract>Sets global time to 0.0. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>syncGlobalTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>aceb3f809d0ab8f23d203cbb89cae6422</Anchor>
    <Abstract>Sets global time variable to ChemNRMImpl&amp;#39;s global time. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a1b20f4b9807c0b01f36f9222628c3267</Anchor>
    <Abstract>Return a pointer to the heap. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>aef0f433cc2c5c6c11b3a96801277424f</Anchor>
    <Abstract>Add Reaction *r to the network. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>ae7c7fa1121926da886e75e2015d208db</Anchor>
    <Abstract>Remove Reaction *r from the network. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a89100a7f4c925ba44fa07e198cac0b4f</Anchor>
    <Abstract>A pure function (without sideeffects), which returns a random time tau, drawn from the exponential di...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>afadda6d4f7fbb164c4ea487034930f47</Anchor>
    <Abstract>This function iterates over all RNodeNRM objects in the network, generating new tau-s for each case a...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>afe98b9ff5d172936cbacf683dcb16b9d</Anchor>
    <Abstract>This method runs the NRM algorithm for the given number of steps. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>aa0b3b3dad40946f941959f5fdc9ef625</Anchor>
    <Abstract>Prints all RNodes in the reaction network. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>ac41e52dad38e3f90d54bac55c887c01f</Anchor>
    <Abstract>This is a somewhat complex subroutine which implements the main part of the Gibson-Bruck NRM algoritm...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_map_rnodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a187b7d9676fc00d2e9aa59a26db1adb0</Anchor>
    <Abstract>The database of RNodeNRM objects, representing the reaction network. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_heap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>aae97d56d3951afd82e9d017762eeec62</Anchor>
    <Abstract>A priority queue for the NRM algorithm, containing PQNode elements. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eng</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a1d90a1097fe3ff8fca3eb5da4828d292</Anchor>
    <Abstract>Random number generator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_exp_distr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>af0e23969dfefcde35cf878c15e950300</Anchor>
    <Abstract>Adaptor for the exponential distribution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>a87649ab485a12e3af036913033ee7ca2</Anchor>
    <Abstract>global time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_n_reacts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemNRMImpl</Scope>
    </TokenIdentifier>
    <Path>classChemNRMImpl.html</Path>
    <Anchor>acbb18690cfdd71dd4be01747aaf169d0</Anchor>
    <Abstract>number of reactions in the network </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSignal</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Abstract>Manages callbacks for RSpecies and Reactions objects. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emitReactionSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>ab34f019b2a982650cafe7c272eeb626f</Anchor>
    <Abstract>Broadcasts signal corresponding to ReactionBase *r. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emitRSpeciesSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>af8123a3b376bd247c8f1c1c5a71dcb82</Anchor>
    <Abstract>Broadcasts signal corresponding to RSpecies *s. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSignalingRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a739d867462daa1a637842f21f04516fb</Anchor>
    <Abstract>Inserts a signal corresponding to RSpecies *s into the map. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSignalingReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a62e4675ca1857323bb3d1399546a9485</Anchor>
    <Abstract>Inserts a signal corresponding to ReactionBase *r into the map. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a2c9b051880948d7721609d16cd8efcb0</Anchor>
    <Abstract>Connect the callback, react_callback to a signal corresponding to ReactionBase *r. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>ad6c0c03f2cb4a12a870d356e72ca2163</Anchor>
    <Abstract>Connect the callback, RSpecies_callback to a signal corresponding to RSpecies *s. ...</Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a1e7e140afc97679d20371f0dd456c5f1</Anchor>
    <Abstract>Destroy signal corresponding to Reaction r. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a7c0fcba3edac3e3f222bedefd0825fcb</Anchor>
    <Abstract>Destroy signal corresponding to Reaction r. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a1d97f97bcba6af500da85f1422d89921</Anchor>
    <Abstract>Search the map for a signal corresponding to parameter, ReactionBase *r. Throw out_of_range exception...</Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSignal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a93bb74fad6645d059bf85957ea34f4a8</Anchor>
    <Abstract>Search the map for a signal corresponding to parameter, RSpecies *s. Throw out_of_range exception if ...</Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertSignalDoesNotExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>adfa6655413afc3a602a8f76ad6b71a98</Anchor>
    <Abstract>Assert that a signal corresponding to ReactionBase *r does not exist or throw runtime_error. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertSignalDoesNotExist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a17510f00f6775f8bfdf9a5ed2844251a</Anchor>
    <Abstract>Assert that a signal corresponding to RSpecies *s does not exist or throw runtime_error. </Abstract>
    <DeclaredIn>Signaling.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_map_RSpecies_signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a01513b0756cb765b0fd02a7e5497133d</Anchor>
    <Abstract>Keep track of signals corresponding to various rspecies. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_map_reaction_signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSignal</Scope>
    </TokenIdentifier>
    <Path>classChemSignal.html</Path>
    <Anchor>a750129c5a876c652e76e2a008b21b276</Anchor>
    <Abstract>Keep track of signals corresponding to various reactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSim</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Abstract>Used to manage running a network of chemical reactions. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a4b06224f48b2c5ef649a177931ecd5f6</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>aeb69f4407d4ae03a7e813be403247f7c</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a0f8a949bc07480c36b590128180e56e7</Anchor>
    <Abstract>SetInstance. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>affbdef9382a7c693a08f03f19e60d7fb</Anchor>
    <Abstract>After all initial reactions have been added via addReaction(...) method, invoke initialize() prior to...</Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a7ef2b5545a5250201b96c666b5ba6f92</Anchor>
    <Abstract>Add Reaction *r to the chemical network which needs to be simulated. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>aefddf4bedce37ad6d9afef1631df96a1</Anchor>
    <Abstract>Remove Reaction *r from the simulated chemical network. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a60bf7095bcc35a4865a2bb191b070fc9</Anchor>
    <Abstract>Run the chemical dynamics for a specific number of steps. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>acc1d8030a587b1996d18c0ea775c34f0</Anchor>
    <Abstract>Mainly used for debugging: print chemical reactions in the network at this moment. </Abstract>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a7a14b6058861d217c37f1d1f43b85db6</Anchor>
    <DeclaredIn>ChemSim.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pimpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSim</Scope>
    </TokenIdentifier>
    <Path>classChemSim.html</Path>
    <Anchor>a925fca4c4b0e800007163500b8b7909d</Anchor>
    <Abstract>Store a pointer to a specific implementation of stochastic chemical kinetics; no ownership. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSimImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Abstract>An abstract base class for algorithms that run stochastic chemical kinetics. </Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemSimImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>a80f4448613360c953bb57e25b4366737</Anchor>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>a8050874ed2646d6632ec9df1704c86c4</Anchor>
    <Abstract>After all initial reactions have been added via addReaction(...) method, invoke initialize() prior to...</Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>ae1ca0468b4564703d87d69f45ee6e1f9</Anchor>
    <Abstract>Add Reaction *r to the chemical network which needs to be simulated. </Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>a2561de21097a1b12bc60bc53a966e9fc</Anchor>
    <Abstract>Remove Reaction *r from the simulated chemical network. </Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>a3472132dc4b356ed76116c40af2a773d</Anchor>
    <Abstract>Run the chemical dynamics for a specific number of steps. </Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimImpl.html</Path>
    <Anchor>a1c0d35dbca7647319a27fa7eaff7388b</Anchor>
    <Abstract>Mainly used for debugging: print chemical reactions in the network at this moment. </Abstract>
    <DeclaredIn>ChemSimImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSimpleGillespieImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Abstract>Implements the simplest version of the Gillespie algorithm, without caching, etc. ...</Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSimpleGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a8a5a22813fccd094cb8d040fb444a38d</Anchor>
    <Abstract>Ctor: Seeds the random number generator, sets global time to 0.0. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemSimpleGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a57df6c42b5fa041c2a4b9524def57293</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a13493eb1d5c659ba5804662ae4a0c42c</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ChemSimpleGillespieImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a1648d1fd20701b1facd46a988e6cd6c7</Anchor>
    <Abstract>Dtor: The reaction network is cleared. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a2792a46a1679ba52440db752e88ec67d</Anchor>
    <Abstract>Return the number of reactions in the network. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a4bdf3dcae1a5e482c58e03f82291400b</Anchor>
    <Abstract>Return the current global time (which should be the sum of all previously occurred tau-s of the Gille...</Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a7f2a327db32bdb720e986a4bcc1f627f</Anchor>
    <Abstract>Sets global time to 0.0. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>syncGlobalTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>adb9fefe1b19d4fb2ad8f905886f06ad8</Anchor>
    <Abstract>Sets global time variable to ChemSimpleGillespieImpl&amp;#39;s global time. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a6d7ab2e4669fa0e0f226eaa3b548d7ef</Anchor>
    <Abstract>Add ReactionBase *r to the network. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a86175630cf6a1a9344be5a3db7a5e551</Anchor>
    <Abstract>Remove ReactionBase *r from the network. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeTotalA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>aefcfc018e2aef74949240ef9209b563a</Anchor>
    <Abstract>Compute the total propensity of the reaction network, by adding all individual reaction propensities...</Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a9946ad8f0a1976d837a97966a2d8f0bd</Anchor>
    <Abstract>A pure function (without sideeffects), which returns a random time tau, drawn from the exponential di...</Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>ab9fb1f953021fc92bfe1a0564587c124</Anchor>
    <Abstract>This function generates a random number between 0 and 1. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a33a705cbb753c22e9cfcd4ef23c1e73d</Anchor>
    <Abstract>This function needs to be called before calling run(...). </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>ad74138f20a8d916f30b0cb4342c27c71</Anchor>
    <Abstract>This method runs the Gillespie algorithm for the given number of steps. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a88a438f0f52eae068ab81492427a4458</Anchor>
    <Abstract>Prints all Reaction objects in the reaction network. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a21e4c513f9d668b6c0df7fc52e9d5430</Anchor>
    <Abstract>This subroutine implements the vanilla version of the Gillespie algorithm. </Abstract>
    <DeclaredIn>ChemSimpleGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a5f852154e8298303a41f33fc5d77a3c7</Anchor>
    <Abstract>The database of Reaction objects, representing the reaction network. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eng</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a6f236c80a1fe061e667f45aa36ff8744</Anchor>
    <Abstract>Random number generator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_exp_distr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a87869183785fdf1117241ddc72717d3d</Anchor>
    <Abstract>Adaptor for the exponential distribution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_uniform_distr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a7dcca7be34a807bc6e9fbc7002207456</Anchor>
    <Abstract>Adaptor for the uniform distribution. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ChemSimpleGillespieImpl</Scope>
    </TokenIdentifier>
    <Path>classChemSimpleGillespieImpl.html</Path>
    <Anchor>a3ecc9f9f89d6fe3f543ee71a5a619974</Anchor>
    <Abstract>global time </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLinker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Abstract>To represent the chemical component of a Linker. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a553ee3b26b16b70deaf78b153af39583</Anchor>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a1735e2ca0212e6e1c0696d1f21ffebd5</Anchor>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a8c28d338aed63e709cc2c9a449fd9d19</Anchor>
    <Abstract>Copy constructor, standard. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a6aa5d662e52c5c0d726616647210f467</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>ab1fba3ef14c902ed103e54c44ffa7538</Anchor>
    <Abstract>Clone, calls copy constructor. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a2b0219ae91d2312bbf0c998b4d0b124e</Anchor>
    <Abstract>Set parent. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a5a1435f2035ecdadcc35b4ae90199865</Anchor>
    <Abstract>Get parent. </Abstract>
    <DeclaredIn>CLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a17d4b84d683b0b7bd75b793410fed18f</Anchor>
    <Abstract>Set first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>aad60656a671e4ffdc45b4c904fa7c320</Anchor>
    <Abstract>Get first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a01badbb54867fb99b6f3a895d555867a</Anchor>
    <Abstract>Set second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a1e706b6472c40ae1d98a64eda0acdadf</Anchor>
    <Abstract>Get second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a6c4d7b1b35d06725c8659424bf0c3f18</Anchor>
    <Abstract>Get compartment that this CBound is in. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_firstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a7ee4f44fd39c414be1f7b74b1031c1ce</Anchor>
    <Abstract>Corresponding first species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_secondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>ae6818ab861d273598a2507be75183e41</Anchor>
    <Abstract>Corresponding second species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a95a66719b898cf32e60ae7137186bbbf</Anchor>
    <Abstract>Compartment this CBound is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CLinker</Scope>
    </TokenIdentifier>
    <Path>classCLinker.html</Path>
    <Anchor>a5cb1a9ff49e6d394ab980ff01af23ebc</Anchor>
    <Abstract>Pointer to parent. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMonomer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Abstract>Rpresents a container for all Species that could be contained in a particular filament element at a g...</Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMonomer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a760d83db89ce412da21635983e18241d</Anchor>
    <Abstract>Constructor does nothing but memset arrays. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CMonomer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a6cfd5fad73b8f76fc45205839abe11bd</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMonomer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>aa4592f7871a18ec48697cd8d626d3c7b</Anchor>
    <Abstract>Copy constructor This constructor will create a new CMonomer, identical to the copied, in a new compartment. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a6145f013c6830c4aded4fb5677f38054</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>adbb775dba38bc68856db9529826f9676</Anchor>
    <Abstract>Clone a CMonomer. Transfers all CBounds to the new CMonomer. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a72138cb91d962aed900869f4096afd92</Anchor>
    <Abstract>Print the Species. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a3cdb15e3d7f2143217ad3b002337e8b1</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a3c2a4890f5a040cdf19a150030db434c</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>ace655af18907f289683d00f6e7597b71</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a64f136517ed2ff2d15aaa5c9bd4d9153</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a06bfb6c661455b50d8f125cec4a06485</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a57b8bf84368ddc0f8bfafaeaec508132</Anchor>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>ad69c6060f307b00463bf59b697846344</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a1923cdc3adc910d1eb83bb6873b9864c</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a61893c36bc55172a9a534b1caebc7b8b</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a237d02b3b2e0ecf83ed798f2c0107250</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a71d55b070c58b90f439c0f9fd14efe4f</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a8cfa76dbac04ef9eeca54b93208e064f</Anchor>
    <Abstract>Get Species at a specific index. </Abstract>
    <DeclaredIn>CMonomer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>aa6d658b1fb0e90a549bfc0dedfc3b2a5</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a536f3c948c52d79c73fe406048071e7b</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a76ec86baa9b2f8e4711389481b191584</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>a24078fb0d0c2d60e79af1cfea30b0d79</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>aa549a348f1f8e77283c4aaa2e555aca1</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMonomer</Scope>
    </TokenIdentifier>
    <Path>classCMonomer.html</Path>
    <Anchor>af3b42603df2c3e4dff67457bad776fd6</Anchor>
    <Abstract>Species array. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMotorGhost</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Abstract>A class to represent the chemical component of a MotorGhost. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>af158e8f7892b3b283d25a8750539a854</Anchor>
    <Abstract>Default constructor and destructor. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>abb169feb64336df9008c4f736c09a9b4</Anchor>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>ad36a0bc57074dd813a0bf7ad75c6b0d7</Anchor>
    <Abstract>Copy constructor, standard. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>afee33dd40280b1b63cd918db1de46df8</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>a73ff98b373999b7913d9629ac290240c</Anchor>
    <Abstract>Clone, calls copy constructor. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>a1e18f9a0e0dcc0f2b4b140c3fb60bea8</Anchor>
    <Abstract>Set parent. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>a7b5661e4a7bc38ce2657af40b9ff7d29</Anchor>
    <Abstract>Get parent. </Abstract>
    <DeclaredIn>CMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a17d4b84d683b0b7bd75b793410fed18f</Anchor>
    <Abstract>Set first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>aad60656a671e4ffdc45b4c904fa7c320</Anchor>
    <Abstract>Get first species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a01badbb54867fb99b6f3a895d555867a</Anchor>
    <Abstract>Set second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a1e706b6472c40ae1d98a64eda0acdadf</Anchor>
    <Abstract>Get second species. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a6c4d7b1b35d06725c8659424bf0c3f18</Anchor>
    <Abstract>Get compartment that this CBound is in. </Abstract>
    <DeclaredIn>CBound.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_firstSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a7ee4f44fd39c414be1f7b74b1031c1ce</Anchor>
    <Abstract>Corresponding first species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_secondSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>ae6818ab861d273598a2507be75183e41</Anchor>
    <Abstract>Corresponding second species on Filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CBound</Scope>
    </TokenIdentifier>
    <Path>classCBound.html</Path>
    <Anchor>a95a66719b898cf32e60ae7137186bbbf</Anchor>
    <Abstract>Compartment this CBound is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classCMotorGhost.html</Path>
    <Anchor>a248b8fee5ba1d85c989f666e3a908261</Anchor>
    <Abstract>Pointer to parent. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compartment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Abstract>A container or holding Species and Reactions. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a582e5f8a00d5a30f07f7f653637d7aef</Anchor>
    <Abstract>Default constructor, only takes in number of dimensions. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a82f6252038138287faebd6e9a781a2f3</Anchor>
    <Abstract>Constructor which clones another compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a2a740ffd02de79301b5d79e7f2fde461</Anchor>
    <Abstract>Assignment operator. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae464fb54124c6a47eeeb49609a5ae5aa</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae9bdaf50db8e780d3614be3bc50e9171</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a37bd8d3a6d3a21bf50716979c6694adb</Anchor>
    <Abstract>Applies ReactionVisitor v to every ReactionBase* object directly owned by this node. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a010db2fb85e77af1c48563f60517b4cc</Anchor>
    <Abstract>Activate a compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deactivate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a664066790b959536c4a6ef47f11a139d</Anchor>
    <Abstract>Deactivate a compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa5cda379f9cdc7568d2006115e5836ea</Anchor>
    <Abstract>Check if compartment is activated. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a53ffa734f488ad20d02fcf5a38efb024</Anchor>
    <Abstract>Setter and getter for coordinates. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aee0c442e684f69eae8a021c28aa5fadf</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a4201fd3e431643d183b6afd586540d29</Anchor>
    <Abstract>Removes all reactions from this compartment, diffusing and internal. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a4db53aff27637cd9bba72d097dd57c39</Anchor>
    <Abstract>Clear all species from this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearNeighbouringReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>af1827a8dc6ef0531ff72b49dc0832368</Anchor>
    <Abstract>Remove diffusion reactions between this compartment and its neighbors. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFromNeighboursList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ac81869e9e5c1f744bef1d7ec41e611f7</Anchor>
    <Abstract>Remove this compartment from the neighbor list. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ac26aefc0e11a0bf2065626bc47b5de08</Anchor>
    <Abstract>This is a species container. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a87a624dd83cc42e752454645a5484f6e</Anchor>
    <Abstract>This is a reaction container. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aee4d7b2def05be8e5e75f6744c7b3940</Anchor>
    <Abstract>Returns compartment name. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a9658205238f8d417eb29c5d966026844</Anchor>
    <Abstract>Returns the number of species in this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfInternalReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a154befbf1b4afd890a90139dbcfc4aab</Anchor>
    <Abstract>Returns the number of internal reactions in this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a2a8090f8a6df14b5d8ab528425333cca</Anchor>
    <Abstract>Returns the total number of reactions in this compartment, diffusing and internal. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a848f62b2bb65399b8d403f47e4519891</Anchor>
    <Abstract>Species finder functions. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a359656825453c3e0d207c9214e7458a2</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa6fa444425eb298857d4d90838af5bb0</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a34f6affea6b6820e8b6e4097f1cec7d1</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a84f65b66e75e08aac1de34b80b169a8f</Anchor>
    <Abstract>Remove species from this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarInternalReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a3b3b72cfbd524cc951bf10984a045678</Anchor>
    <Abstract>Finds a similar internal reaction, see ReactionBase function. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarDiffusionReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ade2b829093c85d8f330265bdd7a46af9</Anchor>
    <Abstract>Finds a similar diffusion reaction, see ReactionBase function. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDiffusionReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a4cc28cd9d15bb882ec89d8bc5cdaea43</Anchor>
    <Abstract>Remove all diffusion reactions that have a given species. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInternalReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a2a72730670bbec0024b6aea007171bd4</Anchor>
    <Abstract>Remove all internal reactions that have a given species. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDiffusionReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a45ae8192f43b509da4c41b0fccd79522</Anchor>
    <Abstract>Remove a diffusion reaction. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeInternalReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a44d0d42e7fa397e5e35a8af6adc02344</Anchor>
    <Abstract>Remove an internal reaction. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae402cb5f64922f3d82b317faddf2d7f6</Anchor>
    <Abstract>Add a unique species pointer to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInternalReactionUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>af610f5e8a1ba23fa026f301ccfef6e19</Anchor>
    <Abstract>Add a unique internal reaction pointer to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDiffusionReactionUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>adb22adbaf1306410febd59d752ea0f90</Anchor>
    <Abstract>Add a unique diffusing reaction pointer to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ac03fcd8679f2ed9e3aebae8732d9ceeb</Anchor>
    <Abstract>Add a diffusing species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a688827f1d21495c14dd57d0c633771ae</Anchor>
    <Abstract>Add a filament species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a6ce10e213a29c1bd22f5365e251e20f6</Anchor>
    <Abstract>Add a plus end species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae62998fd1735861d44e05c108c860f95</Anchor>
    <Abstract>Add a minus end species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a2379ea5d9c4c12b307a5f209dfcbbdd8</Anchor>
    <Abstract>Add a bound species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a8dd9a0be22dc34bcd5332fd6118d29ca</Anchor>
    <Abstract>Add a linker species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a77546142c0deb95f7b9ecdd54b2ba8fa</Anchor>
    <Abstract>Add a motor species to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInternalReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a0d1d665e2823cf70cae3005a50ebc1e2</Anchor>
    <Abstract>Add an internal reaction to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addInternal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae6ad2810e9c10118ce24bd27acdbfa39</Anchor>
    <Abstract>Add an internal reaction to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDiffusionReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a3ebe5c29d9e7f334c7f0da97d5a60dad</Anchor>
    <Abstract>Add a diffusion reaction to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a5a4a2e9ca3eb7c51b01e7ff6e7b2f38a</Anchor>
    <Abstract>Add a bead to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a693313a08cc84b7da667ca3c8d1886fa</Anchor>
    <Abstract>Remove a bead from this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBeads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa02b9ef648f4e86ebb7e533d349f3943</Anchor>
    <Abstract>get the beads in this compartment </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ab2467905fdf5783fd4c7a768f4d2fe09</Anchor>
    <Abstract>Add a boundary element to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a3e2df6771a3a3ada60512292f8c20435</Anchor>
    <Abstract>Remove a boundary element from this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ada1b4df7834781271050ace7f523a114</Anchor>
    <Abstract>Check if boundary element is in this container. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a50b1fa7c7e6a9c025d6455dd7357edcb</Anchor>
    <Abstract>get the boundary elements in this compartment </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae72a865b38e357d3e1d1ac97207daca9</Anchor>
    <Abstract>Add a cylinder to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a7f4b005a21ffa619e400b83858bded1a</Anchor>
    <Abstract>Remove a cylinder from this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>abda8621d0549bf5e6b379ca8dfc876e5</Anchor>
    <Abstract>get the cylinders in this compartment </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffusionRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a24add0f3aab54b2eb28642f17a1600ab</Anchor>
    <Abstract>Get the diffusion rate of a species. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiffusionRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae08ca5d423b24cd7a53fcd88670141a1</Anchor>
    <Abstract>Set the diffusion rate of a species in the compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiffusionRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a76a169ce2ca293b6d26d1090c5eda6f0</Anchor>
    <Abstract>Set the diffusion rate of a species in the compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiffusionRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a2b2062ef6bd7abb8903307415ce4d658</Anchor>
    <Abstract>Set the diffusion rate of a species in the compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a0c5f51cbf499c47977f661237536cce7</Anchor>
    <Abstract>Add a neighboring compartment to this compartments list of neighbors. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aefaf5a8cf81768c3ddc67c4fa5b77b19</Anchor>
    <Abstract>Remove a neighboring compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa6a6d1464a9467a70d570360a72e5b53</Anchor>
    <Abstract>Clone the species values of another compartment into this one. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>af8538b90eadb44d2e9fec4bdca5f2fc0</Anchor>
    <Abstract>Clone the reaction values of another compartment into this one. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneSpeciesReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a584356f59eedb57136647019a66df110</Anchor>
    <Abstract>Clone both the species and compartments into this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ad6aff171dd3aabf3a4d1a09597dc8ed8</Anchor>
    <Abstract>Clone a compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateDiffusionReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>acd3bb41d1aa7d50702b56e49ac6b8ab0</Anchor>
    <Abstract>Generate diffusion reactions between this compartment and another. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateAllDiffusionReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ad5513d9ac3386773e4cdf4df7656b1b4</Anchor>
    <Abstract>Generate all diffusion reactions for this compartment and its neighbors. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a7ba3cb0a0dde7a469c179869e552a2ca</Anchor>
    <Abstract>Gives the number of neighbors to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>af0407bce7d4c28f95d4325b61849f97b</Anchor>
    <Abstract>Get the species container vector. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ae071029f358d287fc809fda71579ecec</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalReactionContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a70efce98051a16c78a9198664d58c5af</Anchor>
    <Abstract>Get the internal reaction container vector. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInternalReactionContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa8eafac52244f896c70c406c825900bc</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffusionReactionContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a3325e1dfc31a11938ebdbb78c00841a8</Anchor>
    <Abstract>Get the diffusion reaction container vector. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffusionReactionContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>af65cbf7133eac499a37ab6ac30eb333f</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ad094a998b6b9046b37a8058fc9d47ada</Anchor>
    <Abstract>Get the vector list of neighbors to this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a81fec9fb0f181c32dc296ab34b2959ab</Anchor>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a8479bfb1332a4ed42958a118fe8b2853</Anchor>
    <Abstract>Print the species in this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>abd31de24a008bb534858b627a3a53040</Anchor>
    <Abstract>Print the reactions in this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a1f1ea88f53d402aa22e68cfdcc0a9333</Anchor>
    <Abstract>Check if all species are unique pointers. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChemSimReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a6250da56cd928836b223b8fc90b38580</Anchor>
    <Abstract>Adds the reactions of this compartment to the ChemSim object. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a79ff3378bf4da9e9fe88669ef1a91ad0</Anchor>
    <Abstract>Print properties of this compartment. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a95e7acd5a3b639050b25fb3b84a96689</Anchor>
    <Abstract>Container with all species in this compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_internal_reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a76ec81e3474bacae837cce0081a03039</Anchor>
    <Abstract>Container with all internal reactions in compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_diffusion_reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a65651faf3e83b092235afdba261cf820</Anchor>
    <Abstract>Container with all diffusion reactions in compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aef4d7ce0676c4ddb03fa02b90973c41c</Anchor>
    <Abstract>Neighbors of the compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_diffusion_rates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a92081814841d9bacca088eb55381f89c</Anchor>
    <Abstract>Diffusion rates of Species in compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa582b3db6d4bef92ec7c7b7e639d0a09</Anchor>
    <Abstract>Set of boundary element that are in this compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_beads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a9da94d9a1b486007a4572865dcfcd474</Anchor>
    <Abstract>Set of beads that are in this compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>aa2ff682579186097ddf444b3dafb1370</Anchor>
    <Abstract>Set of cylinders that are in this compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a065b6c2a3018b3de7404f56819908d2e</Anchor>
    <Abstract>Coordinates of this compartment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_activated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a5a4d3757d80d9ffce75c4012a64962a8</Anchor>
    <Abstract>The compartment is activated for diffusion. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>ab45e5038a170f915298923d7a658ee8c</Anchor>
    <Abstract>Returns true if two Compartment objects are equal. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>Compartment</Scope>
    </TokenIdentifier>
    <Path>classCompartment.html</Path>
    <Anchor>a0809c1fc222c0157f44da8e41b01c09a</Anchor>
    <Abstract>Return true if two Compartment are not equal. </Abstract>
    <DeclaredIn>Compartment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentGrid</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Abstract>A simple n-dimensional grid of Compartment objects (singleton). </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentGrid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a45639e5970a031560bf33cd79d46879f</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a15d98f70f2efa2a7b7c941e0d37b98a9</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>ae388f0cfd0d78d0ebbe0583bc3d9ec41</Anchor>
    <Abstract>Get name of this compartment grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>ae67feded7f744f25a1f8a2e621bb4dbd</Anchor>
    <Abstract>Activate all compartments. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProtoCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a3d698dcd594e8371254dbb38f788981d</Anchor>
    <Abstract>Get the protocompartment from this grid, in order to configure and then initialize. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProtoCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a3d2352ea05bb80d7cf21a2b112d6d500</Anchor>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChemSimReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a7d6e0022747144fc6ce24ec667ea7638</Anchor>
    <Abstract>Add reactions to all compartments in the grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a1c94761f08339f43d77cc6b90504dc49</Anchor>
    <Abstract>Print properties of this grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a7c7a9604dfc4d45b0cc928ad36e6856b</Anchor>
    <Abstract>Add a bulk species to this grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a1563cfc41b6a11909d583848140d3a50</Anchor>
    <Abstract>Remove bulk species. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesBulkByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a33af231bf3d92bf15f43e62d76332989</Anchor>
    <Abstract>Bulk species finder functions. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesBulkByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>aa4cf54c38fc995c284c3f55cb274810f</Anchor>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBulkReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>ac543574faefc1bb4cfe46a3d175ef194</Anchor>
    <Abstract>Add a bulk reaction to this compartment grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a6a10c77ee2f648af7c36956fdacf168b</Anchor>
    <Abstract>Add an bulk reaction to this compartment grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBulkReactionUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a280e136b6fea6d7a3d1ac781cb57cba1</Anchor>
    <Abstract>Add a unique bulk reaction pointer to this compartment. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBulkReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a8898f174519f416da6280ce1e0ecc448</Anchor>
    <Abstract>Remove all bulk reactions that have a given species. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeBulkReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a31f060cbf821397d7b8817359c410419</Anchor>
    <Abstract>Remove a bulk reaction. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af36fb9ed49f7fc262c68b41f2b9a56f6</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aee77e531ab9ccb8dcea12a307bd75539</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInstance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a9ad80c9605a524cda4a018b93bdefeb6</Anchor>
    <Abstract>Set instance of grid (should only be done at beginning of program) </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a67c532a92e0144cac52282cf34a920f0</Anchor>
    <Abstract>Get instance of grid. </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentGrid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>af304aa05f7bccd48f955aff57659e6ee</Anchor>
    <Abstract>singleton instance </Abstract>
    <DeclaredIn>CompartmentContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_prototype_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a0dd5ebffc52820b92a932335048a11a7</Anchor>
    <Abstract>Prototype compartment, to be configured before initialization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_bulkSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>ae514970414a3ffc396e734f67a08e961</Anchor>
    <Abstract>B ulk species in this grid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_bulkReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a7b6e64e307a53d9f3395d2dab865c119</Anchor>
    <Abstract>Bulk reactions in this grid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_numCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>a3f56638a21f59ed7877b0abbf0de1cde</Anchor>
    <Abstract>Num compartments in the grid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CompartmentGrid</Scope>
    </TokenIdentifier>
    <Path>classCompartmentGrid.html</Path>
    <Anchor>ac0eb2be3df5e78d5fe6dbfb75b717866</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Component</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Abstract>The base class for the Composite pattern hieararchy. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Component</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a8775db6d1a2c1afc2e77cd3c8f39da6f</Anchor>
    <Abstract>Default Constructor; Parent is assigned to nullptr. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Component</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>afc49d76b286b963c6505809566060440</Anchor>
    <Abstract>Virtual Destructor. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a06be9328d615af20a155e9060def1470</Anchor>
    <Abstract>When this function is applied to a ConditionalVisitor v, the corresponding v.visit(this) is called...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0f1cd7534ba27c165a1574adc8d422dd</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>aa911f6c2be71a33eeeb44f03c82cd421</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a42566ba7ad92afe0d84d9d1d4e05745e</Anchor>
    <Abstract>Returns the number of children of this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a14bcb60799865752cd293fba2076d84a</Anchor>
    <Abstract>Returns true if this node is a Composite node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ae99bcb165a9403e64ffea2b840192b4c</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a116a02dd48baa6bf46c1162998548814</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a42dd891a934150f6d6ef74b9850d4b5c</Anchor>
    <Abstract>Return a string indicating the full name of this node (presumably used mainly for debugging) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a38336c92dacb78175dfc7746bde5055d</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ae4b35cc8ce749e1219bec0eeea16b4bc</Anchor>
    <Abstract>Return the number of Species contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a446ee3fa9e36a6b56642a9d2a14d983d</Anchor>
    <Abstract>Return the number of ReactionBase objects contained under this node&amp;#39;s hieararchy. ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a74c227d53f7fd87f14421326ee63045a</Anchor>
    <Abstract>The parent of this object. May be a nullptr if this object has no parent. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Composite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Abstract>The aggregating class for the Composite pattern. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Composite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad28832d957183a7f08dec72e6040db0a</Anchor>
    <Abstract>Default Constructor does nothing. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Composite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aff9a67fcee895f61ba381664e980e461</Anchor>
    <Abstract>Virtual Destructor does nothing. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a0219bb2449696a3ab84ff24e4462e2c2</Anchor>
    <Abstract>Returns the full name of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af36fb9ed49f7fc262c68b41f2b9a56f6</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aee77e531ab9ccb8dcea12a307bd75539</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a46a76879df0f619b5b4d4861d4079789</Anchor>
    <Abstract>Child node pointers of this composite node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConjugateGradient</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>ConjugateGradient</Scope>
    </TokenIdentifier>
    <Path>classConjugateGradient.html</Path>
    <Abstract>An implementation of Minimzer. </Abstract>
    <DeclaredIn>ConjugateGradient.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equlibrate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ConjugateGradient</Scope>
    </TokenIdentifier>
    <Path>classConjugateGradient.html</Path>
    <Anchor>a148926af1f93953c6377def3c5a26513</Anchor>
    <Abstract>Equilibrate a system based on given configuration and force-fields. </Abstract>
    <DeclaredIn>ConjugateGradient.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_CGType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ConjugateGradient</Scope>
    </TokenIdentifier>
    <Path>classConjugateGradient.html</Path>
    <Anchor>a9e3c6e755ad09adc3ee4d2dafe0917d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Abstract>Used to initialize, manage, and run an entire simulation. </Abstract>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>ab2466b5e31e9a19431fe36fa955fa8df</Anchor>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a0ab87934c4f7a266cfdb86e0f36bc1b5</Anchor>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a951b2e6eeec2ca5a966f4a84bfc7c7d1</Anchor>
    <Abstract>Initialize the system, given an input and output directory. </Abstract>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a692f0f5dc600cdcb79786a31cf283ce1</Anchor>
    <Abstract>Run the simulation. </Abstract>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a5e23fe755f10aa6437d6eaccf4ec1ee1</Anchor>
    <Abstract>Update the system, called in run. Will update all positions and reactions. </Abstract>
    <DeclaredIn>Controller.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_subSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a7798357b742dc62782fd7dd26b23528e</Anchor>
    <Abstract>A pointer to the subsystem that this controls. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a14e932b02f4c7029bfc1db1ad873d439</Anchor>
    <Abstract>Chemical controller used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>ac886eba3ef8e4ee613f81459c664bd26</Anchor>
    <Abstract>Mechanical controller used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>aa3ad741715e044ec7501b23c885bba57</Anchor>
    <Abstract>Geometry controller used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a0a7ccbe9ed377d7b12fde93c86b97da1</Anchor>
    <Abstract>Input directory being used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_outputDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>a4220a82387be41130d63223504a2cffe</Anchor>
    <Abstract>Output directory being used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_numSteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>adae40ed2ed9f44879930207bcff76ed0</Anchor>
    <Abstract>Number of chemical steps we are running. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_numStepsPerMech</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Controller</Scope>
    </TokenIdentifier>
    <Path>classController.html</Path>
    <Anchor>aa68939f419d5c6062f303ee85f24ad08</Anchor>
    <Abstract>Number of chemical steps before mechanical equilibration. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CrossFilamentRxnManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Abstract>To store cross-filament reactions, including Linker and MotorGhost binding. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CrossFilamentRxnManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a773d12131a70e970f6fee166f00bfb39</Anchor>
    <Abstract>Unique ID of this reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CrossFilamentRxnManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a3fff6c280b187f0c7641bec808ce6248</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>af43dae7fcbd4934577b5446034d65bfa</Anchor>
    <Abstract>Add this chemical reaction to two ccylinders if within the reaction range. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aeb9207c18bb40c33d9c8fe99a006401d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a7fa04502185124176a72fb2f3965c698</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aa5527049ea757ea2b22fca486d3bf08d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ad1c41fba7b85d5eedee363b8eeb472d4</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a935b5ee4f96177021901e55ab213665e</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a653389d857c83927af4e621963af3ab1</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a0822316b3a9bea17ceecc12231ae8eee</Anchor>
    <Abstract>Minimum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a8027479055b5bc902c2f3eab39fc6d50</Anchor>
    <Abstract>Maximum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a97369fa2db6318dd7b60c3772087b4e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ae13a9fd2fddc2cf5e21df314aba43fdf</Anchor>
    <Abstract>A subsystem pointer to intialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleManagerImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a65026d22c7682cf798dda845cac7573a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Abstract>A container to store a MCylinder and CCylinder. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>ac77d1ec51d1e6ea5e04ba57167b74f7c</Anchor>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Cylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a05ab556f0ae3cd6e99d9d1f3caca80b3</Anchor>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>afd6f95caf16bcae5b6c736f714cca48a</Anchor>
    <Abstract>Get MCylinder. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a81073a91dfc65b06626d2cfe44d23d6c</Anchor>
    <Abstract>Get CCylinder. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>aa30a252b7b6f32bb7e3bb8c3b1ca30b4</Anchor>
    <Abstract>set CCylinder </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>ac4311ad2d6750d666ef8522a14250062</Anchor>
    <Abstract>Get parent filament. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>aa5908e1527e6349cd286792daafa9135</Anchor>
    <Abstract>Set parent filament. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a09201650224a4612db179266b2ff43b7</Anchor>
    <Abstract>Get current Compartment. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>aa571913545eb8c2ccde4cee86fe4af4d</Anchor>
    <Abstract>Get ID of Cylinder. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a2dd850edf22c137ecd734ee490741c37</Anchor>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a41b9f84107abb9603038ede14fc33073</Anchor>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a2516138846ce5fcc29b2a7379e6beae7</Anchor>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>aff701d6f4400ab216431d627c54a0b4e</Anchor>
    <Abstract>Update the position. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateReactionRates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a1e824345ba2ec690930b34f74cc3badf</Anchor>
    <Abstract>Update the reaction rates. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a0219bb2449696a3ab84ff24e4462e2c2</Anchor>
    <Abstract>Returns the full name of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af36fb9ed49f7fc262c68b41f2b9a56f6</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aee77e531ab9ccb8dcea12a307bd75539</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a07c1366559d10681ebc873f305c28f3f</Anchor>
    <Abstract>Get beads. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondBead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a954ee598c495e6b86c33b684d2c16435</Anchor>
    <Abstract>Get beads. </Abstract>
    <DeclaredIn>Cylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a8c7a6cfe1aecf1ee0eff3aaf9c11338f</Anchor>
    <Abstract>Coordinates of midpoint, updated with updatePosition() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a74c9e6c0aaddba6e5b7058c7d58720d7</Anchor>
    <Abstract>Pointer to the first bead. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a10fe1bbf3340a35637e4a966c1035af6</Anchor>
    <Abstract>Pointer to the end bead. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>acdd582d5e2c3ede46122e1785097e5c3</Anchor>
    <Abstract>Pointer to mech cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>aacbbbcef8a8a2b6e5810884b017af516</Anchor>
    <Abstract>Pointer to chem cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a0229e3f223dc18ef21fef8db0f2f4b51</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_positionFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a372ecc7b3dc54ca5dd042b043af437d6</Anchor>
    <Abstract>Position on filament (1st, 2nd, ... etc) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>ae06f9e43f297b9a2fef8b4b08889c852</Anchor>
    <Abstract>If the cylinder is last in the filament&amp;#39;s cylinder list. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>ab64067f964d785fe166b8a05e5885065</Anchor>
    <Abstract>Unique ID of cylinder, managed by CylinderDB. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>classCylinder.html</Path>
    <Anchor>a2d8861ef62351377c0f6f7ab583cf8d5</Anchor>
    <Abstract>Compartment this cylinder is currently in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Abstract>A database for all Cylinders in the system. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>aa93ff07349bc010760d2d55c4d839b80</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>ad98ae8201bf8b1a4851e362b7087f009</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>a69f4490e7ba17defd474c5079d6c07ed</Anchor>
    <Abstract>Add a cylinder. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>a537ca715764226246cf7ef49dd0b65e6</Anchor>
    <Abstract>Remove cylinder. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinderID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>aa2c676092ceee00cd188a8ffa21f1664</Anchor>
    <Abstract>Get current cylinder ID, and update the ID counter. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>a406bd9d3791f6e50aa4fbd1ee99c1dcd</Anchor>
    <Abstract>Get the instance of this singleton. </Abstract>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cdb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>af50249b0e7e84696b9c0933369813172</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>a969248adb7f59fe814c0bc47bd90e592</Anchor>
    <DeclaredIn>CylinderDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currentCylinderID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>a843563c646f732d1ab1c1f6986a5afc1</Anchor>
    <Abstract>Current running cylinder ID. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderDB</Scope>
    </TokenIdentifier>
    <Path>classCylinderDB.html</Path>
    <Anchor>aa0aa894f65e725911dfc9bcbf4bf4f0a</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderExclVolRepulsion</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderExclVolRepulsion</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolRepulsion.html</Path>
    <Abstract>Represents a repulsive excluded volume potential used by the CylinderExclVolume template. </Abstract>
    <DeclaredIn>CylinderExclVolRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolRepulsion</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolRepulsion.html</Path>
    <Anchor>a68530aa2a28a75b0dc78eee760f60349</Anchor>
    <DeclaredIn>CylinderExclVolRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolRepulsion</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolRepulsion.html</Path>
    <Anchor>a42198905698d6e7a8c942e13797024f8</Anchor>
    <DeclaredIn>CylinderExclVolRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolRepulsion</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolRepulsion.html</Path>
    <Anchor>a1b2462b37ffa24668b56198f9e966363</Anchor>
    <DeclaredIn>CylinderExclVolRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolRepulsion</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolRepulsion.html</Path>
    <Anchor>aed55ba4665827447777e57fe6acfbee6</Anchor>
    <DeclaredIn>CylinderExclVolRepulsion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderExclVolume</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>CylinderExclVolume</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolume.html</Path>
    <Abstract>Represents an excuded volume interaction between two Cylinders. </Abstract>
    <DeclaredIn>CylinderExclVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolume</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolume.html</Path>
    <Anchor>aecf7fab088af9724172bf3e661f6cd24</Anchor>
    <Abstract>Template specializations. </Abstract>
    <DeclaredIn>CylinderExclVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolume</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolume.html</Path>
    <Anchor>a9dc80225d575be7b585bcf28a925c635</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>CylinderExclVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderExclVolume</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolume.html</Path>
    <Anchor>a5f7b24639331e4dc42c93c850fcec4af</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>CylinderExclVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>ad9a9e25c4567d273dc5347d4d0c1e834</Anchor>
    <Abstract>Get name of interaction. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderExclVolume</Scope>
    </TokenIdentifier>
    <Path>classCylinderExclVolume.html</Path>
    <Anchor>a715ac884a949e7be970e7ffb636d60c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderNeighborList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Abstract>An implementation of NeighborList for Cylinder-Cylinder interactions. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Anchor>aef6a9762e56f41eb93df24a56b20bd1b</Anchor>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Anchor>a82f842d817bd85b787b7bca22df6ddb8</Anchor>
    <Abstract>Add neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Anchor>a79ecfe8beb43a0e8e41534ab1c04083b</Anchor>
    <Abstract>U pdate a neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Anchor>a7b0ff8157bd8c81893b868db2512a6a0</Anchor>
    <Abstract>Get all cylinder neighbors. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>aa64ee01bc18598fae6906ca6d5dcc7d6</Anchor>
    <Abstract>Remove a neighbor if possible. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a93a07ead9349edba7d763b483ec42847</Anchor>
    <Abstract>Re-initialize the neighborlist. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>af09da5281bc352cf028e39276ba5b68f</Anchor>
    <Abstract>The neighbors list, as a hash map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a94d5215ec2f93c2191cd0ca87e062c5e</Anchor>
    <Abstract>max distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a5fc2a03a950ca3867920527410ee8aa0</Anchor>
    <Abstract>min distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_crossFilamentOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderNeighborList</Scope>
    </TokenIdentifier>
    <Path>classCylinderNeighborList.html</Path>
    <Anchor>aa43a77d156819bcfdef9285eeab98d92</Anchor>
    <Abstract>Whether to include cylinders in same filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderNLContainer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Abstract>Holds a CylinderNeighborList. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderNLContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>ac6f9fad451123b8d26bfce5e9649987b</Anchor>
    <Abstract>Constructor, adds a cylinder neighbor list to the database. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CylinderNLContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>a9d61168b2490efa03d6191c8848b2b3e</Anchor>
    <Abstract>Destructor, removes cylinder neighbor list from the database. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>a08bf1bd5d85d517db15ff9f1601eb65e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderVolumeInteractions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Abstract>Represents a volume interaction between Cylinders. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderVolumeInteractions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>a669c6cb7195f393029b0a8c9b117e10a</Anchor>
    <Abstract>Constructor, initializes a cylinder neighbor list. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>a6874e7feffad1b76c0915f274c55968d</Anchor>
    <Abstract>Compute the energy of this interaction. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>a34b2eebbe07da2bf93716b57bb2f93fa</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>ad29d0e3399ff15116e58a60826bbdf85</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>ad9a9e25c4567d273dc5347d4d0c1e834</Anchor>
    <Abstract>Get name of interaction. </Abstract>
    <DeclaredIn>CylinderVolumeInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderVolumeInteractions</Scope>
    </TokenIdentifier>
    <Path>classCylinderVolumeInteractions.html</Path>
    <Anchor>a954eb5cf01c31a7e125614f5c9f4551d</Anchor>
    <Abstract>Name of interaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderZ</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylinderZ</Scope>
    </TokenIdentifier>
    <Path>classCylinderZ.html</Path>
    <Abstract>A simple implementation of the BoundarySurface class. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderZ</Scope>
    </TokenIdentifier>
    <Path>classCylinderZ.html</Path>
    <Anchor>addf4db65b61d99f5133e71778b5d3caf</Anchor>
    <Abstract>Constructor, creates boundary elements. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a402dcf23f4f96110569d01e401edee5a</Anchor>
    <Abstract>Get boundary elements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a67f60b2d22fb67f097e98025803d3d34</Anchor>
    <Abstract>Vector of boundary elements that make up this surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>af3ed79310c6ba6cdc8e9f176bf463eb1</Anchor>
    <Abstract>Dimensionality of surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderZ</Scope>
    </TokenIdentifier>
    <Path>classCylinderZ.html</Path>
    <Anchor>abd9018022be64ad2ab69822cc8ea4d03</Anchor>
    <Abstract>Center of cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderZ</Scope>
    </TokenIdentifier>
    <Path>classCylinderZ.html</Path>
    <Anchor>afee3f9138c8cca63a58926a740c9ebdc</Anchor>
    <Abstract>Radius of cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylinderZ</Scope>
    </TokenIdentifier>
    <Path>classCylinderZ.html</Path>
    <Anchor>a8da56d3fed09871e6fd188fa6ed515c2</Anchor>
    <Abstract>Height of cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylindricalZBoundaryElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Abstract>A cylinder implementation of a BoundaryElement. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylindricalZBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a32125b8a959d46949177a984e555e689</Anchor>
    <Abstract>Constructor, sets parameters of equation. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a2532a472c9cd58a65940f43e05050d97</Anchor>
    <Abstract>Implement for all boundary elements Returns the distance from a given point to this boundary element...</Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stretchedDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a6c3fc8e0f7bf828c21b70c396ed88dc0</Anchor>
    <Abstract>Returns stretched distance, similar to distance above. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a5832dede61b710421f5307d5b7bfb982</Anchor>
    <Abstract>Returns normal vector of point to plane. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRepulsionConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a6f090f1ff1ebf10695ab3cf2db3fb8bf</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreeningLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>afe407ba95087aff6598141daccb06d39</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ace76817d750bb44c11edd918f1a8b78f</Anchor>
    <Abstract>return coordinates of boundary element </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ab51302e10e3e2def98438234ba5bf801</Anchor>
    <Abstract>coordinates </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a09b2855b82606ae98f56e70eca516873</Anchor>
    <Abstract>Radius of cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a5227f1150dc1a7dc212cfd4387e523fc</Anchor>
    <Abstract>Height of cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_k_rep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a4cdd06d2f2f1ac84e0ef6872c812b6cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_r0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CylindricalZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classCylindricalZBoundaryElement.html</Path>
    <Anchor>a62b5ad9130b1cdeaa17ea3beaad760ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DepolyMinusEndManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DepolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyMinusEndManager.html</Path>
    <Abstract>Manager for depolymerization at minus end of Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DepolyMinusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyMinusEndManager.html</Path>
    <Anchor>a73320a4e7bcb4512db8b31ca594a6a03</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DepolyMinusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyMinusEndManager.html</Path>
    <Anchor>a5835c7a87de23b29f47b36038fb3590b</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyMinusEndManager.html</Path>
    <Anchor>a6b79b7cd146bff0803044e063a9c6ef9</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyMinusEndManager.html</Path>
    <Anchor>a9ad21dd3ddb33af4e371dbdaae2d1295</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DepolyPlusEndManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DepolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyPlusEndManager.html</Path>
    <Abstract>Manager for depolymerization at plus end of Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DepolyPlusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyPlusEndManager.html</Path>
    <Anchor>a928aca04c94403f31b60431c8b996847</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DepolyPlusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyPlusEndManager.html</Path>
    <Anchor>a262e63ed92a58c78205ac05b2b8fd1bf</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyPlusEndManager.html</Path>
    <Anchor>a2382f480f2ef9758533cd20cc0cfd0e5</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DepolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classDepolyPlusEndManager.html</Path>
    <Anchor>af3f3348ebf1d614dc9b1fcfe8282201f</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filament</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Abstract>Used to store data about connectivity of Cylinders and Beads. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ad22c23046909ccd25aa3f5686ddcb7ca</Anchor>
    <Abstract>This constructor creates a short filament, containing only two beads. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a67bd4429c04b55ba15d33e005575d246</Anchor>
    <Abstract>This constructor is called to create a longer filament. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ad3eab5cdf55ee70950c858f1950482e2</Anchor>
    <Abstract>This destructor is called when a filament is to be removed from the system. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ad9eaad54c47ca8cf1a410925c4f68382</Anchor>
    <Abstract>Addition of a new cylinder (with the first bead = new bead b and last bead = empty: before: –x—x—o...</Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a8e813887acd983efd12bf50e47698ffe</Anchor>
    <Abstract>Same as extension front, but adds a new first cylinder with first bead = new bead and a second bead i...</Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a4a4dccdbf9ce74a2875d7792a1b559f8</Anchor>
    <Abstract>Extend, used for initialization. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extendBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a14900f226ef7247c9c4e7ebfe9ece49c</Anchor>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retractFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a34794ceeb822c5e22df95db49fa8f652</Anchor>
    <Abstract>Retraction of front of a cylinder. Removes one cylinder and one bead from the front of filament...</Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retractBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a79c643bf0e0356ef210b6648474b1717</Anchor>
    <Abstract>Retraction of back of a cylinder. Removes a cylinder and bead from back of filament. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polymerizeFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a52bea9c01a2223e979206c24217b32d8</Anchor>
    <Abstract>Polymerization of a filament front, which moves the leading bead one monomer length. Updates cylinder parameters accordingly. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polymerizeBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ad9bf612548f137fa1ad39a4cc8d856fb</Anchor>
    <Abstract>Same as Polymerization front, but moves the back bead one monomer length, and updates cylinder parame...</Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depolymerizeFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a30aa18216b35d98f1e42416dc3ce3116</Anchor>
    <Abstract>Depolymerization of a filament front, which moves the leading bead back one monomer length...</Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depolymerizeBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a510f71d38622b7c906d5543f95558ad6</Anchor>
    <Abstract>Same as depolymerization front, but moves the back bead forward one monomer length. Updates cylinder parameters accordingly. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinderVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a80d3daa595fba276f53f9838e2ef5022</Anchor>
    <Abstract>Get vector of cylinders that this filament contains. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>aec7897128b659b5063675a26736860d3</Anchor>
    <Abstract>Get ID. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printChemComposition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>aecac31cfc73336f1be62b520261f1901</Anchor>
    <Abstract>Print chemical composition of filament (for debugging only) </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetDeltaPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a77452b7100a3ce6205fff1ddbb5cb981</Anchor>
    <Abstract>Reset delta. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetDeltaMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a68435f61aba67acf457cd1570180a4f3</Anchor>
    <Abstract>Reset delta. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDeltaPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a6cced8194d751f3af57e664ff14e8f38</Anchor>
    <Abstract>Get delta. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDeltaMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>adb431809d8733d7b53dec1d438e2a42e</Anchor>
    <Abstract>Get delta. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextBeadProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a96e6a97434a442014b199cd7623d2291</Anchor>
    <Abstract>Projection function, returns a vector of coordinates for bead creation. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>straightFilamentProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ade0776033b4e56f8035eda23c03887fa</Anchor>
    <Abstract>Projection function, returns a vector of coordinates for bead creation. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zigZagFilamentProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a4809abeefb15e0009e246d4d4051ae7c</Anchor>
    <Abstract>Projection function, returns a vector of coordinates for bead creation. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arcFilamentProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>aa552f866d4c2db6e987fa0b56e65f060</Anchor>
    <Abstract>Projection function, returns a vector of coordinates for bead creation. </Abstract>
    <DeclaredIn>Filament.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cylinderVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>afb19e1c4608b762f04bdf74e12efa535</Anchor>
    <Abstract>Vector of cylinders;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_subSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>acfb35439bafc3940ae7ffdbb68ae3144</Anchor>
    <Abstract>SubSystem pointer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>a15071125666bbd624b9b290969872bdb</Anchor>
    <Abstract>Unique integer id of this filament. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_deltaPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ab22323b878792e2c309417f9b8435c97</Anchor>
    <Abstract>Change in filament&amp;#39;s cylinders at plus end since last snapshot. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_deltaMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Filament</Scope>
    </TokenIdentifier>
    <Path>classFilament.html</Path>
    <Anchor>ac00eb37c21190ce574738d7f5259cf58</Anchor>
    <Abstract>Change in filament&amp;#39;s cylinders at minus end since last snapshot. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentBending</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>FilamentBending</Scope>
    </TokenIdentifier>
    <Path>classFilamentBending.html</Path>
    <Abstract>Represents a Filament bending interaction. </Abstract>
    <DeclaredIn>FilamentBending.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBending</Scope>
    </TokenIdentifier>
    <Path>classFilamentBending.html</Path>
    <Anchor>ad182fa47da7a97e20fcd83e0737b4ea9</Anchor>
    <Abstract>Template specializations. </Abstract>
    <DeclaredIn>FilamentBending.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBending</Scope>
    </TokenIdentifier>
    <Path>classFilamentBending.html</Path>
    <Anchor>a5e57f48720ca3137e684e1f1d3e3bdb9</Anchor>
    <Abstract>Compute forces of this interaction. </Abstract>
    <DeclaredIn>FilamentBending.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBending</Scope>
    </TokenIdentifier>
    <Path>classFilamentBending.html</Path>
    <Anchor>ab93dd7643bc4cd7545096ca6b96c2bc2</Anchor>
    <Abstract>Needed for Conjugated Gradient minimization;. </Abstract>
    <DeclaredIn>FilamentBending.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>af3c391f24ffbb7088de189cdb209d650</Anchor>
    <Abstract>Get the name of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentBending</Scope>
    </TokenIdentifier>
    <Path>classFilamentBending.html</Path>
    <Anchor>a48702549ba5c7f9e511a770ec5e78886</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentBendingHarmonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentBendingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentBendingHarmonic.html</Path>
    <Abstract>A harmonic potential used by the FilamentBending template. </Abstract>
    <DeclaredIn>FilamentBendingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBendingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentBendingHarmonic.html</Path>
    <Anchor>a921e22634cee2f3c13ad712a554ae303</Anchor>
    <DeclaredIn>FilamentBendingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBendingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentBendingHarmonic.html</Path>
    <Anchor>a57afd4a1c218a8bc5462d50e4c8fb9af</Anchor>
    <DeclaredIn>FilamentBendingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBendingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentBendingHarmonic.html</Path>
    <Anchor>ab450b1bd28774a79f45473c66b5002a4</Anchor>
    <DeclaredIn>FilamentBendingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentBendingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentBendingHarmonic.html</Path>
    <Anchor>a4b995a97248688079326f4128b1d63bb</Anchor>
    <DeclaredIn>FilamentBendingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Abstract>A database for all Filaments in the system. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>acb05fe726fc30817230fcff03b5ec0fc</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>a2f4d08f0f0c699cfafc48ebddc5ea9b6</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>a1976958c7b9a4eea369485593ea72373</Anchor>
    <Abstract>Add a filament. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>ada62057565863d888f97ce10590c56df</Anchor>
    <Abstract>Remove a filament. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilamentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>a59a564c801c753cd58456dd7c366aecd</Anchor>
    <Abstract>Get current filament ID, and update the ID counter. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>a90c6a59bba2f709b3012dae202365996</Anchor>
    <Abstract>Get singleton instance. </Abstract>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fdb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>ad4dab72a17f9ca811b1394d016ff6919</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>aea94e0951b04cb5c159e1b82e4234aa6</Anchor>
    <DeclaredIn>FilamentDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currentFilamentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>aa1d24417c23d969d25de7313d1515efe</Anchor>
    <Abstract>To assign filament ids. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentDB</Scope>
    </TokenIdentifier>
    <Path>classFilamentDB.html</Path>
    <Anchor>ac70b0695a1d08e39975e601f34330bb7</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDepolymerizationBackCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentDepolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationBackCallback.html</Path>
    <Abstract>Callback to depolymerize the back of a Filament after a depolymerization Reaction occurs in the syste...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDepolymerizationBackCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentDepolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationBackCallback.html</Path>
    <Anchor>a91efa0834368247e539ceb5dce45d34c</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentDepolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationBackCallback.html</Path>
    <Anchor>a3766bd45ea6005645508cf2a96589a52</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentDepolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationBackCallback.html</Path>
    <Anchor>ae64926fddc89a5ca91d7779c241a94a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDepolymerizationFrontCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentDepolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationFrontCallback.html</Path>
    <Abstract>Callback to depolymerize the front of a Filament after a depolymerization Reaction occurs in the syst...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentDepolymerizationFrontCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentDepolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationFrontCallback.html</Path>
    <Anchor>ae557d44570cb2ce569ab93c97a6f860c</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentDepolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationFrontCallback.html</Path>
    <Anchor>a741d68a920eb8dde3ebc0c94529bbd8a</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentDepolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentDepolymerizationFrontCallback.html</Path>
    <Anchor>a630a338561d69901e02a6aa3e146e4d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentExtensionBackCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentExtensionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionBackCallback.html</Path>
    <Abstract>Callback to extend the back of a Filament after a polymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentExtensionBackCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentExtensionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionBackCallback.html</Path>
    <Anchor>ae25bee5ab1d5a49404cc0bb0bbe6ffc4</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentExtensionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionBackCallback.html</Path>
    <Anchor>aa88d35776e587996b2a7936b6314f380</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentExtensionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionBackCallback.html</Path>
    <Anchor>a1f2a23ba5c76fb433f55a2fe3b5f5f05</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentExtensionFrontCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentExtensionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionFrontCallback.html</Path>
    <Abstract>Callback to extend the front of a Filament after a polymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentExtensionFrontCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentExtensionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionFrontCallback.html</Path>
    <Anchor>afeefc622c3eefa2e570ee06383cf2c75</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentExtensionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionFrontCallback.html</Path>
    <Anchor>a4d6d1bb7a9c175ee52db85a66c2e3f76</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentExtensionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentExtensionFrontCallback.html</Path>
    <Anchor>a172eb8111107d39d2c87b8fbab2f5fb7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentFF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Abstract>An implementation of the ForceField class that calculates Filament stretching, bending, and twisting. </Abstract>
    <DeclaredIn>FilamentFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Anchor>adb9c8c7cefad39032904f5ca45b93bee</Anchor>
    <Abstract>Constructor, intializes stretching, bending, and twisting forces. </Abstract>
    <DeclaredIn>FilamentFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Anchor>a674c41c3a54a4a831645c9d9c29548d6</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>FilamentFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Anchor>aefad1ae887d21c012ea4c306c1322b6a</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>FilamentFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Anchor>aed8560b762846b8fe27ae5e802f6c053</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>FilamentFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filamentInteractionVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentFF</Scope>
    </TokenIdentifier>
    <Path>classFilamentFF.html</Path>
    <Anchor>a39272b8a1c853994c5835a1c2b91b84a</Anchor>
    <Abstract>Vector of initialized filament interactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentInteractions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Abstract>Represents an internal Filament interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>ac67b5179bc0e843307edc1eb3d84722c</Anchor>
    <Abstract>Compute the energy of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>aa6747042a647d8d9d53cb437afc06f8b</Anchor>
    <Abstract>Compute forces of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>a77233ea2da56eaffe0bdea79c310d818</Anchor>
    <Abstract>Compute auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>af3c391f24ffbb7088de189cdb209d650</Anchor>
    <Abstract>Get the name of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>a5b2e160dc98547ff6613a989100083b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentParser</Scope>
    </TokenIdentifier>
    <Path>classFilamentParser.html</Path>
    <Abstract>Used to parse initial Filament information, initialized by the Controller. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentParser</Scope>
    </TokenIdentifier>
    <Path>classFilamentParser.html</Path>
    <Anchor>a9de1972aa1d6a3baa25f511a7d0f5491</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FilamentParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentParser</Scope>
    </TokenIdentifier>
    <Path>classFilamentParser.html</Path>
    <Anchor>a6022cc18319de11164652e06ff517d46</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFilaments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentParser</Scope>
    </TokenIdentifier>
    <Path>classFilamentParser.html</Path>
    <Anchor>a4eb083653cd26947ea96509aa48f2450</Anchor>
    <Abstract>Reads filament input file. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>adc64c51d84a8fe723f7b4f13ca4d37cd</Anchor>
    <Abstract>input file being used </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentPolymerizationBackCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentPolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationBackCallback.html</Path>
    <Abstract>Callback to polymerize the back of a Filament after a polymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentPolymerizationBackCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentPolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationBackCallback.html</Path>
    <Anchor>a7a592b0a219ddd5849babba5cf931dc8</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentPolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationBackCallback.html</Path>
    <Anchor>a1f004e2aa43ac80a0dfea4ec07b511a4</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentPolymerizationBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationBackCallback.html</Path>
    <Anchor>ae4fde8a54076f1beb2c9762f139b5316</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentPolymerizationFrontCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentPolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationFrontCallback.html</Path>
    <Abstract>Callback to polymerize the front of a Filament after a polymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentPolymerizationFrontCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentPolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationFrontCallback.html</Path>
    <Anchor>aef1d6c929cc7e0e4c6da2cb55d086cc4</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentPolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationFrontCallback.html</Path>
    <Anchor>a70946cc065011fe2042a0d8e8d69ddfa</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentPolymerizationFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentPolymerizationFrontCallback.html</Path>
    <Anchor>a3fdc47fba1e4a6e379aa149b43b8261b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentRetractionBackCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentRetractionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionBackCallback.html</Path>
    <Abstract>Callback to retract the back of a Filament after a depolymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentRetractionBackCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentRetractionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionBackCallback.html</Path>
    <Anchor>a2c399ba7ead0c7adfa8823ff36ba1c2c</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentRetractionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionBackCallback.html</Path>
    <Anchor>a73f635852200f930ac3829085fcd76db</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentRetractionBackCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionBackCallback.html</Path>
    <Anchor>a4e8d79c8a94f84c414229b0171553f08</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentRetractionFrontCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentRetractionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionFrontCallback.html</Path>
    <Abstract>Callback to retract the front of a Filament after a depolymerization Reaction occurs in the system...</Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentRetractionFrontCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentRetractionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionFrontCallback.html</Path>
    <Anchor>a0a6819d2d4b8766c242906a731fcc6dc</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>FilamentRetractionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionFrontCallback.html</Path>
    <Anchor>a5679aab6f183c11ed3ae712fe85929e1</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentRetractionFrontCallback</Scope>
    </TokenIdentifier>
    <Path>structFilamentRetractionFrontCallback.html</Path>
    <Anchor>aedb3b614efd6dc929d4eff1b450810d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentSetup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentSetup</Scope>
    </TokenIdentifier>
    <Path>structFilamentSetup.html</Path>
    <Abstract>Struct to hold Filament setup information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentSetup</Scope>
    </TokenIdentifier>
    <Path>structFilamentSetup.html</Path>
    <Anchor>a242b250121191fe69bceeb99a32de4f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numFilaments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentSetup</Scope>
    </TokenIdentifier>
    <Path>structFilamentSetup.html</Path>
    <Anchor>a0919341034ce0626e2de5fef2e7a6b66</Anchor>
    <Abstract>If want a random distribution, used if inputFile is left blank. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentStretching</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>FilamentStretching</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretching.html</Path>
    <Abstract>Represents a Filament stretching interaction. </Abstract>
    <DeclaredIn>FilamentStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretching</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretching.html</Path>
    <Anchor>a462a1347e413e6182c6ab036cd59ce21</Anchor>
    <Abstract>Template specializations. </Abstract>
    <DeclaredIn>FilamentStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretching</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretching.html</Path>
    <Anchor>a9eb09772eefd993fe0adbbb0d45e74df</Anchor>
    <Abstract>Compute forces of this interaction. </Abstract>
    <DeclaredIn>FilamentStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretching</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretching.html</Path>
    <Anchor>a54e9d089bc365723488df4103346b5f0</Anchor>
    <Abstract>Compute auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>FilamentStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentInteractions</Scope>
    </TokenIdentifier>
    <Path>classFilamentInteractions.html</Path>
    <Anchor>af3c391f24ffbb7088de189cdb209d650</Anchor>
    <Abstract>Get the name of this interaction. </Abstract>
    <DeclaredIn>FilamentInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FilamentStretching</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretching.html</Path>
    <Anchor>adbac4d42333a286d19b98f9147f259a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilamentStretchingHarmonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FilamentStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretchingHarmonic.html</Path>
    <Abstract>A harmonic potential used by the FilamentStretching template. </Abstract>
    <DeclaredIn>FilamentStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretchingHarmonic.html</Path>
    <Anchor>aff23bb249779d685527d2c816e98bb2a</Anchor>
    <DeclaredIn>FilamentStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretchingHarmonic.html</Path>
    <Anchor>a2abedb45d3a6e2af5aa5b1ff6169805a</Anchor>
    <DeclaredIn>FilamentStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretchingHarmonic.html</Path>
    <Anchor>a68e2856173b29ab4c22103149bbb192f</Anchor>
    <DeclaredIn>FilamentStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FilamentStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classFilamentStretchingHarmonic.html</Path>
    <Anchor>aae44c41221c571e3f12ad9f51b785547</Anchor>
    <DeclaredIn>FilamentStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FletcherRieves</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FletcherRieves</Scope>
    </TokenIdentifier>
    <Path>classFletcherRieves.html</Path>
    <Abstract>The Fletcher-Rieves method for conjugate gradient minimization. </Abstract>
    <DeclaredIn>CGFletcherRievesMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FletcherRieves</Scope>
    </TokenIdentifier>
    <Path>classFletcherRieves.html</Path>
    <Anchor>a022e95e7331cb494bc281a5f53a7198a</Anchor>
    <Abstract>Minimize the system. </Abstract>
    <DeclaredIn>CGFletcherRievesMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a98910fcbef9f0af69076c955b887c254</Anchor>
    <Abstract>helpers for searching and bracketing </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ac091059dd8c44e8e4ec372767f18f1c9</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a947d6e38d75fe84a08f0fc071c94c225</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sign</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aea6d1129677d44e11fe2afb08b5ca52c</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeBracket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a276c57252367bec9fcf08ae1e7c7df71</Anchor>
    <Abstract>Gracketing function (from Numerical Recipes in C++, second edition) </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>abd5135fdbe89793bfb5926f9dcc6de7e</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa2af8a3ecad085f6c07f759bfe50ccb1</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradAuxSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab9c35ec6681e97472d0442a37163d46d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradDotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a531b7d0bc38b6372dc323185f51233dc</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>afe717a6a06f677933b55628ea4d0014d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeadsAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a885a9627cc4e8b2db8f3384f29cd4069</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiftGradient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a7e8d5b8d77aff6c4564c4b1d72ab5ace</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ace5a720fe0f5d6ffcefeb9f4afcfe28f</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa1fcbcd087af6fa3aa9aab67b0b60103</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binarySearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2d9a41ddbf7d54e6f89ee02966c7d85c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrackingLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a432019c8a52f50b0cb8cb39b937db978</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quadraticLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa77b006b710d67b248dd18517db7709c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSENERGYTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a084794992bdcec9285f6512b56e6c578</Anchor>
    <Abstract>Line search energy tolerance for all linesearch methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_energyChangeCounter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aadb778c988685e46d7d109350973d826</Anchor>
    <Abstract>Energy counter, for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENERGYCHANGEITER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aaee1e11813855cc66c360f7cb3d9665a</Anchor>
    <Abstract>Max number of iterations allowed where &quot;&quot;&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GRADTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ad0118dc4da7526f196a4b4172bba9625</Anchor>
    <Abstract>Gradient minimization tolerance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ae28b20ab18f9a0b7c6a1c443add1026e</Anchor>
    <Abstract>Lambda parameter for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a04127fd877e82fdf4f71cd3709581419</Anchor>
    <Abstract>Max lambda that can be returned, used in all methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAXDIST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a814ea57c3493f31f4ffd1cfa71795871</Anchor>
    <Abstract>Max distance beads can be moved, used only in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAREDUCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a0fa651bde0efa2e195ec6a367a0e346e</Anchor>
    <Abstract>Parameter used in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BACKTRACKSLOPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa7a8cad90cb1961052e323ded645b4c2</Anchor>
    <Abstract>Backtrack slope parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUADRATICTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>acd9c51fe93f6d563f731dd2e30eb7922</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EPSQUAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>adb2a688fe52a8729d703d81e52b9fdb3</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PHI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab6ca0706dec56fe6e35f15f9791b3e23</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2e7906b4b29a1b76dca43d56eaf2efac</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>af8587ca1c0394c244ce84fe8a6ad29ff</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ForceField</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Abstract>An abstract class to represent various force field calculations. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a9bed91c670fe33dfc82da2b357fb8fa6</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a56c33a25830131e45068454de039513a</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a17004f440c9d380da5b9d9ea8794b3cc</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a3d11aed54fdc916c9a0f50c19294c3aa</Anchor>
    <Abstract>Name of this forcefield. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ForceFieldManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Abstract>A class to store and iterate over all ForceFields. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>a4486efaded29a64191cffa889cc349b2</Anchor>
    <Abstract>Compute the energy using all available force fields. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>ac1174d87b710cf4847b74f3299efa76b</Anchor>
    <Abstract>Compute the forces of all force fields. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>a2d8ebee8f7cc448665c934f81f93b64e</Anchor>
    <Abstract>Compute the forcesAux of all force fields. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>ac18b465afbff0d31980f4a10d72891fe</Anchor>
    <Abstract>Reset the forces of all objects. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>a1bd25a71eb4bea1accc9dddfb813759a</Anchor>
    <Abstract>Reset the forcesAux of all objects. </Abstract>
    <DeclaredIn>ForceFieldManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_forceFields</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ForceFieldManager</Scope>
    </TokenIdentifier>
    <Path>classForceFieldManager.html</Path>
    <Anchor>a1236a49ff3af26520cb0ffa0662983eb</Anchor>
    <Abstract>All forcefields in the system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Abstract>Used to control the geometry of the CompartmentGrid, as well as the geometry of entire system...</Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeGrid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>ab6320a7a310d6693855c31c0da6e975d</Anchor>
    <Abstract>Initialize the grid based on input parameters. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>ab035cc1a9b6822a3342a049c88ac9805</Anchor>
    <Abstract>Activate compartments based on a bounda. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>a3217b2c56180064a0efda25e79bd6267</Anchor>
    <Abstract>Get all compartments within a given range from the specified coordinate. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>aec4700bedd12cf8d83c0ffa2c3f49891</Anchor>
    <Abstract>Get a compartment based on coordinates or indices. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>af4a3bd7c2e4868529860c58e125f6447</Anchor>
    <Abstract>Get a compartment based on coordinates or indices. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>a94281778427606e93a54c67ab288e2cc</Anchor>
    <Abstract>Generate all neighbors lists for each compartment in the CompartmentGrid. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>af3276bac24eb8b3b1bca31007b941c0f</Anchor>
    <Abstract>Number of dimensions in the system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_grid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>a2134b6522abe94d25206060b9684d265</Anchor>
    <Abstract>Size of each dimension, in compartment lengths. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartmentSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GController</Scope>
    </TokenIdentifier>
    <Path>classGController.html</Path>
    <Anchor>a26bdd8b8d1667decda74bedf7bf25800</Anchor>
    <Abstract>Compartment size in each dimension. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Abstract>Struct to hold geometry parameters for the system. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>aa50b4a0940d8ca9da6f647a1c21d9522</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a45f424cfb62b868a4becc8b0bd0d32bc</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a5c7a33268cbfa1b236fa1bf0ef9bafc7</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a01890a89021cabfc92ee2b8e23faef60</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartmentSizeX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a74845fb942433ad543c1cb7ff437da2f</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartmentSizeY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a6364473fe0575150e254838e4c91e610</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartmentSizeZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a6c0c575c958ad3c0625f63ae3302575c</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>largestCompartmentSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a0b14f97d476bd4d40bf32a75715814b0</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>monomerSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a7afc14cf30bc80757522bcabe8fb3bc9</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cylinderSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>ab269206056f9e28193129ca5d31d8b30</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cylinderIntSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>structGeometryParameters.html</Path>
    <Anchor>a4ea73a722482f66eeaedfb57435f35d1</Anchor>
    <Abstract>Geometry parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HalfSphereZ</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>HalfSphereZ</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZ.html</Path>
    <Abstract>A simple implementation of the BoundarySurface class. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HalfSphereZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZ</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZ.html</Path>
    <Anchor>ac08b9f1f91d76fd62df48fec94fd17fd</Anchor>
    <Abstract>Constructor, creates boundary elements. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a402dcf23f4f96110569d01e401edee5a</Anchor>
    <Abstract>Get boundary elements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a67f60b2d22fb67f097e98025803d3d34</Anchor>
    <Abstract>Vector of boundary elements that make up this surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>af3ed79310c6ba6cdc8e9f176bf463eb1</Anchor>
    <Abstract>Dimensionality of surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZ</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZ.html</Path>
    <Anchor>a8e0ac10e6074199346802e399c33a984</Anchor>
    <Abstract>Center of half-sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZ</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZ.html</Path>
    <Anchor>a23ff67377b4ab2432ec6fdd73187e058</Anchor>
    <Abstract>Radius of half-sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_up</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZ</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZ.html</Path>
    <Anchor>a6e7d1ea96f0f16716ebc5dd5434d601a</Anchor>
    <Abstract>Facing up or down. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HalfSphereZBoundaryElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Abstract>A half-sphere implementation of a BoundaryElement. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HalfSphereZBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>a5a8a08144d00155c08d700783215c788</Anchor>
    <Abstract>Constructor, sets parameters of equation. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>ad954352392ba721b772cf9a0177edec1</Anchor>
    <Abstract>Implement for all boundary elements Returns the distance from a given point to this boundary element...</Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stretchedDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>a836d5117066fbfab38903475e5fc0d8d</Anchor>
    <Abstract>Returns stretched distance, similar to distance above. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>a3d1287ac0239294c1dbfdd2c799dcd7f</Anchor>
    <Abstract>Returns normal vector of point to plane. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRepulsionConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>a672b90ff798b849ef705384ab9f745bc</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreeningLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>ab7b9034066dbc5bec386a04f6bc3a91f</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ace76817d750bb44c11edd918f1a8b78f</Anchor>
    <Abstract>return coordinates of boundary element </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ab51302e10e3e2def98438234ba5bf801</Anchor>
    <Abstract>coordinates </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>ad1fff310ac2c3f221a8ab7393dc23b69</Anchor>
    <Abstract>Radius of half sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_up</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>a3251d9e34c161076f9324dc3f2477720</Anchor>
    <Abstract>Whether the half sphere faces up or down. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_k_rep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>aaafd14a29987646f9537a7248ba6291b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_r0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>HalfSphereZBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classHalfSphereZBoundaryElement.html</Path>
    <Anchor>afa790cdbea557aa8615188211acaedce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalFilamentRxnManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Abstract>To store Filament chemical reaction information read from an input file. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InternalFilamentRxnManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a2972bf77f48cada1ef30d8420924834e</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~InternalFilamentRxnManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>aa779e524843d4d45fa81002a64a0964e</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a45f1ff9c676e41db408669ab6c5242e9</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>ac8152bcd9f6aa5d69f85a98cff86d2b0</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleManagerImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a65026d22c7682cf798dda845cac7573a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Linker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Abstract>A container to store a MLinker and CLinker. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Linker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a2bdcb58c2db8008d10ffcf9bedc6b27a</Anchor>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Linker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>ad9d5113b11d6344146424aa62c4a48dc</Anchor>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a7a1036140d099d4431ee163a297c2770</Anchor>
    <Abstract>Set CLinker. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a3bf1d1c8e7f9d126f976213809c46e61</Anchor>
    <Abstract>Get CLinker. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a45d42b35d017a9a67da09d927ef4e371</Anchor>
    <Abstract>Get MLinker. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>aa268869b1ed75f38973aafd1362a5c42</Anchor>
    <Abstract>Update the position. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateReactionRates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a2903d3c1f696dd07a9dbbd02d930b050</Anchor>
    <Abstract>Update the reaction rates. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a0219bb2449696a3ab84ff24e4462e2c2</Anchor>
    <Abstract>Returns the full name of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af36fb9ed49f7fc262c68b41f2b9a56f6</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aee77e531ab9ccb8dcea12a307bd75539</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a5cb37f37606e5f76f105e4f11a55a0a4</Anchor>
    <Abstract>Get attached cylinder. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a7f7e3c20b80a578cd8060770b24cba80</Anchor>
    <Abstract>Get attached cylinder. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a8b92727910c0a6d6c171d26a87305109</Anchor>
    <Abstract>Linker position management. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>ae7f0b6b41a3e2a4ee9cba35370c930f8</Anchor>
    <Abstract>Linker position management. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a38d56541e9e262641a5d5281f1aac174</Anchor>
    <Abstract>Linker position management. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a3765490ad3094ce06e574449dc45aae4</Anchor>
    <Abstract>Linker position management. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLinkerType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a04dfdd522ce25bffe14e82798fa07c56</Anchor>
    <Abstract>Get linker parameter. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLinkerID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>aaf5fde2540563301384e0404c16b7793</Anchor>
    <Abstract>Get linker parameter. </Abstract>
    <DeclaredIn>Linker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a224aa9b2a6f8f565aef4deae0fe299ce</Anchor>
    <Abstract>coordinate of midpoint, updated with updatePosition() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a0b17c705cb1e5f89777f2675bd857e1c</Anchor>
    <Abstract>Pointer to mech linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a6cbe666ab89dd1b4ed0eae03d8f25d63</Anchor>
    <Abstract>Pointer to chem linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_c1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>ae73f608f5ffd4098f7191de6ba504680</Anchor>
    <Abstract>First cylinder the linker is bound to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_c2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a60b5cefe855173c410cb4471cd85d14f</Anchor>
    <Abstract>Second cylinder the linker is bound to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>ad16ab7afce0a3a09b455f3407a382bf2</Anchor>
    <Abstract>Position on first Cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a1efe8ae37a4b70b843c0d7f2dfa47b90</Anchor>
    <Abstract>Position on second Cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_linkerType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a82213082aecfbbb0e69be04ae9357b68</Anchor>
    <Abstract>Integer specifying the type of linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_linkerID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a980a8c48b4642a13b409dcdb857028f9</Anchor>
    <Abstract>Integer ID of this specific linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_birthTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a5bfc4496cdcfd43db3c801349ae16b74</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Linker</Scope>
    </TokenIdentifier>
    <Path>classLinker.html</Path>
    <Anchor>a1392148aae77282b3b651e21abd529a7</Anchor>
    <Abstract>Birth time of this linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerBindingCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Abstract>Callback to bind a Linker to Filament. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerBindingCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a5e4fbddc0c535daef933ce2e42a7f8f4</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a401ea7895bbb4e21a6c6139fd14ba6b7</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a11d2f4631dae2753a09ca815597959f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cc1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>adad681e9f4cdbaf62ac106bb17790441</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cc2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>af2d636fe16154ebae3692ad236aaa688</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_linkerType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a212f01f0cbdd2fe059d54b72eccc1efa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a09568aaf424fbaa0b06957aa8de1231b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structLinkerBindingCallback.html</Path>
    <Anchor>a4e8615d697d56b1ef6c444d890b70dd8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerBindingManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerBindingManager</Scope>
    </TokenIdentifier>
    <Path>classLinkerBindingManager.html</Path>
    <Abstract>Manager for Linker binding. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerBindingManager</Scope>
    </TokenIdentifier>
    <Path>classLinkerBindingManager.html</Path>
    <Anchor>a363aaa58b31fbbd489aaa5490c0c7cfb</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LinkerBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerBindingManager</Scope>
    </TokenIdentifier>
    <Path>classLinkerBindingManager.html</Path>
    <Anchor>aed39118397e9db9d845bd391b6c5320c</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerBindingManager</Scope>
    </TokenIdentifier>
    <Path>classLinkerBindingManager.html</Path>
    <Anchor>abace6970973b31e9ffa8d903492bf638</Anchor>
    <Abstract>Add this chemical reaction to two ccylinders if within the reaction range. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aeb9207c18bb40c33d9c8fe99a006401d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a7fa04502185124176a72fb2f3965c698</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aa5527049ea757ea2b22fca486d3bf08d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ad1c41fba7b85d5eedee363b8eeb472d4</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a935b5ee4f96177021901e55ab213665e</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a653389d857c83927af4e621963af3ab1</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a0822316b3a9bea17ceecc12231ae8eee</Anchor>
    <Abstract>Minimum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a8027479055b5bc902c2f3eab39fc6d50</Anchor>
    <Abstract>Maximum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a97369fa2db6318dd7b60c3772087b4e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ae13a9fd2fddc2cf5e21df314aba43fdf</Anchor>
    <Abstract>A subsystem pointer to intialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Abstract>A database for all Linkers in the system. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>af910b4ad55b19bf38e66558438068229</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>ab4d311688ca436179ceed0297aacd1b0</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>aa71e5126fbf4debe99e9d92782c3db28</Anchor>
    <Abstract>Create a new linker. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>a80e61cbde7836116fa1b099fd833a002</Anchor>
    <Abstract>Remove a linker. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLinkerID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>aba81b4efaa9764aad20713183fa61505</Anchor>
    <Abstract>Get current linker ID, and update the ID counter. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>af9522f683e73a346c8336f47ac59b93b</Anchor>
    <Abstract>Get instance. </Abstract>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ldb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>ab6e83c50f32e3905892767088cb0f66c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>a12a3c8a0510103d3205e9855c6e29ae1</Anchor>
    <DeclaredIn>LinkerDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currentLinkerID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>ac3365b8ccbf9251280c5dc08f6587bc0</Anchor>
    <Abstract>To assign linker IDs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerDB</Scope>
    </TokenIdentifier>
    <Path>classLinkerDB.html</Path>
    <Anchor>a72a6f66320366eb8ea8662749bb37a63</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerFF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Abstract>An implementation of the ForceField class that calculates Linker stretching, bending, and twisting. </Abstract>
    <DeclaredIn>LinkerFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Anchor>a348e1988dc5422bc9299b42a38232415</Anchor>
    <Abstract>Constructor, intializes stretching, bending, and twisting forces. </Abstract>
    <DeclaredIn>LinkerFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Anchor>a1556e1aef78dde85f5505bfa0f97758d</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>LinkerFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Anchor>a16f7907979a7b285d08f83235d03e29b</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>LinkerFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Anchor>a5dff1eaf63eb40bbd7af8e07bb1ee70f</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>LinkerFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_linkerInteractionVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerFF</Scope>
    </TokenIdentifier>
    <Path>classLinkerFF.html</Path>
    <Anchor>a003a6a92217997396600d9d78661e650</Anchor>
    <Abstract>Vector of initialized linker interactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerInteractions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Abstract>Represents an internal Linker interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>a2a046f0a12eb6fb66bad29a4694eeebe</Anchor>
    <Abstract>Compute the energy of this interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>ae27fb47c805254010bcff92e63c555b4</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>ab7469e00be350a83de630c7ea7a4adb8</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>a019c8595b26cab389d3392bbe2eb9f6e</Anchor>
    <Abstract>Get the name of his interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>af436c1bf2a53670f23849187c203d568</Anchor>
    <Abstract>Name of interaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerStretching</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>LinkerStretching</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretching.html</Path>
    <Abstract>Represents a Linker stretching interaction. </Abstract>
    <DeclaredIn>LinkerStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretching</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretching.html</Path>
    <Anchor>aaca285f2ce307bb4d5f151ae88f46f95</Anchor>
    <Abstract>Temlate specializations. </Abstract>
    <DeclaredIn>LinkerStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretching</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretching.html</Path>
    <Anchor>a3db719101f86eb671ad0973e0e0569cd</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>LinkerStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretching</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretching.html</Path>
    <Anchor>af9beb4141f4682570624c7e6d4c71e87</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>LinkerStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerInteractions</Scope>
    </TokenIdentifier>
    <Path>classLinkerInteractions.html</Path>
    <Anchor>a019c8595b26cab389d3392bbe2eb9f6e</Anchor>
    <Abstract>Get the name of his interaction. </Abstract>
    <DeclaredIn>LinkerInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>LinkerStretching</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretching.html</Path>
    <Anchor>a8e3b83b50b7b495fb603dd1e74ac38bb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinkerStretchingHarmonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LinkerStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretchingHarmonic.html</Path>
    <Abstract>A harmonic potential used by the LinkerStretching template. </Abstract>
    <DeclaredIn>LinkerStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretchingHarmonic.html</Path>
    <Anchor>a861ec8738ce83fbf558db2f7d92ae1d6</Anchor>
    <DeclaredIn>LinkerStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretchingHarmonic.html</Path>
    <Anchor>ad6753b776badb213049cb74f15ff4799</Anchor>
    <DeclaredIn>LinkerStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretchingHarmonic.html</Path>
    <Anchor>ad10c1a3a8484baaffa47a5a6cc115019</Anchor>
    <DeclaredIn>LinkerStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LinkerStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classLinkerStretchingHarmonic.html</Path>
    <Anchor>af212c767146c613bc45fb4eb6655e0b1</Anchor>
    <DeclaredIn>LinkerStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Abstract>Used to initialize, control, and run the mechanical components of a simulation. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>a526f67950e7cdabe20330264b22721d7</Anchor>
    <Abstract>Constructor which sets a subsystem pointer. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>a4187b5d2f2e2255af57c4525285058b0</Anchor>
    <Abstract>Initialze the force fields and minimizers used. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>ad120213292e23f5549d53fe2df3d2ffd</Anchor>
    <Abstract>Run a minimization on the system using the chosen algorithm. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>a3e935a48c92ced31df17bb724e90669c</Anchor>
    <Abstract>Initialize the force-fields used in the simualtion. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMinAlgorithms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>ad19cdee04c861fa4fc173d0c10956548</Anchor>
    <Abstract>Initialize the minimization algorithms used in the simulation. </Abstract>
    <DeclaredIn>MController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>ac3c4b1b840a877dcb713c7063d5c94b7</Anchor>
    <Abstract>Container and methods for all force fields in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_minimizerAlgorithms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>a332c6625d156824a3bdd5cb44b57c142</Anchor>
    <Abstract>Vector with algorithms for system minimization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_subSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MController</Scope>
    </TokenIdentifier>
    <Path>classMController.html</Path>
    <Anchor>a638abd4c155c7bafde6b9bff76255f73</Anchor>
    <Abstract>A pointer to the subsystem. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MCylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Abstract>Used to hold mechanical properties of a Cylinder. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aebb2581fd3b7d43a0d5fa166e388691b</Anchor>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aeff5ed74bb8bffb0ac7e934f399851c6</Anchor>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a83c3f990d2eab221b1007a04f3bf7d12</Anchor>
    <Abstract>Set parent. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aabfcc013b8cbc9af120936a0792c5167</Anchor>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a3f71512d5957c9a6682ddb424f05f038</Anchor>
    <Abstract>Set the equlilibrium length, which changes mechanical constants accordingly. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a7c36dea92cebddaa04c01390debc18dd</Anchor>
    <Abstract>Get the current equlibrium length of this MCylinder. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>ab49ff16095c669f3a3dc4866597c13e7</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aaf9f88afc648aa965028f64163c8d336</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStretchingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>af9a3d6741a8cf7b72d983d0b25446092</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStretchingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a46afbfa5fa8050dee247c1a91b9bd2d6</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBendingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a441c75cb7dcafe33de0dcb04ac839eb9</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBendingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aab0e5ecedb045b81c1bb0d42bbe1c55a</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTwistingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>ae68ccc14047ef0ece414e967dd7364f4</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTwistingConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aa15887dd8d78c56f00236b2776b79f8b</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExVolConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aad7533f1b024044574d17c9e681772a9</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExVolConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aafd38200ff997912fae0c1ec8c2140dd</Anchor>
    <Abstract>Mechanical parameter management function. </Abstract>
    <DeclaredIn>MCylinder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>ae7264ecc5bc382231f37821347db7f82</Anchor>
    <Abstract>parent cylinder </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aa368a3a46725ee7e2b16a9786dc88ffe</Anchor>
    <Abstract>Length of unstretched cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eqAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>aa542255d87485fa1e7bca2ef5b3b872f</Anchor>
    <Abstract>Equilibrium value for angle in bending potential. For interaction between this cylinder and PREVIOUS...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kStretch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>af153db32e79db040668aeea45fcfe594</Anchor>
    <Abstract>Local stretching constant, describes axial stretching of a single cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kBend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a49de338cc5d2d74356cf8da395a5fe54</Anchor>
    <Abstract>Local bending constant, which describes bending interaction between current and PREVIOUS cylinders...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kTwist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a411d5b040058afae90b54438f930cfc9</Anchor>
    <Abstract>Local twisting constant, which describes stretching interaction between current and PREVIOUS cylinder...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kExVol</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MCylinder</Scope>
    </TokenIdentifier>
    <Path>classMCylinder.html</Path>
    <Anchor>a7393cc9a56c96bf924be20248aca0b4a</Anchor>
    <Abstract>Local excluded volume constant, which describes excluded volume interactions between cylinders...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MechanicsAlgorithm</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MechanicsAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structMechanicsAlgorithm.html</Path>
    <Abstract>Struct to hold mechanics algorithm information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConjugateGradient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structMechanicsAlgorithm.html</Path>
    <Anchor>abd82cd76a29d682076fe9e7d34c5ad4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsAlgorithm</Scope>
    </TokenIdentifier>
    <Path>structMechanicsAlgorithm.html</Path>
    <Anchor>a50ed844650374782f88fb677c78c4120</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MechanicsFFType</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Abstract>Struct to hold the force field types. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeFFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a5f694c3765d3856e1987c22d167490a7</Anchor>
    <Abstract>Volume FF type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoundaryFFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>ad83b593a03dacd9224f526da4714aa25</Anchor>
    <Abstract>Boundary FF Type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FStretchingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>ad887670c75c1e05b77187cdae1c849fa</Anchor>
    <Abstract>Filament FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBendingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>acbd0076ef804005b56b6db07dce03589</Anchor>
    <Abstract>Filament FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FTwistingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a7cde64b003b7a90a9f3fa13b5dbe573f</Anchor>
    <Abstract>Filament FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LStretchingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a1e03399a615a236fcb90a356d274681c</Anchor>
    <Abstract>Linker FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBendingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a14852de6199812e5e6c646f2a8479aac</Anchor>
    <Abstract>Linker FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LTwistingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a90c249f75ff2207d3ec927e1e8da57f1</Anchor>
    <Abstract>Linker FF types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MStretchingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a30fba4413229de2a9ab88af789e47292</Anchor>
    <Abstract>Motor FF type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MBendingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a0bed42c13d0c33d3b37738b44494d8bf</Anchor>
    <Abstract>Motor FF type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTwistingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsFFType</Scope>
    </TokenIdentifier>
    <Path>structMechanicsFFType.html</Path>
    <Anchor>a76f25f6b34dc38d73dfecb236500c53b</Anchor>
    <Abstract>Motor FF type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MechanicsParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Abstract>Struct to hold mechanical parameters for the system. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FStretchingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>ab4155933a1fc9e47f67ec6ac71efb1bf</Anchor>
    <Abstract>Filament parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBendingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>aa13b8fd35ef9f6574981c411b535fb83</Anchor>
    <Abstract>Filament parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBendingTheta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a143107fd6c26d306f4d57e1b006cccb5</Anchor>
    <Abstract>Filament parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FTwistingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>af25f0f95ebf55f3f8f02b861bf0a9b2d</Anchor>
    <Abstract>Filament parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FTwistingPhi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>ae108dda4da55a3debc21abf3fbebd3f3</Anchor>
    <Abstract>Filament parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LStretchingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>aea1e85562167210db74aa3ffd0013bd7</Anchor>
    <Abstract>Linker parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBendingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a4538f8a7ee3c71f1eda540bc41614a55</Anchor>
    <Abstract>Linker parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBendingTheta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>aab9d6facd9ba3939017117cd5bff60db</Anchor>
    <Abstract>Linker parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LTwistingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a6629c1138e0a0662f6156fe67431f690</Anchor>
    <Abstract>Linker parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LTwistingPhi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a8cc146be39259d4b1edd94b70d9b1832</Anchor>
    <Abstract>Linker parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MStretchingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a36650ee6fc8a98f94b6594e67d4b34f5</Anchor>
    <Abstract>Motor parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MBendingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>abbc374692e6df3c7532e085918a98c4c</Anchor>
    <Abstract>Motor parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MBendingTheta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a597e2027d01d684f5dfe90d8a2734a90</Anchor>
    <Abstract>Motor parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTwistingK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a3efad448cc6428dcb081d2778655ec12</Anchor>
    <Abstract>Motor parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTwistingPhi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>abff44b81c046945ed8277a522b741ac8</Anchor>
    <Abstract>Motor parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a49a5ad4e84d9c8acafc8bd38018245d1</Anchor>
    <Abstract>Volume parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeCutoff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MechanicsParameters</Scope>
    </TokenIdentifier>
    <Path>structMechanicsParameters.html</Path>
    <Anchor>a597ef187ef21d3eca159e00264bf425c</Anchor>
    <Abstract>Volume parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Minimizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Minimizer</Scope>
    </TokenIdentifier>
    <Path>classMinimizer.html</Path>
    <Abstract>A mechanical minimzer used by the MController. </Abstract>
    <DeclaredIn>Minimizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>equlibrate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Minimizer</Scope>
    </TokenIdentifier>
    <Path>classMinimizer.html</Path>
    <Anchor>ae7a86f3d2c59c646b3c8d3381ac95ac4</Anchor>
    <Abstract>Equilibrate a system based on given configuration and force-fields. </Abstract>
    <DeclaredIn>Minimizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MLinker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Abstract>Represents the mechanical component of a Linker. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>a50f4462e4081c1cdf36f0c0ced8d4151</Anchor>
    <Abstract>Main constructor. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>a48568e299d0e6d0149fe53c9ee34b99a</Anchor>
    <Abstract>Set parent linker. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>a4ae89966828d6f13751b3d0429995e71</Anchor>
    <Abstract>Get parent linker. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStretchingConstant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>a6fe829d45b8889d95f8ad7ffdb143d61</Anchor>
    <Abstract>Getter for constants. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>ad9e3e86cf88e4e06d1c16f6851c2f97c</Anchor>
    <Abstract>Getter for constants. </Abstract>
    <DeclaredIn>MLinker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>a261139854320352d80c7b236bb924602</Anchor>
    <Abstract>Equilibrium length, set at construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kStretch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>ac42b3d84c2cd277440c052f2f80ea68c</Anchor>
    <Abstract>Stretching constant. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MLinker</Scope>
    </TokenIdentifier>
    <Path>classMLinker.html</Path>
    <Anchor>abf4cccf6a06de78c9856c13c903c8edd</Anchor>
    <Abstract>Pointer to parent linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MMotorGhost</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Abstract>Represents a cross-link between Filaments that can move by way of chemical reactions. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>aa237f4dc8f2ec13841a2e348f2ca2016</Anchor>
    <Abstract>Main constructor. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>a629db9174d4bca0f43001f97fc37bea9</Anchor>
    <Abstract>Set parent. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>aa46956e65d843ae582530b80496cdc8f</Anchor>
    <Abstract>Get parent. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStretchingConstant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>a67162e36027017554b7fe3bdc8bbf9c5</Anchor>
    <Abstract>Getter for constants. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>a49dd97a87f833f5815c0e6d152f78baa</Anchor>
    <Abstract>Getter for constants. </Abstract>
    <DeclaredIn>MMotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eqLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>a1cd86ed356e7b00fbf30de29824e769f</Anchor>
    <Abstract>Equilibrium length, set at construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_kStretch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>ac4dd3bd5770e8e7793b1f1a8413ab9e6</Anchor>
    <Abstract>Stretching parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MMotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMMotorGhost.html</Path>
    <Anchor>a3c22024539ed93368cd83cda70e075a4</Anchor>
    <Abstract>Pointer to parent. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorBindingCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Abstract>Callback to bind a MotorGhost to Filament. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorBindingCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a063a3eb832d1ac51e14261ce3af5aabe</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a91333b9e848e1b77134cb20543d9c4b3</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a62d13053a3c4913d5d2dc3d43d41223b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cc1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>ae4fa4b963bb84abf2846cca81708e19c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cc2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a0918d8c091191d95105ab5278c93c4c0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a4eff4c418d4d3f09280c9472232e9559</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a3a0b61cb367e62cd0d1675eac5945d4d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorBindingCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorBindingCallback.html</Path>
    <Anchor>a2be059308f68763b673f03cba3f204e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorBindingManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorBindingManager</Scope>
    </TokenIdentifier>
    <Path>classMotorBindingManager.html</Path>
    <Abstract>Manager for MotorGhost binding. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorBindingManager</Scope>
    </TokenIdentifier>
    <Path>classMotorBindingManager.html</Path>
    <Anchor>a3303973f9014978791254c229da73610</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MotorBindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorBindingManager</Scope>
    </TokenIdentifier>
    <Path>classMotorBindingManager.html</Path>
    <Anchor>a5a90a4f4ab35f33494d41d95d16fb8f0</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorBindingManager</Scope>
    </TokenIdentifier>
    <Path>classMotorBindingManager.html</Path>
    <Anchor>a7620868b2035b311bd15b0fec7af1bd5</Anchor>
    <Abstract>Add this chemical reaction to two ccylinders if within the reaction range. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CylinderNLContainer</Scope>
    </TokenIdentifier>
    <Path>classCylinderNLContainer.html</Path>
    <Anchor>afce343b3251cf0ed087cf5a62fb6aaee</Anchor>
    <Abstract>Get neighbor list. </Abstract>
    <DeclaredIn>NeighborListContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aeb9207c18bb40c33d9c8fe99a006401d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a7fa04502185124176a72fb2f3965c698</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>aa5527049ea757ea2b22fca486d3bf08d</Anchor>
    <Abstract>Getter for parameters of reaction. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ad1c41fba7b85d5eedee363b8eeb472d4</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a935b5ee4f96177021901e55ab213665e</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a653389d857c83927af4e621963af3ab1</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a0822316b3a9bea17ceecc12231ae8eee</Anchor>
    <Abstract>Minimum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a8027479055b5bc902c2f3eab39fc6d50</Anchor>
    <Abstract>Maximum reaction range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>a97369fa2db6318dd7b60c3772087b4e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CrossFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classCrossFilamentRxnManager.html</Path>
    <Anchor>ae13a9fd2fddc2cf5e21df314aba43fdf</Anchor>
    <Abstract>A subsystem pointer to intialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhost</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Abstract>A container to store a MMotorGhost and CMotorGhost. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a9ba4c13536cdb7b2e4a12bc9d55c5835</Anchor>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a6b8892fc4742a822f51585d533aeb0e9</Anchor>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a3bef182cfc2047f69a82b3a583aa9444</Anchor>
    <Abstract>Set CMotorGhost. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>adb0f3b2729f8f28534993ceef444299a</Anchor>
    <Abstract>Get CMotorGhost. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>afd679c4de83f5cd0dfd870f7db069f32</Anchor>
    <Abstract>Get MMotorGhost. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>af5160d203173a203b91bfe2e1461acf8</Anchor>
    <Abstract>Update the position. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateReactionRates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>af04a329034d73a637f72afd14ec0709f</Anchor>
    <Abstract>Update the reaction rates. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a58123ab346f6621a187bebe456e383ea</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a18937a1f6f84a159e77ba83dd34b2e20</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa4a608ee92aaaa6e0d63278595707474</Anchor>
    <Abstract>Implements the apply_if() method of the Component class by recursively applying it to itself and all ...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComposite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ae2c806010c5c1d2d166ce01f2710c271</Anchor>
    <Abstract>Returns true. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a0219bb2449696a3ab84ff24e4462e2c2</Anchor>
    <Abstract>Returns the full name of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aa3ebdb54e65379954e5f28cd84f00be0</Anchor>
    <Abstract>Adds a Component child to this Composite node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a1e62d11f4c16844277b215a2069c14be</Anchor>
    <Abstract>Remove *child from this node&amp;#39;s children. The child&amp;#39;s destructor will be called and the memory will be...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ab00f34ad7c8f7cd90ea9392bd54fd62a</Anchor>
    <Abstract>Returns the number of immediate children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af36fb9ed49f7fc262c68b41f2b9a56f6</Anchor>
    <Abstract>Returns the number of Species being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countDescendents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aad7cea9220c003254233ec9dc6bcb24e</Anchor>
    <Abstract>Return the total number of nodes contained under this node&amp;#39;s hieararchy. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>ad3162a869285627b04c5388dc28e2719</Anchor>
    <Abstract>Returns the number of Species being managed by this node and its descendent nodes. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>aee77e531ab9ccb8dcea12a307bd75539</Anchor>
    <Abstract>Returns the number of ReactionBase objets being immediately managed by this node (i.e. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a14108b9a4f9e903ba0fd9cc40fbbd8ae</Anchor>
    <Abstract>Returns the number of ReactionBase objects being managed by this node and its descendent nodes...</Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>adc22f790bd1f78a4a195a61ae60c0965</Anchor>
    <Abstract>Returns a reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>a7824aae77c582d72a2e8b403f2636385</Anchor>
    <Abstract>Returns a const reference to the container of Component children of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Composite</Scope>
    </TokenIdentifier>
    <Path>classComposite.html</Path>
    <Anchor>af2073a61c00153c28cab3a29926ea060</Anchor>
    <Abstract>Returns a pointer to the i-th Component child of this node. </Abstract>
    <DeclaredIn>Composite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a20f6f5a1f7da3238c069dfc35f174a4b</Anchor>
    <Abstract>Applies SpeciesVisitor v to every Species* object directly owned by this node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply_impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>ac9296f41e0b9c254d5adea9df3b4b07a</Anchor>
    <Abstract>Applies ReactionBaseVisitor v to every ReactionBase* object directly owned by this node...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4bb9041a7f3854f25f45060e81bb4e4e</Anchor>
    <Abstract>Returns the pointer to the parent node. The returned value could be a nullptr if a parent does not ex...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a9d5b03697a653cda24d5688af1d105f8</Anchor>
    <Abstract>Sets the parent of this node to other. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a4f0bed8144509d6565a30b548fac0fe7</Anchor>
    <Abstract>Returns true if this node is the root node. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>abcb3746cb8b4afcecf437dce40c0c772</Anchor>
    <Abstract>Returns the root node of the hieararchy to which this node belongs to. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSpeciesContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a0daf865ff32aff9e68316c65b681cbf9</Anchor>
    <Abstract>Returns true if this node contains non-zero number of Species. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReactionsContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a506e080028078ef9a753d854c60904a3</Anchor>
    <Abstract>Returns true if this node contains non-zero number of reactions (i.e. ReactionBase pointers) ...</Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Component</Scope>
    </TokenIdentifier>
    <Path>classComponent.html</Path>
    <Anchor>a871fbdc783ea600ed667dd37eb8adf1e</Anchor>
    <Abstract>Prints information about this node. Useful for debugging. </Abstract>
    <DeclaredIn>Component.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a053864275b9a1badfe7f64bb41b024c0</Anchor>
    <Abstract>Get cylinder. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a0f9c7b8208d450277232df422cc96f2e</Anchor>
    <Abstract>Get cylinder. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a61d840da18fe5a3a014694ae61b6feb6</Anchor>
    <Abstract>Set cylinder. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a37eb6c3fd66f16999b8c84e1d1f3e758</Anchor>
    <Abstract>Set cylinder. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a180f50ab8daecc3f09d4bc8200f1edff</Anchor>
    <Abstract>Position management function. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirstPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>ad78f17ef57c3ccf90d2b78e554c3cf85</Anchor>
    <Abstract>Position management function. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a1de3231a90ef1de485591f77bc52ef7a</Anchor>
    <Abstract>Position management function. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecondPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>aedc47fdd28d95809af9859a64a18117e</Anchor>
    <Abstract>Position management function. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMotorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>af0c78c2ed50a66cc57025fa818bda02b</Anchor>
    <Abstract>Parameter management. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMotorID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a62ddebe9da16e27e0f3c9df23fc73bce</Anchor>
    <Abstract>Parameter management. </Abstract>
    <DeclaredIn>MotorGhost.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>ad67e83cfbc9157c0eda5139071ba98f6</Anchor>
    <Abstract>coordinate of midpoint, updated with updatePosition() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a651509682f0faffe9b8e2d77e652312b</Anchor>
    <Abstract>Pointer to mech motor ghost. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a9e16cc127c973fe3c8e559daa5922e97</Anchor>
    <Abstract>Pointer to chem motor ghost. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_c1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a0725de6b61fc0eaaa50bf0cb33f933dc</Anchor>
    <Abstract>First cylinder the linker is bound to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_c2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a0d7606f2ce76db16bb10829fd92a971b</Anchor>
    <Abstract>Second cylinder the linker is bound to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a94bcda46aa9e2bc0b53ec33fc7e38c3f</Anchor>
    <Abstract>Position on first cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a1f5b96676836599c4b43b98a4aebe556</Anchor>
    <Abstract>Position on second cylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>aadd08ee5f5ab0bf5402da7ebc65d8375</Anchor>
    <Abstract>Integer specifying the type of linker. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motorID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a8af6f4cdc0bd8ab2300b6f4bba550f1c</Anchor>
    <Abstract>Integer ID of this motor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_birthTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a7b33616ae53f08cf2095d30090a4fa82</Anchor>
    <Abstract>Birth time. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_compartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhost</Scope>
    </TokenIdentifier>
    <Path>classMotorGhost.html</Path>
    <Anchor>a3a16b996a9a4a7e51735b410e65d339c</Anchor>
    <Abstract>Compartment that this motor is in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Abstract>A database for all MotorGhosts in the system. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a3e610587b8c6f79b48d04d6215d8ca5d</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>aa2fda20af8075f3b9cce3e06b991ec88</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>ab72c3ce3ac8110f4ba7446e82decb0d1</Anchor>
    <Abstract>Add a motor ghost. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a5b6bd5a8bbb407d963ea729c44cd2a90</Anchor>
    <Abstract>Remove a motor ghost. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMotorID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a1b346aebc03e8d74c7546623cdb6eb40</Anchor>
    <Abstract>Get current motor ID, and update the ID counter. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a04496d897a1d4dd5bbf99295224938ff</Anchor>
    <Abstract>Get instance. </Abstract>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mgdb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>aba9303a159c2a7c47299b005604a9fab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a41b6fa66ce424e660cf21fb5f1473e41</Anchor>
    <DeclaredIn>MotorGhostDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currentMotorID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>a6635d3851ef3644e1d3db269776d9344</Anchor>
    <Abstract>To assign motor IDs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhostDB</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostDB.html</Path>
    <Anchor>aa7624b432ffda929888975ee71cd2d84</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostFF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Abstract>An implementation of the ForceField class that calculates MotorGhost stretching, bending, and twisting. </Abstract>
    <DeclaredIn>MotorGhostFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Anchor>a435bb64c8671456da7ede5c7973840d0</Anchor>
    <Abstract>Constructor, intializes stretching, bending, and twisting forces. </Abstract>
    <DeclaredIn>MotorGhostFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Anchor>a7d5dae6dd5c17aac127f011e96a46ca2</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>MotorGhostFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Anchor>a01b47544c29a1147999521d5c9934347</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>MotorGhostFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Anchor>aa51e4998e2276aab855aa5c7cc2ed561</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>MotorGhostFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motorGhostInteractionVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhostFF</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostFF.html</Path>
    <Anchor>a4a20d1760dccc1e786c271b6237c0b39</Anchor>
    <Abstract>Vector of initialized motor interactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostInteractions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Abstract>Represents an internal MotorGhost interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>a1c79cac7f3316463c596004b92e58767</Anchor>
    <Abstract>Compute the energy of this interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>a487ccdc249a0596d807fc0b954601cfd</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>a51e76eb58135a740bff737139dcaa93f</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>a7cb8fb7e66fbf572423c8af9919bba48</Anchor>
    <Abstract>Get name of this interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>ab5dfb52e5d74049a5f03e4671b649756</Anchor>
    <Abstract>Name of interaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostStretching</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>MotorGhostStretching</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretching.html</Path>
    <Abstract>Represents a MotorGhost stretching interaction. </Abstract>
    <DeclaredIn>MotorGhostStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretching</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretching.html</Path>
    <Anchor>a312918e34e4c72a13230453aab1ed6cc</Anchor>
    <Abstract>Template specializations. </Abstract>
    <DeclaredIn>MotorGhostStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretching</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretching.html</Path>
    <Anchor>a82fa0820554eab9136432b39561a50a1</Anchor>
    <Abstract>Compute the forces of this interaction. </Abstract>
    <DeclaredIn>MotorGhostStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretching</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretching.html</Path>
    <Anchor>ac1751d735f89869423de4ae04641e0c2</Anchor>
    <Abstract>Compute the auxiliary forces of this interaction. </Abstract>
    <DeclaredIn>MotorGhostStretching.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostInteractions</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostInteractions.html</Path>
    <Anchor>a7cb8fb7e66fbf572423c8af9919bba48</Anchor>
    <Abstract>Get name of this interaction. </Abstract>
    <DeclaredIn>MotorGhostInteractions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_FFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorGhostStretching</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretching.html</Path>
    <Anchor>a855ea87698428cdc04f0fa690e4c1571</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorGhostStretchingHarmonic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorGhostStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretchingHarmonic.html</Path>
    <Abstract>A harmonic potential used by the MotorGhostStretching template. </Abstract>
    <DeclaredIn>MotorGhostStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretchingHarmonic.html</Path>
    <Anchor>a61ddf9b84ab132104cbb17262a6f254c</Anchor>
    <DeclaredIn>MotorGhostStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretchingHarmonic.html</Path>
    <Anchor>a1cf12c1c053fe1b4e2de5f497f727063</Anchor>
    <DeclaredIn>MotorGhostStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretchingHarmonic.html</Path>
    <Anchor>a473690f82dac6d091f9118934cc906b7</Anchor>
    <DeclaredIn>MotorGhostStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorGhostStretchingHarmonic</Scope>
    </TokenIdentifier>
    <Path>classMotorGhostStretchingHarmonic.html</Path>
    <Anchor>ac85579b270d57fc8b67c34870b1bcc44</Anchor>
    <DeclaredIn>MotorGhostStretchingHarmonic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorMovingCylinderBackwardCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Abstract>Callback to walk a MotorGhost on a Filament to a new Cylinder. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorMovingCylinderBackwardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Anchor>affc37b3fcfb9c4274784e42d6d74b31a</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Anchor>ab157006ae9fc4b8ccf4a30ddbf042f6e</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Anchor>a6276bf072dba76305dd80c9f2a70a863</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Anchor>ad4173f22f03705f8ba10fc7ff1891fa1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_newCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderBackwardCallback.html</Path>
    <Anchor>ad4e3c0d9118873f7e906922899a21f0b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorMovingCylinderForwardCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Abstract>Callback to walk a MotorGhost on a Filament to a new Cylinder. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorMovingCylinderForwardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Anchor>a53e91b08cc575dd3d9ee154f2b6e07fb</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Anchor>a2b4b90a88f016b07e2d42589b456aab4</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Anchor>afe45cdc1c8c22c183b464a4d4a2b0d59</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Anchor>a526a1dcd6458b07f064c77ca75e35c43</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_newCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorMovingCylinderForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorMovingCylinderForwardCallback.html</Path>
    <Anchor>a3f5abc25d40fb1d3f5af8ac8e6164c30</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkBManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorWalkBManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkBManager.html</Path>
    <Abstract>Manager for MotorGhost walking. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkBManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkBManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkBManager.html</Path>
    <Anchor>ac056cd351052a263ed589331c96fd5cc</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MotorWalkBManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkBManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkBManager.html</Path>
    <Anchor>a621f7f8abf76ba55f465811067424039</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkBManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkBManager.html</Path>
    <Anchor>a51f22756649c1d14a1d516ee8501024a</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkBManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkBManager.html</Path>
    <Anchor>aeab62b307495c7791c14b213aa93073e</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkFManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorWalkFManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkFManager.html</Path>
    <Abstract>Manager for MotorGhost walking. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkFManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkFManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkFManager.html</Path>
    <Anchor>a9cd673efbc3ed580f4449e57ac5fae46</Anchor>
    <Abstract>default constructor and destructor </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MotorWalkFManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkFManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkFManager.html</Path>
    <Anchor>a2a5f6d1af372cc1cff2527bd34f9eecd</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkFManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkFManager.html</Path>
    <Anchor>a8974dbb104f327cf07b25415f74928db</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MotorWalkFManager</Scope>
    </TokenIdentifier>
    <Path>classMotorWalkFManager.html</Path>
    <Anchor>a7cb219c170555e7716f331e05e45aded</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkingBackwardCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorWalkingBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingBackwardCallback.html</Path>
    <Abstract>Callback to walk a MotorGhost on a Filament. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkingBackwardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorWalkingBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingBackwardCallback.html</Path>
    <Anchor>a3e45e7643e7ca83c54937a05f77159bd</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorWalkingBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingBackwardCallback.html</Path>
    <Anchor>a02e519a23fde96e9cc408bef3da2efb0</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorWalkingBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingBackwardCallback.html</Path>
    <Anchor>a319a8ea51cf864c8dddeafeb6356af34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorWalkingBackwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingBackwardCallback.html</Path>
    <Anchor>ac19bf18556502e7eda1b89d28b36236e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkingForwardCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MotorWalkingForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingForwardCallback.html</Path>
    <Abstract>Callback to walk a MotorGhost on a Filament. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MotorWalkingForwardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorWalkingForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingForwardCallback.html</Path>
    <Anchor>a9d977663ec46a938ca8de651afb7115e</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MotorWalkingForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingForwardCallback.html</Path>
    <Anchor>af140a2c836e0e5e96fb9196a47ca8e95</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorWalkingForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingForwardCallback.html</Path>
    <Anchor>abd0c24b9f2cda56144f9fec0421e3c42</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sm2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MotorWalkingForwardCallback</Scope>
    </TokenIdentifier>
    <Path>structMotorWalkingForwardCallback.html</Path>
    <Anchor>a1c1d1deb98e90fd90f57791705152873</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Movable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Movable</Scope>
    </TokenIdentifier>
    <Path>classMovable.html</Path>
    <Abstract>For a movable object in the SubSystem. </Abstract>
    <DeclaredIn>Movable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Movable</Scope>
    </TokenIdentifier>
    <Path>classMovable.html</Path>
    <Anchor>ac46982b0e79d846334e8cf15ba0b543d</Anchor>
    <Abstract>Update the position of this object. </Abstract>
    <DeclaredIn>Movable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neighbor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Neighbor</Scope>
    </TokenIdentifier>
    <Path>classNeighbor.html</Path>
    <Abstract>An abstract class for any object that can be added/removed from a NeighborList. </Abstract>
    <DeclaredIn>Neighbor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Neighbor</Scope>
    </TokenIdentifier>
    <Path>classNeighbor.html</Path>
    <Anchor>a179a8cd94aac70aeaf2bef17fa363ef5</Anchor>
    <DeclaredIn>Neighbor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Neighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Neighbor</Scope>
    </TokenIdentifier>
    <Path>classNeighbor.html</Path>
    <Anchor>a6b5cbfb8ae7f168faac4081af62d74db</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Neighbor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeighborList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Abstract>To hold an external neighbor list of general type. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>ae212e8bdc0ebd144b94ee7ea40a3abf4</Anchor>
    <Abstract>Constructor and destructor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>aa6e2a28f42b4c501418094c24ffb709e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>aa64ee01bc18598fae6906ca6d5dcc7d6</Anchor>
    <Abstract>Remove a neighbor if possible. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a93a07ead9349edba7d763b483ec42847</Anchor>
    <Abstract>Re-initialize the neighborlist. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>af38a1d2711a786e3c845858e867d912b</Anchor>
    <Abstract>Add neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a843e9dcb6dd245e183252c1b5e538877</Anchor>
    <Abstract>U pdate a neighbor. </Abstract>
    <DeclaredIn>NeighborList.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>af09da5281bc352cf028e39276ba5b68f</Anchor>
    <Abstract>The neighbors list, as a hash map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a94d5215ec2f93c2191cd0ca87e062c5e</Anchor>
    <Abstract>max distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborList</Scope>
    </TokenIdentifier>
    <Path>classNeighborList.html</Path>
    <Anchor>a5fc2a03a950ca3867920527410ee8aa0</Anchor>
    <Abstract>min distance cutoff </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeighborListDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Abstract>A database to store all NeighborLists in the system. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeighborListDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a66e17ea4c1ed6843a9cbf341d81dd319</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a0dc149500a566f2f28f89955b3290431</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a26b04783c598f4cb5423a4bcce8554ce</Anchor>
    <Abstract>Add a cylinder neighbor list. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighborList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a01c426f9c5a014a529958d66129f772f</Anchor>
    <Abstract>Remove a neighborlist. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a0c4edc8d767cab8ce1e59dd148615ff8</Anchor>
    <Abstract>Reset all neighbors lists. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>acef95255a2c5080ee9d51227e176bcd8</Anchor>
    <Abstract>Add a neighbor to the db. adds to all possible lists. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighbor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a061560a7c9cdcc50c9a5b1d66e2e1b7f</Anchor>
    <Abstract>Remove a neighbor from the db. removes from all possible lists. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a1009e4ce12cc4c5047cd0408a045a813</Anchor>
    <Abstract>Get instance. </Abstract>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ndb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>a56451d8a1f6d124899ce2f1013fd20ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeighborListDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>aeb307476e4de89f53058771fc31d7af2</Anchor>
    <DeclaredIn>NeighborListDB.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NeighborListDB</Scope>
    </TokenIdentifier>
    <Path>classNeighborListDB.html</Path>
    <Anchor>adb0e2dff13272e00d98a1028908065c6</Anchor>
    <Abstract>Singleton instance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OutOfBoundsException</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>OutOfBoundsException</Scope>
    </TokenIdentifier>
    <Path>classOutOfBoundsException.html</Path>
    <Abstract>A exception to be thrown when an index/coordinate is out of bounds of the grid. </Abstract>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>what</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>OutOfBoundsException</Scope>
    </TokenIdentifier>
    <Path>classOutOfBoundsException.html</Path>
    <Anchor>ad4f79bd670244696d3a7208d8ed51f34</Anchor>
    <DeclaredIn>GController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Output</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Abstract>To print a specified output into a file. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Output</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>a75c8133d932621debacb30634ef5258c</Anchor>
    <Abstract>Constructor, which opens the output file. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Output</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>a61d0840daf98bea49e4dc471f235eeab</Anchor>
    <Abstract>Destructor, which closes the output file. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printBasicSnapshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>ad35067cbcca30c5cea00735d1d11f2b5</Anchor>
    <Abstract>Print basic information about all Filament, Linker, MotorGhost in system (DEPRECATED). </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSnapshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>a786eca35e9c06d89eab804c67b314e61</Anchor>
    <Abstract>New snapshot output. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printBirthTimes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>a1ca68aeb9bbffdcdc2a1d473ed923ceb</Anchor>
    <Abstract>Print birth times of beads for each Filament. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>a86a58b2b083f2a6043ad30b8c3d14ba0</Anchor>
    <Abstract>Print forces on beads for each Filament. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printStresses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>acb72afbff4487898488cdfd6a829ce45</Anchor>
    <Abstract>Print stresses on beads for each Filament. </Abstract>
    <DeclaredIn>Output.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_outputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Output</Scope>
    </TokenIdentifier>
    <Path>classOutput.html</Path>
    <Anchor>ab79c78d15b6ddf91b0384538aae24f56</Anchor>
    <Abstract>The output file being used. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Abstract>A general parser. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Parser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>ae412f8284f1daba584861ec15d110266</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Parser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>a3e658b5917a93a3ef648050d060e3a93</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>adc64c51d84a8fe723f7b4f13ca4d37cd</Anchor>
    <Abstract>input file being used </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Plane</Scope>
    </TokenIdentifier>
    <Path>classPlane.html</Path>
    <Abstract>A simple implementation of the BoundarySurface class. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Plane</Scope>
    </TokenIdentifier>
    <Path>classPlane.html</Path>
    <Anchor>ab3c3044eb98fc177214d46988b5b2891</Anchor>
    <Abstract>Constructor, creates boundary elements. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a402dcf23f4f96110569d01e401edee5a</Anchor>
    <Abstract>Get boundary elements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a67f60b2d22fb67f097e98025803d3d34</Anchor>
    <Abstract>Vector of boundary elements that make up this surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>af3ed79310c6ba6cdc8e9f176bf463eb1</Anchor>
    <Abstract>Dimensionality of surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Plane</Scope>
    </TokenIdentifier>
    <Path>classPlane.html</Path>
    <Anchor>a32fa0ece7f71d852ea003a1f9164e47d</Anchor>
    <Abstract>Coordinates of center. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Plane</Scope>
    </TokenIdentifier>
    <Path>classPlane.html</Path>
    <Anchor>a99a66d59b7e19f5c1562b9129611d9fb</Anchor>
    <Abstract>Normal vector. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaneBoundaryElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Abstract>A plane implementation of a BoundaryElement. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaneBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a27539f30d1a91ba71e7b121d03d98bf3</Anchor>
    <Abstract>Constructor, sets parameters of equation. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>ad35d384337c44f4bf5e5b243cf9cda88</Anchor>
    <Abstract>Implement for all boundary elements Returns the distance from a given point to this boundary element...</Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stretchedDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a7855fefca7c75e466abf4ae9d6883fb2</Anchor>
    <Abstract>Returns stretched distance, similar to distance above. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a0d87ae7390cd7fcfa2c7769e6212ee97</Anchor>
    <Abstract>Returns normal vector of point to plane. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRepulsionConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a022862630bad9bf77b6de4057474876a</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreeningLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a81c5691717216f8602cc2300c603e253</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ace76817d750bb44c11edd918f1a8b78f</Anchor>
    <Abstract>return coordinates of boundary element </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ab51302e10e3e2def98438234ba5bf801</Anchor>
    <Abstract>coordinates </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>ad067a43fa80af86a71fa244024a3a92b</Anchor>
    <Abstract>Parameters of equation (ax + by + cz + d = 0) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a1725bf5a9d6a0d6df973bbf834f64afd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>ac76ace6d0b2da7e27cba5afd85ae8935</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a01c1e54fda120dba72c8cea1b3025ab7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_k_rep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>aaa66079ea34844957907160081ab3059</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_r0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PlaneBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classPlaneBoundaryElement.html</Path>
    <Anchor>a3638279689c7293ccce4d09946aa2dca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PolakRibiere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PolakRibiere</Scope>
    </TokenIdentifier>
    <Path>classPolakRibiere.html</Path>
    <Abstract>The Polak-Ribiere method for conjugate gradient minimization. </Abstract>
    <DeclaredIn>CGPolakRibiereMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolakRibiere</Scope>
    </TokenIdentifier>
    <Path>classPolakRibiere.html</Path>
    <Anchor>af177d214c9d7b0f285ae93525be16329</Anchor>
    <Abstract>Minimize the system. </Abstract>
    <DeclaredIn>CGPolakRibiereMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a98910fcbef9f0af69076c955b887c254</Anchor>
    <Abstract>helpers for searching and bracketing </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ac091059dd8c44e8e4ec372767f18f1c9</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a947d6e38d75fe84a08f0fc071c94c225</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sign</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aea6d1129677d44e11fe2afb08b5ca52c</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeBracket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a276c57252367bec9fcf08ae1e7c7df71</Anchor>
    <Abstract>Gracketing function (from Numerical Recipes in C++, second edition) </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>abd5135fdbe89793bfb5926f9dcc6de7e</Anchor>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa2af8a3ecad085f6c07f759bfe50ccb1</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradAuxSquare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab9c35ec6681e97472d0442a37163d46d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gradDotProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a531b7d0bc38b6372dc323185f51233dc</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>afe717a6a06f677933b55628ea4d0014d</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBeadsAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a885a9627cc4e8b2db8f3384f29cd4069</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiftGradient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a7e8d5b8d77aff6c4564c4b1d72ab5ace</Anchor>
    <Abstract>For use in minimization. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ace5a720fe0f5d6ffcefeb9f4afcfe28f</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>goldenSection2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa1fcbcd087af6fa3aa9aab67b0b60103</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binarySearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2d9a41ddbf7d54e6f89ee02966c7d85c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrackingLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a432019c8a52f50b0cb8cb39b937db978</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quadraticLineSearch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa77b006b710d67b248dd18517db7709c</Anchor>
    <Abstract>Linear search method. </Abstract>
    <DeclaredIn>CGMethod.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LSENERGYTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a084794992bdcec9285f6512b56e6c578</Anchor>
    <Abstract>Line search energy tolerance for all linesearch methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_energyChangeCounter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aadb778c988685e46d7d109350973d826</Anchor>
    <Abstract>Energy counter, for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ENERGYCHANGEITER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aaee1e11813855cc66c360f7cb3d9665a</Anchor>
    <Abstract>Max number of iterations allowed where &quot;&quot;&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GRADTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ad0118dc4da7526f196a4b4172bba9625</Anchor>
    <Abstract>Gradient minimization tolerance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ae28b20ab18f9a0b7c6a1c443add1026e</Anchor>
    <Abstract>Lambda parameter for use in linear search methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAMAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a04127fd877e82fdf4f71cd3709581419</Anchor>
    <Abstract>Max lambda that can be returned, used in all methods. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAXDIST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a814ea57c3493f31f4ffd1cfa71795871</Anchor>
    <Abstract>Max distance beads can be moved, used only in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LAMBDAREDUCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a0fa651bde0efa2e195ec6a367a0e346e</Anchor>
    <Abstract>Parameter used in backtracking line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BACKTRACKSLOPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>aa7a8cad90cb1961052e323ded645b4c2</Anchor>
    <Abstract>Backtrack slope parameter. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUADRATICTOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>acd9c51fe93f6d563f731dd2e30eb7922</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EPSQUAD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>adb2a688fe52a8729d703d81e52b9fdb3</Anchor>
    <Abstract>Parameter used in quadratic line search. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PHI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>ab6ca0706dec56fe6e35f15f9791b3e23</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>a2e7906b4b29a1b76dca43d56eaf2efac</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CGMethod</Scope>
    </TokenIdentifier>
    <Path>classCGMethod.html</Path>
    <Anchor>af8587ca1c0394c244ce84fe8a6ad29ff</Anchor>
    <Abstract>Parameter used in golden section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PolyMinusEndManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyMinusEndManager.html</Path>
    <Abstract>Manager for polymerization at minus end of Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PolyMinusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyMinusEndManager.html</Path>
    <Anchor>a99748ff2c949a8e82cdea994fbdde203</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PolyMinusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyMinusEndManager.html</Path>
    <Anchor>a9bc71f9b337d5621f42423b948b220a1</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyMinusEndManager.html</Path>
    <Anchor>a914c9cd90412261a70c36afdf35653d8</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyMinusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyMinusEndManager.html</Path>
    <Anchor>a164b26aa71eed7a920fd03e636d12dec</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PolyPlusEndManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyPlusEndManager.html</Path>
    <Abstract>Manager for polymerization at plus end of Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PolyPlusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyPlusEndManager.html</Path>
    <Anchor>a1d8112a3c942f81702b2e9d0c580f792</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PolyPlusEndManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyPlusEndManager.html</Path>
    <Anchor>a13ea4cecd6e8b72a30b56f996792ca72</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyPlusEndManager.html</Path>
    <Anchor>a735f37d5d635849af7ea522798e4384f</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PolyPlusEndManager</Scope>
    </TokenIdentifier>
    <Path>classPolyPlusEndManager.html</Path>
    <Anchor>ac5d5bf1e5971c9499d124692267e31b7</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PQNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Abstract>Priority Queue Node. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PQNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>a4b7e508ee10dbc6cb1bbabf8bcda593a</Anchor>
    <Abstract>Ctor. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PQNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>ac96492ddb5848c1d3cad999299caa77c</Anchor>
    <Abstract>Dtor: we only reassign _rn to null, the actual pointer needs to be deleted somewhere else to avoid me...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>ac8c314f7f49375577b4b8ef2d90910b2</Anchor>
    <Abstract>The PQ heap requires a comparision operator for ordering elements within the heap/. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>a3405abd2d51a7cdde311fda2185fc50e</Anchor>
    <Abstract>Pointer to the reaction node (RNodeNRM) which this PQNode represents (or tracks) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>a1cf2f8482af1add65c9b6c35bfa0857f</Anchor>
    <Abstract>tau for this reaction for the Gibson-Bruck NRM algoritm </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChemNRMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>a6dae39f8dddcdbda9b4f6a1c1bf1bda8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeNRM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>PQNode</Scope>
    </TokenIdentifier>
    <Path>classPQNode.html</Path>
    <Anchor>a9dfcd0d41325e8ca108cba1768ebab89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrintSpecies</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PrintSpecies</Scope>
    </TokenIdentifier>
    <Path>structPrintSpecies.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>PrintSpecies</Scope>
    </TokenIdentifier>
    <Path>structPrintSpecies.html</Path>
    <Anchor>ab08209e2f849d8b946d71cf72c9ad11a</Anchor>
    <DeclaredIn>example_misc.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>PrintSpecies</Scope>
    </TokenIdentifier>
    <Path>structPrintSpecies.html</Path>
    <Anchor>a80f72f29171978030df3a06bec02247a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reactable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Reactable</Scope>
    </TokenIdentifier>
    <Path>classReactable.html</Path>
    <Abstract>For a reactable object in the SubSystem. </Abstract>
    <DeclaredIn>Reactable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateReactionRates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reactable</Scope>
    </TokenIdentifier>
    <Path>classReactable.html</Path>
    <Anchor>a351e4c2d8891271c46fbbb0103b62619</Anchor>
    <Abstract>Update the reactions in this object. </Abstract>
    <DeclaredIn>Reactable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reaction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Abstract>Represents a concrete chemical reaction, such as A + B -&gt; C, where M is the number of reactants and N...</Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a4203ca852b2b5024b126c0200200004a</Anchor>
    <Abstract>The main constructor: </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>ad51a40ea6318b81ba03f28b214fa9c6e</Anchor>
    <Abstract>The main constructor: </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a25d5afed0f7750c2ca3cea5d0d6f5aed</Anchor>
    <Abstract>no copying (including all derived classes) </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a080de6007b340d599614a58d6d15aaf7</Anchor>
    <Abstract>no assignment (including all derived classes) </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Reaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a03fa84e582707019660770c481a8af4e</Anchor>
    <Abstract>Destructor Tell Rspecies to remove this Reaction from its internal lists of reactions. </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rspecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a5ad798e1a2e3f643f742a47815acfa25</Anchor>
    <Abstract>Returns a pointer to the first element of array&lt;RSpecies*, M+N&gt; The type of the pointer is RSpecies**...</Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAffectedReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>abf299ee4ce79a2cc68ab47668567cb2e</Anchor>
    <Abstract>Return a list of reactions which rates would be affected if this reaction were to be executed...</Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>adb75e6b8d5baf4c5d3f80f3c22a1c919</Anchor>
    <Abstract>Copy this reaction using SpeciesPtrContainerVector &amp;spcv as a source of analogous Species...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aee39c0b16af5f812e1a1121a1bd52a57</Anchor>
    <Abstract>Set reaction type. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af8ff056179b45085653207177cf80306</Anchor>
    <Abstract>Get reaction type. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa1de15d838463787ead3649676a59687</Anchor>
    <Abstract>Sets the ReactionBase rate to the parameter &quot;rate&quot;. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a14aed53072f6658c465d0d30136e77b7</Anchor>
    <Abstract>Sets the RNode pointer associated with this ReactionBase to rhs. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af04f1e4d4905cdeffc7d295f49795351</Anchor>
    <Abstract>Returns the rate associated with this ReactionBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBareRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aad07dfa87431dab364e67b28394ed6c0</Anchor>
    <Abstract>Returns the bare rate associated with this ReacitonBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a2559e6ca778fbb9e5dc3d975cf35c850</Anchor>
    <Abstract>For cross filament reactions (SHOULD EVENTUALLY BE MOVED) </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a86023a84d9132614ec1ce88253ea999c</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ae9002b4971e3319a4b4394ea8218a31f</Anchor>
    <Abstract>Returns a pointer to the RNode associated with this ReactionBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ab64c6fdaa70414966bcb2c181e10ac36</Anchor>
    <Abstract>Returns the number of reactant RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a8b59e0a9b41fa700cb73483c6d502802</Anchor>
    <Abstract>Returns the number of product RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a536de7a485ea3b0188093e113af66b8c</Anchor>
    <Abstract>Returns the total number of RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a9579fd564f753abc3c96a7270b843689</Anchor>
    <Abstract>Return the parent Composite object pointer, to which this Reaction belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ace474b6f19a0e51db39afca94857100d</Anchor>
    <Abstract>Set the parent Composite object pointer to which this Reaction belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa5c636852adc697709bf10f722bdf198</Anchor>
    <Abstract>Returns true if this Reaction has a parent Composite object to which it belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a981a4edd717b214b7c4083dde391b853</Anchor>
    <Abstract>Get the root parent (i.e. follow the pointers of parentage until the root node in the Composition hie...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfReactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a6cbc412e6a43d7a6e3c036dfe6ec773a</Anchor>
    <Abstract>Computes the product of the copy number of all reactant RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfProducts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a963d733e68de253074a077507c4f2be0</Anchor>
    <Abstract>Computes the product of the copy number of all product RSpecies minus maxium allowed copy number...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPassivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ac043ce9b17a1a71ed3ee88fb05164456</Anchor>
    <Abstract>Return true if the ReactionBase is currently passivated. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a35529ea77cfafcf83842c0d27dff0159</Anchor>
    <Abstract>Returns true of this Reaction contains Species *s either as a reactant or a product. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a0dcebe15a0b6e22af5887304ca08ca72</Anchor>
    <Abstract>Return a const reference to the vector of dependent ReactionBases. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a565e2d5fac7efaf63f19dab909428882</Anchor>
    <Abstract>Fire the ReactionBase - make a single step, where reactant RSpecies copy numbers are decreased by one...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computePropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a45c31c853c6db84ab472816a64528f98</Anchor>
    <Abstract>Compute the ReactionBase propensity that is needed by a Gillespie like algorithm: rate*reactant_1...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a90e7fe3533314f36ae386c308235c372</Anchor>
    <Abstract>Usually is applied to ReactionBase objects with propensity of 0 (e.g. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReactionUnconditional</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ad5392e82411e5413eddb7e45124cd11f</Anchor>
    <Abstract>Requests that ReactionBase objects that may affect this Reaction to start tracking it...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a1342fd46632e7d5c52d5cd6abe04d67f</Anchor>
    <Abstract>Requests that Reaction objects that may affect this Reaction to start tracking it, which can be used to follow Reaction objects whose propensities change upong firing of some Reaction. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printDependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a34da58cae3bcccb527f4c1bc7a1483d4</Anchor>
    <Abstract>Print the ReactionBases that are affacted by this ReactionBase being fired. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNewDependent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a71d9f2256cc3c458c1be956768df27d6</Anchor>
    <Abstract>Request that the ReactionBase *r adds this ReactionBase to its list of dependents which it affects...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterDependent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ae850ece4ff4fb172e0cd4fe85b22c181</Anchor>
    <Abstract>Request that the ReactionBase *r removes this ReactionBase from its list of dependents which it affec...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a7b2364ff7c1f2d46bc61c570c3ffdd78</Anchor>
    <Abstract>An implementation method used by the constructor. </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a9e6b47f63444fd3d99037894b0030083</Anchor>
    <Abstract>Implementation of getM() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>adbb69e4098e63bba4d6e1ea7e4c1c774</Anchor>
    <Abstract>Implementation of getN() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>afd2870d15d6a0624b386be050218367e</Anchor>
    <Abstract>Implementation of size() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_equal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>acdf51c7fbfa6918f05abb136ab661b76</Anchor>
    <Abstract>Implementation of the operator==(...) </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfReactantsImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a9c9211467d59cbcdd98a338a43551b08</Anchor>
    <Abstract>Implementation of getProductOfReactants() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computePropensityImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a9052e2ceaddc6f2ea045c17a7a0276b5</Anchor>
    <Abstract>Implementation of computePropensity() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfProductsImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a1f6c71176818a6dc76c0a69bb0e277ed</Anchor>
    <Abstract>Implementation of getProductOfProducts() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSpeciesImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a70666182f28e2a5988f836e1795db0b6</Anchor>
    <Abstract>Implementation of containsSpecies() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStepImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>af26f6db3ea0425d6f7782b653358118c</Anchor>
    <Abstract>Implementation of makeStep() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReactionUnconditionalImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>ac21034442113a1e5b73d13695aea5fce</Anchor>
    <Abstract>Implementation of activateReactionUnconditional() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReactionImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>af4d0dfeacaf4bf2a91aea23c88225485</Anchor>
    <Abstract>Implementation of passivateReaction() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printToStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a14c0b262ed191ea326712ff3a7ec037d</Anchor>
    <Abstract>Print information about this reaction to ostream. </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>aacb43ca62f749d2666011e7f1869cb93</Anchor>
    <Abstract>Implementation of clone() </Abstract>
    <DeclaredIn>Reaction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computePropensityImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a7ed87a3e8211e4e20f7403e668670fe4</Anchor>
    <Abstract>(Private) implementation of the computePropensity() method to be elaborated in derived classes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStepImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a9f6f59f6d8f6e9697f433ab6c310320f</Anchor>
    <Abstract>(Private) implementation of the makeStep() method to be elaborated in derived classes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_dependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a085e916b6291ef7da5004810c8b58c28</Anchor>
    <Abstract>Pointers to ReactionBase objects that depend on this ReactionBase being executed. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa402747434b46dbea69b94928140b3a2</Anchor>
    <Abstract>A pointer to an RNode object which is used to implement a Gillespie-like algorithm (e...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a7ad71ef8d77e5ad85be9126f4f4f4b70</Anchor>
    <Abstract>A pointer to a Composite object to which this Reaction belongs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a6eea78021fc01eecae6666edc0532e44</Anchor>
    <Abstract>the rate for this ReactionBase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate_bare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a7622cb447ce421d7d062d6bab1105aea</Anchor>
    <Abstract>the bare rate for this ReactionBase (original rate) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a367c9de5f4d7d589d846c0201e9ca273</Anchor>
    <Abstract>Reaction type enumeration. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_isProtoCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>adf06f0937df570e381fb8db4312d81c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a36d0a7b500e3df2944eb3ff61fa84617</Anchor>
    <Abstract>Reaction is in proto compartment (Do not copy as a dependent, not in chemsim) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rspecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Reaction</Scope>
    </TokenIdentifier>
    <Path>classReaction.html</Path>
    <Anchor>a7d4b32fa500aefd7aef6910eef61290f</Anchor>
    <Abstract>An array of RSpecies objects (reactants followed by products) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionBase</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Abstract>Represents an abstract interface for simple chemical reactions of the form A + B -&gt; C...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af7c12fa6a7f49165a8082ce0d5dc471d</Anchor>
    <Abstract>The main constructor: </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a3e5551b8e6cac090344edcba4790ac23</Anchor>
    <Abstract>No copying (including all derived classes) </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af79268d6474d9f6bf7b87d1ab1c717a4</Anchor>
    <Abstract>no assignment (including all derived classes) </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReactionBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a65e2582da5122a153c729501c1f20f91</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>adb75e6b8d5baf4c5d3f80f3c22a1c919</Anchor>
    <Abstract>Copy this reaction using SpeciesPtrContainerVector &amp;spcv as a source of analogous Species...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cloneImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa29ab15fc3928ebbe73eed14a6684b52</Anchor>
    <Abstract>(Private) implementation of the clone() method to be elaborated in derived classes ...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rspecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a5a639bc1de913192368bfbc0cab0ee88</Anchor>
    <Abstract>Returns a pointer to the first element of the array&lt;RSpecies*&gt;. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aee39c0b16af5f812e1a1121a1bd52a57</Anchor>
    <Abstract>Set reaction type. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af8ff056179b45085653207177cf80306</Anchor>
    <Abstract>Get reaction type. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa1de15d838463787ead3649676a59687</Anchor>
    <Abstract>Sets the ReactionBase rate to the parameter &quot;rate&quot;. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a14aed53072f6658c465d0d30136e77b7</Anchor>
    <Abstract>Sets the RNode pointer associated with this ReactionBase to rhs. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af04f1e4d4905cdeffc7d295f49795351</Anchor>
    <Abstract>Returns the rate associated with this ReactionBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBareRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aad07dfa87431dab364e67b28394ed6c0</Anchor>
    <Abstract>Returns the bare rate associated with this ReacitonBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a2559e6ca778fbb9e5dc3d975cf35c850</Anchor>
    <Abstract>For cross filament reactions (SHOULD EVENTUALLY BE MOVED) </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a86023a84d9132614ec1ce88253ea999c</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ae9002b4971e3319a4b4394ea8218a31f</Anchor>
    <Abstract>Returns a pointer to the RNode associated with this ReactionBase. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ab64c6fdaa70414966bcb2c181e10ac36</Anchor>
    <Abstract>Returns the number of reactant RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>afc1030da009f0cea11eccc7909f025b0</Anchor>
    <Abstract>(Private) implementation of the getM() method to be elaborated in derived classes. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a8b59e0a9b41fa700cb73483c6d502802</Anchor>
    <Abstract>Returns the number of product RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a500a665706d6fb23c475cd0c28b6eb87</Anchor>
    <Abstract>(Private) implementation of the getN() method to be elaborated in derived classes. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a536de7a485ea3b0188093e113af66b8c</Anchor>
    <Abstract>Returns the total number of RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ad07a22dc9725b28f303449d7f700e266</Anchor>
    <Abstract>(Private) implementation of the size() method to be elaborated in derived classes. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a9579fd564f753abc3c96a7270b843689</Anchor>
    <Abstract>Return the parent Composite object pointer, to which this Reaction belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ace474b6f19a0e51db39afca94857100d</Anchor>
    <Abstract>Set the parent Composite object pointer to which this Reaction belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa5c636852adc697709bf10f722bdf198</Anchor>
    <Abstract>Returns true if this Reaction has a parent Composite object to which it belongs to. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a981a4edd717b214b7c4083dde391b853</Anchor>
    <Abstract>Get the root parent (i.e. follow the pointers of parentage until the root node in the Composition hie...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfReactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a6cbc412e6a43d7a6e3c036dfe6ec773a</Anchor>
    <Abstract>Computes the product of the copy number of all reactant RSpecies. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfReactantsImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a80c2a36959341d3b7735eb95bc0f82a5</Anchor>
    <Abstract>(Private) implementation of the getProductOfReactants() method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfProducts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a963d733e68de253074a077507c4f2be0</Anchor>
    <Abstract>Computes the product of the copy number of all product RSpecies minus maxium allowed copy number...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfProductsImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a22623d0ec6b510df87025402bdcf2628</Anchor>
    <Abstract>(Private) implementation of the getProductOfProducts() method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPassivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ac043ce9b17a1a71ed3ee88fb05164456</Anchor>
    <Abstract>Return true if the ReactionBase is currently passivated. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a35529ea77cfafcf83842c0d27dff0159</Anchor>
    <Abstract>Returns true of this Reaction contains Species *s either as a reactant or a product. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsSpeciesImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a187af0208d49289eedb0d9f0addd506b</Anchor>
    <Abstract>(Private) implementation of the containsSpecies() method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a0dcebe15a0b6e22af5887304ca08ca72</Anchor>
    <Abstract>Return a const reference to the vector of dependent ReactionBases. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_equal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a0b88a25b085a5a0e38dfd9edf08cb750</Anchor>
    <Abstract>(Private) implementation of the operator==(...) method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a565e2d5fac7efaf63f19dab909428882</Anchor>
    <Abstract>Fire the ReactionBase - make a single step, where reactant RSpecies copy numbers are decreased by one...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStepImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a1e4df2163b01b39f837c57c8abdb06a2</Anchor>
    <Abstract>(Private) implementation of the makeStep() method to be elaborated in derived classes. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computePropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a45c31c853c6db84ab472816a64528f98</Anchor>
    <Abstract>Compute the ReactionBase propensity that is needed by a Gillespie like algorithm: rate*reactant_1...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computePropensityImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ac583ef720dda520b1f181a0e53a8f311</Anchor>
    <Abstract>(Private) implementation of the computePropensity() method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a90e7fe3533314f36ae386c308235c372</Anchor>
    <Abstract>Usually is applied to ReactionBase objects with propensity of 0 (e.g. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReactionImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a203c76b4d0a42d0cf3010e5001fb89fe</Anchor>
    <Abstract>(Private) implementation of the passivateReaction() method to be elaborated in derived classes...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReactionUnconditional</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ad5392e82411e5413eddb7e45124cd11f</Anchor>
    <Abstract>Requests that ReactionBase objects that may affect this Reaction to start tracking it...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReactionUnconditionalImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a7aef7e5110ee1ef712d6814768bb7aa2</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a1342fd46632e7d5c52d5cd6abe04d67f</Anchor>
    <Abstract>Requests that Reaction objects that may affect this Reaction to start tracking it, which can be used to follow Reaction objects whose propensities change upong firing of some Reaction. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printDependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a34da58cae3bcccb527f4c1bc7a1483d4</Anchor>
    <Abstract>Print the ReactionBases that are affacted by this ReactionBase being fired. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAffectedReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a29a33bbb61218819d6d8a07bcf43365e</Anchor>
    <Abstract>Return the list of ReactionBase objects that are affected when this ReactionBase is fired...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNewDependent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a71d9f2256cc3c458c1be956768df27d6</Anchor>
    <Abstract>Request that the ReactionBase *r adds this ReactionBase to its list of dependents which it affects...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterDependent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>ae850ece4ff4fb172e0cd4fe85b22c181</Anchor>
    <Abstract>Request that the ReactionBase *r removes this ReactionBase from its list of dependents which it affec...</Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printToStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>adb265435d5404043d451212af746c596</Anchor>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_dependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a085e916b6291ef7da5004810c8b58c28</Anchor>
    <Abstract>Pointers to ReactionBase objects that depend on this ReactionBase being executed. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rnode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>aa402747434b46dbea69b94928140b3a2</Anchor>
    <Abstract>A pointer to an RNode object which is used to implement a Gillespie-like algorithm (e...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a7ad71ef8d77e5ad85be9126f4f4f4b70</Anchor>
    <Abstract>A pointer to a Composite object to which this Reaction belongs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a6eea78021fc01eecae6666edc0532e44</Anchor>
    <Abstract>the rate for this ReactionBase </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate_bare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a7622cb447ce421d7d062d6bab1105aea</Anchor>
    <Abstract>the bare rate for this ReactionBase (original rate) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a367c9de5f4d7d589d846c0201e9ca273</Anchor>
    <Abstract>Reaction type enumeration. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_isProtoCompartment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>adf06f0937df570e381fb8db4312d81c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a36d0a7b500e3df2944eb3ff61fa84617</Anchor>
    <Abstract>Reaction is in proto compartment (Do not copy as a dependent, not in chemsim) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a0285e054f9aa3055e21cefe65c74fd80</Anchor>
    <Abstract>Returns true if two ReactionBase objects are equal. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>a65d0e9651baf3f48044d585e619ccd6f</Anchor>
    <Abstract>Return true if two ReactionBase are not equal. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>ReactionBase</Scope>
    </TokenIdentifier>
    <Path>classReactionBase.html</Path>
    <Anchor>af19ff3a21157c2486e71d04ee0fa6567</Anchor>
    <Abstract>Print self into an iostream. </Abstract>
    <DeclaredIn>ReactionBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionPtrContainerIFace</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Abstract>An abstract interface for a container of pointers to reaction objects. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>a5dd8042a6ac1857ee5f6288fa4353f62</Anchor>
    <Abstract>Clear the reaction container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReactionUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>a8e86b4bf36e244100f07dceff78a98ef</Anchor>
    <Abstract>Add a unique reaction pointer to this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>ac55d5efa31863e2c82ed2f60d98ba92f</Anchor>
    <Abstract>Remove a reaction from this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>a029c99837491d250f2927bdb39a871ca</Anchor>
    <Abstract>Find a reaction in this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>a9a0ee050b8dec4b0fbac25dac87b7653</Anchor>
    <Abstract>Print all reactions from this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionPtrContainerVector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Abstract>A concrete class implementing the ReactionPtrContainerIFace, using vector&lt;unique_ptr&lt;ReactionBase&gt;&gt; a...</Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionPtrContainerVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a323c7c77e3485b96ae7e74f7abcd5574</Anchor>
    <Abstract>Reaction ptr container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionPtrContainerVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>ab3281d4f97e012075666064b162ace2f</Anchor>
    <Abstract>Copying not allowed. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>ad6204564f34d05a4ea51945a5c7f5cd0</Anchor>
    <Abstract>Assignment not allowed. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a6b587a2b526efd88dfa91d1125950800</Anchor>
    <Abstract>Clear the container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReactionUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a0b3cd521c3a59239f2a65c34c8de4988</Anchor>
    <Abstract>Add a unique reaction ptr to this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a30fada2b38ba35fe54c08d3bbf21cada</Anchor>
    <Abstract>Add a general reaction to this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a21f6062905689351eed7fdafd96dac31</Anchor>
    <Abstract>Add a general reaction class to this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>ad45ecd42eef045ee5f6faeaf6993af6d</Anchor>
    <Abstract>Remove a reaction from this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>aafd32b6e4ff55e7ae1089026ffeb6732</Anchor>
    <Abstract>Remove all reactions that contain a certain species from this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a0bc2ed66bbd60af16e607eecf08a0979</Anchor>
    <Abstract>Find a reaction by index in this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a05d57222d76ec07637ca07a0d6974559</Anchor>
    <Abstract>Get all reactions in vector form. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a62e397a600813ffb5a29e7e238dd91d2</Anchor>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a319196f208d6e5d52974339c11a7ecef</Anchor>
    <Abstract>Print all reactions in this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a1e6482eb0bd72d633c768208918855f8</Anchor>
    <Abstract>Find a similar reaction in this container (satistifes equality operator) </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerIFace.html</Path>
    <Anchor>a9a0ee050b8dec4b0fbac25dac87b7653</Anchor>
    <Abstract>Print all reactions from this container. </Abstract>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>a21b0105a34e1240afb6d0783c965ddc6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>ReactionPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classReactionPtrContainerVector.html</Path>
    <Anchor>ae4230b7c32a5f731b8ec4bcb81c7351d</Anchor>
    <DeclaredIn>ReactionContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Abstract>The Visitor pattern allows a functor to visit each node of the Composite pattern. ...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Anchor>a2a2381f0f0fcd0067537af8d965a32d3</Anchor>
    <Abstract>When this Visitor, *v, is propagated through the Composite hieararchy, at each Component node pointer...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ReactionVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Anchor>a4d310d3c9165de0c33fc37e37406c242</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Anchor>ab8ca562e38925467ae17eb2425f61a4c</Anchor>
    <Abstract>When this Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointe...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Anchor>acee5a012f810080164130eb47865472f</Anchor>
    <Abstract>Return true if the Reaction *r satisfies the desired predicate. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionVisitorLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Abstract>Allows using C++11 lambda expressions to set the action to be performed on each Reaction of the node ...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionVisitorLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>ad36a99954e16f1ca538459271a0f429f</Anchor>
    <Abstract>Default Constructor. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactionVisitorLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>ad41ac087aa7c2e2daa85604893a28a56</Anchor>
    <Abstract>Constructor: </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>ade8528f4fbc1d980e043df2787dfe317</Anchor>
    <Abstract>Sets the action to be perfomed on each node as std::function&lt;bool (Component*)&gt; g. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambdaPred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>acadd3371a2546c5b9a13974db708877a</Anchor>
    <Abstract>Sets the predicate which checks whether the node should be evaluated as std::function&lt;bool (Component...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitor</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitor.html</Path>
    <Anchor>a2a2381f0f0fcd0067537af8d965a32d3</Anchor>
    <Abstract>When this Visitor, *v, is propagated through the Composite hieararchy, at each Component node pointer...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>aaadac898ea6650cd79774b14ac0b16d7</Anchor>
    <Abstract>Implementation of the visit(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>af6f228e3a7e53ebe476f7cf9ff7cae33</Anchor>
    <Abstract>Implementation of the pred(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>a14552291fb7778f68e6d18b311f48dea</Anchor>
    <Abstract>The function to be perfomed on each node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ReactionVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classReactionVisitorLambda.html</Path>
    <Anchor>aa23e41358778181613f193ef325b5813</Anchor>
    <Abstract>The predicate which checks whether the Reaction should be evaluated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RNode</Scope>
    </TokenIdentifier>
    <Path>classRNode.html</Path>
    <Abstract>This is an abstract base class for classes that need to be associated with the given Reaction object...</Abstract>
    <DeclaredIn>ChemRNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNode</Scope>
    </TokenIdentifier>
    <Path>classRNode.html</Path>
    <Anchor>a7bc34189256f521f61e744282f74f27c</Anchor>
    <Abstract>Dtor. </Abstract>
    <DeclaredIn>ChemRNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNode</Scope>
    </TokenIdentifier>
    <Path>classRNode.html</Path>
    <Anchor>ae637a64362ad0ac7aab6e71abfafda57</Anchor>
    <Abstract>This method is called by Reaction::activateReaction(). </Abstract>
    <DeclaredIn>ChemRNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNode</Scope>
    </TokenIdentifier>
    <Path>classRNode.html</Path>
    <Anchor>a4b3254697c3ddc7baaff8106c84986df</Anchor>
    <Abstract>This method is called by Reaction::passivateReaction(). </Abstract>
    <DeclaredIn>ChemRNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPassivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNode</Scope>
    </TokenIdentifier>
    <Path>classRNode.html</Path>
    <Anchor>abdf414a4ac9701ea0731d9a3f989d05f</Anchor>
    <Abstract>Return true if the Reaction is currently passivated. </Abstract>
    <DeclaredIn>ChemRNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeGillespie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Abstract>Used by ChemGillespieImpl to implement the cached version of the Gillespie algorithm. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeGillespie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a8540bdaeda2d7c9eba6fc923f1486cd0</Anchor>
    <Abstract>Ctor: </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeGillespie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a0d94ffb06cf018d8e5c677093196e92b</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a13c0e95cc74ec4facf7f9cc91a2baa18</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNodeGillespie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a8875cb9389ef23e37ae306073a3aad4d</Anchor>
    <Abstract>Dtor: The RNode pointer of the tracked Reaction object is set to nullptr. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>aadf2dad38b64b7f8adbe5dc1d1fb1488</Anchor>
    <Abstract>Returns a pointer to the Reaction which corresponds to this RNodeGillespie. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>afde0f3af2574d0ed517fdd6cbbab8a24</Anchor>
    <Abstract>Return the currently stored propensity, &quot;a&quot;, for this Reaction. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a67dfc9af6a5d302ff54ccd6f1f27a61c</Anchor>
    <Abstract>Set the propensity, &quot;a&quot;, for this Reaction. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPenultStepPropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a05088244bc100fb15a852d9a3dfe7088</Anchor>
    <Abstract>Return the propensity, &quot;a&quot;, associated with the penultimate step of this Reaction. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPenultA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>ab5bb90e0267577466f37b2008c1558e3</Anchor>
    <Abstract>Set the propensity, &quot;a&quot;, associated with the penultimate step of this Reaction. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reComputePropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>af28aaa3b9e56c743a8cdeadbcb9b8ec9</Anchor>
    <Abstract>(Re)Compute and return the propensity associated with this Reaction. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>af8abb653f5bede62ba7f259e26c2060d</Anchor>
    <Abstract>Set the the penultimate step propensity to zero and compute the current propensity. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a2ed26495d18c940cb56e1f5afead94cf</Anchor>
    <Abstract>This method calls the corresponding Reaction::makeStep() method of the underyling Reaction object...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>ab223d02c7a604123c8d7c451e5d86a33</Anchor>
    <Abstract>Forwards the call to the similarly named method of ChemGillespieImpl. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a2d5ed4fab56ebe5e90a0b7f7e605b90b</Anchor>
    <Abstract>Forwards the call to the similarly named method of ChemGillespieImpl. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPassivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>abf9dd2df1932720822ac6b1faeb70b25</Anchor>
    <Abstract>Forwards the call to the similarly named method of ChemGillespieImpl. </Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a178f4be92754cfb40dcb6f5fb25dbaa6</Anchor>
    <Abstract>Print information about this RNodeGillespie such as &quot;a&quot;, &quot;a_penult&quot; and the Reaction which this RNode...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printDependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>ac3e927cc00182eca3289cf6a4587d2dd</Anchor>
    <Abstract>Print the RNode objects which are dependents of this RNode (via the tracked Reaction object dependenc...</Abstract>
    <DeclaredIn>ChemGillespieImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_chem_Gillespie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a17f8b8b148da5586a31a5720e3f2b748</Anchor>
    <Abstract>A reference to the ChemGillespieImpl which containts the heap, random number generators, etc. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_react</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a17e883bc0b90ba0aef2b5b41e505f066</Anchor>
    <Abstract>The pointer to the associated Reaction object. The corresponding memory is not managed by RNodeGilles...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>a6e27b71748a2fdaef116fc0a0f3b4781</Anchor>
    <Abstract>The propensity associated with the Reaction. It may be outdated and may need to be recomputed if need...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_a_prev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeGillespie</Scope>
    </TokenIdentifier>
    <Path>classRNodeGillespie.html</Path>
    <Anchor>ae132221a1a09a566b08808c996f8b51c</Anchor>
    <Abstract>The propensity associated with the penultimate step of this Reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeNRM</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Abstract>Reaction Node for the Next Reaction Method. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeNRM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>abcdcce52b4bbf2fe03916aee59da4695</Anchor>
    <Abstract>Ctor: </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNodeNRM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a5e23c02ae145776cc30c3b2d3db00b7d</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a09dfd7a16917e53dab4cbef672e3b458</Anchor>
    <Abstract>Assignment is not allowed. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNodeNRM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>abbc24167cddde84ef4b8ea5407ed1fbe</Anchor>
    <Abstract>Dtor: 1) Erases the corresponding PQNode element in the heap via the handle; 2) The RNode pointer of ...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateNewRandTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a7067410e41c97db4e5b49f2f4ff68fb1</Anchor>
    <Abstract>This methods recomputes the reaction propensity based on current coefficients and the rate...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>abcdb3310cfc42838212e3fa1552cd0f3</Anchor>
    <Abstract>Returns a pointer to the Reaction which corresponds to this RNodeNRM. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateHeap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a961e39b7ae8f226c58e9e7bd6381a61f</Anchor>
    <Abstract>The heap is updated only with respect to the specific PQNode element which presumably was modified (e...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a0f5092b9a9ffc87dcfb83db7a69f6353</Anchor>
    <Abstract>Returns the tau from the the associated PQNode element. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTau</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a1dfb224d15b638f2f0bb0fed115a46c4</Anchor>
    <Abstract>Sets the tau of the the associated PQNode element. Does not update the heap. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a088d958ddbc589f232a498695898d147</Anchor>
    <Abstract>Returns a handle to the associated PQNode element, which can be used to access tau, for example. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>aea98802552bcd307b78668571996ec83</Anchor>
    <Abstract>Return the currently stored propensity, &quot;a&quot;, for this Reaction. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reComputePropensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a66778f105263d5d61f8630936a19d418</Anchor>
    <Abstract>(Re)Compute and return the propensity associated with this Reaction. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProductOfReactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a45f544a919f0d3b9cf0b75e484d8d32e</Anchor>
    <Abstract>Compute and return the product of reactant copy numbers. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>adeeec1e8186ce2cfc004cfe242eaa30d</Anchor>
    <Abstract>This method calls the corresponding Reaction::makeStep() method of the underyling Reaction object...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a37054113d33f02fad5a9daa4c7130ba4</Anchor>
    <Abstract>When this method is called, a new tau is computed and the corresponding PQNode element is updated in ...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a21b4c0345217a78b61952a13ef3a6d5e</Anchor>
    <Abstract>When this method is called, reaction&amp;#39;s tau is set to infinity, the propensity is set to 0...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPassivated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a7178bae745f0242580efa99a114168fe</Anchor>
    <Abstract>Return true if the Reaction is currently passivated. </Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSelf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>ae04662a366d10fd7b033d1aa3f9f2817</Anchor>
    <Abstract>Print information about this RNodeNRM such as tau, a and the Reaction which this RNodeNRM tracks...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printDependents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>ac3fed6dc98796d32c294f505c2fcc466</Anchor>
    <Abstract>Print the RNode objects which are dependents of this RNode (via the tracked Reaction object dependenc...</Abstract>
    <DeclaredIn>ChemNRMImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_chem_nrm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>ae7a8eb17ab2dc835ac90adc54027f96f</Anchor>
    <Abstract>A reference to the ChemNRMImpl which containts the heap, random number generators, etc. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a8330d3bffc447a421484615c84ab080b</Anchor>
    <Abstract>The handle to the associated PQNode element in the heap. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_react</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>a36a50436adc1814fab1719a0ed7caf3c</Anchor>
    <Abstract>The pointer to the associated Reaction object. The corresponding memory is not managed by RNodeNRM...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RNodeNRM</Scope>
    </TokenIdentifier>
    <Path>classRNodeNRM.html</Path>
    <Anchor>aaaa96176cd44d7ab30778d73c65677d8</Anchor>
    <Abstract>The propensity associated with the Reaction. It may be outdated and may need to be recomputed if need...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpecies</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Abstract>Represents the reactive aspect of chemical molecules. It tracks their copy number and can be used in ...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a42066424867af0b109d0833f8826072b</Anchor>
    <Abstract>Constructors. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>aff60041af8192798c9c67c8c5b9a69a4</Anchor>
    <Abstract>deleted copy constructor - each RSpecies is uniquely created by the parent Species ...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>abadb78fc4c8b8e2ddfeda6285b0fda40</Anchor>
    <Abstract>deleted move constructor - each RSpecies is uniquely created by the parent Species ...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a634f7c45052258c7c971fe6b4b576d0d</Anchor>
    <Abstract>deleted assignment operator - each RSpecies is uniquely created by the parent Species ...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>af15e0af66ae1171253b9205f4cd8dfd8</Anchor>
    <Abstract>Sets the copy number for this RSpecies. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>up</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a6ded5d8dc0ccfcb0a45418a6c33a5595</Anchor>
    <Abstract>Increases the copy number by 1. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>down</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a7171743315bf9687feb639f13cea4ef5</Anchor>
    <Abstract>Decreases the copy number by 1. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAsReactant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a6e52bc2409c55b706197b2e48323aff2</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAsProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>aa3e5bfc99f8e3a403051839f717ff775</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAsReactant</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a3abaae1f77fc3cd47eb77926b7f26828</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAsProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>abafe985e54f2ca717e3d093217864bd4</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateAssocReactantReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a8e5442de08d5f11166cf153f96062e99</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activateAssocProductReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>ae3b2bf2d19b7b27dff79dd3fbd6be66b</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateAssocReactantReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a4cecb0924ec9576ffb9006878739b3d9</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>passivateAssocProductReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>ad283410f170a8f90805ddfcf2e11bef8</Anchor>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>accd8e595b1e16dc81990043ea56e90bd</Anchor>
    <Abstract>It is required that all Reactions associated with this RSpecies are destructed before this RSpecies i...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>ab9b95848fbc0ceffbe0d1ca0153ebde7</Anchor>
    <Abstract>Return the current copy number of this RSpecies. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>acd2575ae0c35ed2eddddd346baffd103</Anchor>
    <Abstract>return parent Species as a reference </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a4a68b63a45665131b5640389932274b1</Anchor>
    <Abstract>return parent Species as a const reference </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>ae7f6d21c784b823a9929db2871948692</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bulk}&quot;. </Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReactantReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a51a3f15e8b4ae12c6b1b706ff615c804</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;, which contains pointers to all Reactions where this RSpecies is involv...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProductReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>aa48b1fba86bebd7824076a86a65a7b76</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;, which contains pointers to all Reactions where this RSpecies is involv...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginReactantReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>abde1a54d7f5aeef2a95679b691c653ad</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;::iterator, which points to the beginning of all Reactions where this RS...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginProductReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a9cb66f9a3c5488cb405c7287852b0219</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;::iterator, which points to the beginning of all Reactions where this RS...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endReactantReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>ab4d59bf721abd8ea1f8611341d6e8483</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;::iterator, which points to the end of all Reactions where this RSpecies...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endProductReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a5afb91e624b040c2f10d44f446668f7d</Anchor>
    <Abstract>Return vector&lt;ReactionBase *&gt;::iterator, which points to the end of all Reactions where this RSpecies...</Abstract>
    <DeclaredIn>RSpecies.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a533594d731cf6ec10a4d7321b1213cc5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_as_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a231c4835e7367ffdb405a1463a7f8170</Anchor>
    <Abstract>Reactions calls addAsReactant(), removeAsReactant() - which other classes should not call...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_as_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a166eef547a69e4c03f5a8390b5f0686b</Anchor>
    <Abstract>a vector of Reactions where this RSpecies is a Product </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a884cfd77555cd6f783ef95289a87f8a5</Anchor>
    <Abstract>reference to the parent Species object </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_n</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>RSpecies</Scope>
    </TokenIdentifier>
    <Path>classRSpecies.html</Path>
    <Anchor>a3c247ef50a25db875d0f657e6a2505ca</Anchor>
    <Abstract>Current copy number of this RSpecies. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleManagerImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Abstract>A concrete implementation of the ChemManagerImpl class. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimpleManagerImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a7a427f95f5745e69aa57cb63a0570915</Anchor>
    <Abstract>Constructor sets subsystem pointer. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a1db7aeaed44ae7c9cdc506176af6d186</Anchor>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>ae4e23427c4e406bb9ad99d13099f7f02</Anchor>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateCCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>af8546bec65b406009203066059f88052</Anchor>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genGeneralReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a99b517b17f904f2d6fd92a308b459e36</Anchor>
    <Abstract>Generate the general, non-filament reactions. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genBulkReactions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a7bb497c77b2eee7ee560d0259061e552</Anchor>
    <Abstract>Generate bulk reactions. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genIFRxnManagers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a7e196ec854f3d9dff5c930c23e0a656f</Anchor>
    <Abstract>Set up all reaction managers from the setup struct. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>genCFRxnManagers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a0018d381ff3b968d74fa261ea9774dee</Anchor>
    <Abstract>Set up all reaction managers from the setup struct. </Abstract>
    <DeclaredIn>SimpleManagerImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_subSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a3815d1181b7c1a25aca95701dd6d8188</Anchor>
    <Abstract>A pointer to subsytem for creation of callbacks, etc. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_IFRxnManagers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a577d86758aa99cd7ebf965872dfce50f</Anchor>
    <Abstract>A list of reactions to add to every new CCylinder. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_CFRxnManagers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a62c7e79906c431487c9c97474c6aab6e</Anchor>
    <Abstract>A list of cross filament reactions to add to CCylinders. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a6842452647356333fa3a8dfc9daad925</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a8c41d3d46a0534a7127d5b863718bcba</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a07794aeec638f61758d22f7ba3b2d5b4</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>ad09569aff7c98442037cd4b5e5fd1d4d</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>ac5bb2d96109696dcd63109154f88c6be</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_speciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SimpleManagerImpl</Scope>
    </TokenIdentifier>
    <Path>classSimpleManagerImpl.html</Path>
    <Anchor>a5ff19b12a756eaba341d179b795ed6b4</Anchor>
    <Abstract>Vector of Filament -related species in system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Abstract>Represents chemical molecules, tracks their copy number and can be used in Reactions. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>abb0f8e3208b0cc676157b7dff837c0be</Anchor>
    <Abstract>Default Constructor; Should not be used by the end users - only internally (although it is not marked...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a7c18ebc80eac720b2ee560a89587c13e</Anchor>
    <Abstract>The constructor for this base class of Species should not be called directly - only by the concrete s...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>abfe20eea461a75aa2a5dce130480e9ce</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a0d8e3ec67f5d9d850237209763c46740</Anchor>
    <Abstract>Move constructor - makes it possible to easily add Species to STL containers, such as vector&lt;Species&gt;...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a0b0b78927bd86d5c46c6c58afd5fcf13</Anchor>
    <Abstract>Assignment operator An assignment A = B copies the name of B to A. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>ac3f4cff8872442473bedcda82e5ef314</Anchor>
    <Abstract>Move assignment is needed for the same reasons as move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a5a7e96158d90d5f59f75c9e3405b54c6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>ac2c46c7a238233581e70685900dbb970</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a00dab56705525cefef915aa29363a959</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bulk}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_molecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a2cd51e66d421793bc3a8df9a7b0aa7d6</Anchor>
    <Abstract>unique id identifying the molecule (e.g. the integer id corresponding to &quot;Arp2/3&quot;) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rspecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a8267607e66889feba64d1c00674337af</Anchor>
    <Abstract>pointer to RSpecies; Species is responsible for creating and destroying RSpecies </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a747392355a5d95f5dfd769a56076f538</Anchor>
    <Abstract>pointer to the &quot;container&quot; object holding this Species (could be a nullptr) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a22987c5719b74c50465256ea5b9d80bf</Anchor>
    <Abstract>Returns true if two Species objects are equal. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aff630d716711fbbab3bc7f598230316b</Anchor>
    <Abstract>Return true if two Species are not equal. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBound</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Abstract>Used for species that can be bound to a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a30b5f99c24460658e62d96313e2a85d9</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>aed911a49df201aa3f38869e06d0144ab</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a7c20dcd943d0552bf62dd23434961462</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>adaf343dde6acaee3b926e73044c7492f</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a237e8e52a1ff76953741cdb6eef5c592</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a67abec4a830859a3e91e6eda705cc831</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a729e4ef2724698f48c45e17972fa1726</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a251dcc12a2599a4df36155539cb0efeb</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bound}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a7ac5d93e32405d9ae4f84efdf943e83c</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a33c3de1c4a1e2f63f390b2bfd53fcfa1</Anchor>
    <Abstract>Setter and getter for CBound. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>ad55d11c86de01f2381ac9d5a286d8cea</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a904307cc8343605a9dbb05d4f2fa6bf9</Anchor>
    <Abstract>remove cBound ptr </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>aac440237801e6a4cb29be223cf8905db</Anchor>
    <Abstract>CBound object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBulk</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Abstract>Used for species without spatial information (i.e. well-mixed in the container) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>a41d65d8e83b8aad1b328ab35da984cae</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>a401987f8f89fc0f3ccfaa9409fd761e1</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>af58063977554bb4403a94266a9deedcc</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>adabbd68f6997c2400e2c2841d605a449</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>ab7cde6b18a2d5232f39c0b82ac8b3cf0</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>ae4fc624a8e69de73ed83a385c6a4b945</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>a4bca7120d95d6303f66a5bca30a2612b</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>aeb3983d890dae341fe53355c4b29dc6b</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bulk}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesBulk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBulk</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBulk.html</Path>
    <Anchor>a38a4f887db51ac60a6875024681d1988</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesContainerIFace</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Abstract>An abstract interface for a container of Species objects. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a6ee46dc4246bcc68e74bc628dae79f08</Anchor>
    <Abstract>Remove all Species with the specified index from the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a8909680d58ea288f4aa4ef7d177446ee</Anchor>
    <Abstract>Remove all Species with the specified name from the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>abcd9a5f6a32c957c07afbc2c3cccec62</Anchor>
    <Abstract>Return a reference to the first Species having the specified name. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>aeb3bef4a9510ed94aecf3a8c5dad161e</Anchor>
    <Abstract>Find the index of Species with the specified name in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a91f57b7fff89426be885de142c03f09f</Anchor>
    <Abstract>Return a reference to Species at the position index in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a529a00b8ece0bede0e94e0c150579166</Anchor>
    <Abstract>Return a reference to Species which satisfies the equality operator with s. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a3c683e11b4af6e3fbd280a5aa027002e</Anchor>
    <Abstract>Return a reference to Species matching the molecule field of Species. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a41ad985794a396be719c2615da26e205</Anchor>
    <Abstract>Return true, if all contained Species are different from each other as determined by Species...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>ab9e73c92f995528db474963722929706</Anchor>
    <Abstract>Return the number of Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerIFace.html</Path>
    <Anchor>a37b4a06dc47eb464124c9a7f688c89ec</Anchor>
    <Abstract>Print all Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesContainerVector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Abstract>A concrete class implementing the SpeciesContainerIFace, using vector&lt;SpeciesSpecific&gt; as the contain...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a4ac44aefad323712e75dda7f2d5d09df</Anchor>
    <Abstract>Add species of type SpeciesSpecific to the container, forwarding Args to the corresponding Species co...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>af6f9bbd7215300d4f1dabc636ceeb952</Anchor>
    <Abstract>Remove all Species with the specified index from the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a7d35f37815f070547b30666bede37dd7</Anchor>
    <Abstract>Remove all Species with the specified name from the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a7c8aadd03e72887a536627059e88e884</Anchor>
    <Abstract>Return a reference to the first Species having the specified name. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a872dadde95026895570ecfa7a6dd1c63</Anchor>
    <Abstract>Find the index of Species with the specified name in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a9551fbf577ee8d7e37fe3ad8d2d52fe9</Anchor>
    <Abstract>Return a reference to Species at the position index in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>af3750cae18347e9e01173e46256cccfe</Anchor>
    <Abstract>Returns true, if all contained Species are different from each other as determined by Species...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a358f0e8d1c4fc2fcc4646fa957ae3915</Anchor>
    <Abstract>Return a reference to Species which satisfies the equality operator with s. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>ae6d2d4763abcebf7ffb1b3434b180c6a</Anchor>
    <Abstract>Return a reference to Species matching the molecule field of Species. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>ab78398f3bd86ae9b813973181ed705a1</Anchor>
    <Abstract>Return the number of Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a31ca6c4ad5a07bad85d8eeb5209ba77b</Anchor>
    <Abstract>Print all Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a8b06733868c457e24299cb6dd0acbc1b</Anchor>
    <Abstract>Return a reference to the underlying vector&lt;unique_ptr&lt;Species&gt;&gt; container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a18ec9210085962c6350b8e980cf14a6f</Anchor>
    <Abstract>Return a const reference to the underlying vector&lt;unique_ptr&lt;Species&gt;&gt; container. ...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesContainerVector.html</Path>
    <Anchor>a0dde776cfb79686cc42cfa41ce546f45</Anchor>
    <Abstract>The container of Species of type SpeciesSpecific. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesDiffusing</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Abstract>Used for species which can move spatially from one compartment to the neighboring one (i...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a0b504aab6af768c9f5e93d8675bad2c8</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a3da06d6d20e94c627d0acb10d507265f</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a0355b1cdd743b527347f269ffb5bc8ae</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>ac6db6f3ef60f4cb9b3e842350ff0af27</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>aaad12221feed8486a0b07d358105e4fb</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a4439f2e8612da24e0c7ae83810af8490</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>af3b8326e4b81d2bb4d65630ee7a49995</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a143bb7cf1e7dfbd4d514224b4d0ba042</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Diffusing}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesDiffusing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesDiffusing</Scope>
    </TokenIdentifier>
    <Path>classSpeciesDiffusing.html</Path>
    <Anchor>a41f1ef9dce4d47e470ffab1c8cf8d960</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesFilament</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Abstract>Used for species that can be in a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a9d4dace1a3d5c2721a7544843f435ca4</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>ac912b219a8dcf080fb7d506232c6f2fd</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a33a1f5f9db874eeda35051a120d9e9d9</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a09461d8b9de1287a31abc041a5058ff2</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>af6851ce7208f430d38a896905d531850</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>ab0d63a5f3b5bea7a19cbdd76953dc578</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a1a4b86c27795ca658c65ac415f8861a7</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a18ee4cfa2eb8ba642b97996924564292</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Actin{Filament}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesFilament</Scope>
    </TokenIdentifier>
    <Path>classSpeciesFilament.html</Path>
    <Anchor>a1b511784f8db85fe058fc3aadad1ace8</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesLinker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Abstract>Used for species that can be bound to a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>abb405437f0bef015115499a06ca70fe8</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a62d3acd60639f435bca8ca20d821280b</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a608df9d3975441a42566635edc9b6fa0</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a50d828566a3cc5ae5aa1532e5eaa0ae4</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a34f5b40037ef0788868a580fb70690b4</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a83599a03e520252f456ea45046efd654</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a5555ddb310465ae43ec89927236d2fc8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a4f964e32cd7d13d86ea75cb962511f3a</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Linker}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesLinker</Scope>
    </TokenIdentifier>
    <Path>classSpeciesLinker.html</Path>
    <Anchor>a771670554e12d3a59039834254dade23</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a33c3de1c4a1e2f63f390b2bfd53fcfa1</Anchor>
    <Abstract>Setter and getter for CBound. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>ad55d11c86de01f2381ac9d5a286d8cea</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a904307cc8343605a9dbb05d4f2fa6bf9</Anchor>
    <Abstract>remove cBound ptr </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>aac440237801e6a4cb29be223cf8905db</Anchor>
    <Abstract>CBound object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMinusEnd</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Abstract>Used for a minus end species on a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>af0384659ba93d7aadc80d12059dc886f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a6268dec62372e99995729e9caa506af3</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a2b57190b7e3a2b8b31ed1beb56cec18b</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a077dd3c7539a2fdb25e75b972463831a</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a290ec2836fff00bb8fa734b3593a7023</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a0220f15a2fd8e07510f5e02c8f8fc0fe</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a21083383e254146fd074161c7b2cf88b</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a0c22b4471bd9ca01b2795838e5d4e46a</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bound}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesMinusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMinusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMinusEnd.html</Path>
    <Anchor>a0a8f2b1b552064b5e814f5da24cc785d</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMotor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Abstract>Used for species that can be bound to a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>ae659b389e46920744b7ba86d0bd8bd86</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>a1305517bcaa943a96d145eeab328cc96</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>a926ebf2aeb4d3346e3c3ddbd559b23f5</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>ae3ea3dc17f8a8772ccbed419c1456f51</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>a6af8ad1c7062fbe6935b81d72b1b23db</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>ab9ac41b742eefe5d9e514c8baab3c809</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>a8b035f81717d4c29546f47ada9924b62</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>a31f9c0c447c007c1ba04bb0ce1d9c0e1</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Motor}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesMotor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesMotor.html</Path>
    <Anchor>ae53e668a63ea2c7e725449913467fb79</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a33c3de1c4a1e2f63f390b2bfd53fcfa1</Anchor>
    <Abstract>Setter and getter for CBound. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>ad55d11c86de01f2381ac9d5a286d8cea</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>a904307cc8343605a9dbb05d4f2fa6bf9</Anchor>
    <Abstract>remove cBound ptr </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesBound</Scope>
    </TokenIdentifier>
    <Path>classSpeciesBound.html</Path>
    <Anchor>aac440237801e6a4cb29be223cf8905db</Anchor>
    <Abstract>CBound object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesNamesDB</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Abstract>Used to associate unique integers with character based names of Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intToString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>ac2cc60cba624407d270e0de80c6f20fe</Anchor>
    <Abstract>Given an integer &quot;i&quot;, returns the string associated with that integer. Throws an out of range excepti...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stringToInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>acc0a62d3f071e1c3fd85ae3d7565c381</Anchor>
    <Abstract>Given a string &quot;name&quot;, returns the unique integer associated with that string. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateUniqueName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a711325156ec7d770ac59ae2bb35cc17d</Anchor>
    <Abstract>Generate a unique name based on a seed name (just adds integer value to end of string) ...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a7387ec4eb51c377cd56bf3eaeabad4f0</Anchor>
    <Abstract>Clear the contents of the database. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a845e8c31528ebce2177f916ef6018614</Anchor>
    <Abstract>returns the unique instance of the singleton, which can be used to access the names DB ...</Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesNamesDB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>ac95818ac6b9abaf298b1b32c518a938b</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_map_string_int</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a102ccdb08c93602260cff62cbf7d712a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vec_int_string</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a668ee868496f58154d860caef5fc64cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_num</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>a8339994ccc621359cf8de735865be6a7</Anchor>
    <Abstract>used to generate unique names </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesNamesDB</Scope>
    </TokenIdentifier>
    <Path>classSpeciesNamesDB.html</Path>
    <Anchor>aa47f96058594e809c9da48eef415ce8b</Anchor>
    <Abstract>the singleton instance </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPlusEnd</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Abstract>Used for a plus end species on a Filament. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>a940477fe241c4e36a13d42a479c788d6</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>ab36e50cc010eccade0ef3f2223727644</Anchor>
    <Abstract>The main constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>a353b33c1e93acf5254e761eb0045c3a0</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>ae83c7bb9f800dc394a6e5038f1e043f1</Anchor>
    <Abstract>Move constructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>a5f0bc88dba1a97d30d54c0b37e349ec7</Anchor>
    <Abstract>Regular Assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>a1ef2d1e906f0470eb62465d574e0491f</Anchor>
    <Abstract>Move assignment. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>a359b23c2ec95d9ead3f8f40d1bc641de</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>aa010e7adb578155bf0142fa84684b47e</Anchor>
    <Abstract>Return the full name of this Species in a string format (e.g. &quot;Arp2/3{Bound}&quot;. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesPlusEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPlusEnd</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPlusEnd.html</Path>
    <Anchor>ab1c15e965d105e1d11dcc8608796d789</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>af24cab7cbaa561d35b08fef5faf05fdf</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>acc64c5b61abf911872d433ac32b62de8</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a40262d7217fcc28a31682aee40a19232</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a876c8a827476a11e05f3b7a7669c29b6</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a048dd7bc3fecd08b1b1797dc83aa163d</Anchor>
    <Abstract>Return a reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aa1069a34b360f84d186f48bd99f80971</Anchor>
    <Abstract>Return a constant reference to RSpecies. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a88de7cf5130cb9cee2da3585374db654</Anchor>
    <Abstract>Sets the copy number for this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>aea7327b3fed261c705b4d32b9973aa58</Anchor>
    <Abstract>Return the current copy number of this Species. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a28fa239dded841133760ff9c47af63a1</Anchor>
    <Abstract>Return this Species&amp;#39; name. </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1ea8969c51bc69879891a408f9e197c7</Anchor>
    <Abstract>Return the molecule index associated with this Species&amp;#39; (as int) </Abstract>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Species</Scope>
    </TokenIdentifier>
    <Path>classSpecies.html</Path>
    <Anchor>a1864e111fe0304ca8d6b2d0d955a7356</Anchor>
    <DeclaredIn>Species.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPtrContainerIFace</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Abstract>An abstract interface for a container of pointers to Species objects. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a24b295940cb32a0c171e3c1b43a95923</Anchor>
    <Abstract>Add species to the container. The memory of species is owned by the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a2cb618d807a2b762eedbe98ba4f5c729</Anchor>
    <Abstract>Add species to the container. The memory of species is owned by the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a251f31bfa76883ae1f1e36eda334b7c4</Anchor>
    <Abstract>Remove all species matching &quot;name&quot; from the container. The memories are freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a5eec3ac264602e649e3f9c04b60802b1</Anchor>
    <Abstract>Remove species from the container. The memory is freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a5f39d65d743ac0a49db0be31fa8ac09b</Anchor>
    <Abstract>Empty the container. All memories are freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a5b97ea15e9bed033df91915749f2b127</Anchor>
    <Abstract>Return a pointer to Species which has a name matching the argument. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a7ffd588e38c333972be8a00e27eb8ebc</Anchor>
    <Abstract>Return a pointer to Species having specified index in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>ac354d14a8ea4c587acb57dca84ae87d6</Anchor>
    <Abstract>Return a pointer to Species matching the molecule field of Species. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>aec7587e277efd806e327b5f32e8b8b0e</Anchor>
    <Abstract>Return a pointer to Species which satisfies the equality operator with s. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a701ad0d3c0991bf124d45c9219d6afb1</Anchor>
    <Abstract>Return true, if all contained Species are different from each other as determined by Species...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a111c381f217404fad8177f948d0e7e00</Anchor>
    <Abstract>Return the number of Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerIFace</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerIFace.html</Path>
    <Anchor>a2e0203745a1f4ff6603d06e45323a9af</Anchor>
    <Abstract>Print all Species contained by the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPtrContainerVector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Abstract>A concrete class implementing the SpeciesPtrContainerIFace, using vector&lt;unique_ptr&lt;Species&gt;&gt; as the ...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPtrContainerVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a398eb128b04d3ec68c3cedbd0671e0f9</Anchor>
    <Abstract>Default Constructir. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesPtrContainerVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a3f622097f66c6ba836409f4ee0548268</Anchor>
    <Abstract>Copying is not allowed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>ae953a376c2d45174fada0d77689c5a9f</Anchor>
    <Abstract>The equality operator is not allowed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a72b7289c2611d82e18b32fbb4a569b4b</Anchor>
    <Abstract>Empty the container. All memories are freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a5e34bc3ef8140dfa460c4ea2e9754bd1</Anchor>
    <Abstract>Add species to the container. The memory of species is owned by the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a0357974babc855f5449f07988a6c618c</Anchor>
    <Abstract>Add species to the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a59bdc319752c5ed74bcabc03899f640e</Anchor>
    <Abstract>Add species of type T to the container, forwarding Args to the corresponding Species constructor...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a28489e107644d77ad7d0c6fb9a2ac741</Anchor>
    <Abstract>Remove all species matching &quot;name&quot; from the container. The memories are freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>adb135105c080781ca40782ba267bd611</Anchor>
    <Abstract>Remove all species from the container. The memory is freed. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a63cd8f629a07f43379cce0a6e4026daf</Anchor>
    <Abstract>Return a pointer to Species which has a name matching the argument. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByMolecule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a327d4f5fcab1f34f2800bcd9fc329847</Anchor>
    <Abstract>Return a pointer to Species matching the molecule field of Species. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSpeciesByIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a3939b7cb8f19d90b1bf3ae55fd472cee</Anchor>
    <Abstract>Return a pointer to Species having specified index in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findSimilarSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a063a3aca60583beb76f4837868381446</Anchor>
    <Abstract>Return a pointer to Species which satisfies the equality operator with s. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a9ce8b3b4f9a170def9d758d4286e0d3e</Anchor>
    <Abstract>Return a reference to the underlying vector&lt;unique_ptr&lt;Species&gt;&gt; container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>aba5b9c097ec36c733d4c320988afe0b6</Anchor>
    <Abstract>Return a const reference to the underlying vector&lt;unique_ptr&lt;Species&gt;&gt; container. ...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>areAllSpeciesUnique</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>a32ef3763c7cb54ef42058a18b3765382</Anchor>
    <Abstract>Returns true, if all contained Species are different from each other as determined by Species...</Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>af7537443af8708edbb8c360a334882a2</Anchor>
    <Abstract>Return the number of Species in the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printSpecies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>ad7f746d974b5b82c25d9b7eb098c7168</Anchor>
    <Abstract>Print all Species contained by the container. </Abstract>
    <DeclaredIn>SpeciesContainer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_species</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesPtrContainerVector</Scope>
    </TokenIdentifier>
    <Path>classSpeciesPtrContainerVector.html</Path>
    <Anchor>ae47f73598325d803fcb84209bbc136cd</Anchor>
    <Abstract>Species pointers container. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Abstract>The Visitor pattern allows a functor to visit each node of the Composite pattern. ...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Anchor>a1a3573d237d36307cc35e123e67875db</Anchor>
    <Abstract>When this Visitor, *v, is propagated through the Composite hieararchy, at each Component node pointer...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpeciesVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Anchor>a07365fea8fc4e68898f68476d6da0064</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Anchor>a6702d4e5a08830afbf069bbe9304689c</Anchor>
    <Abstract>When this Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointe...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Anchor>a3ea54d8670df82e87c8ee7d32b927584</Anchor>
    <Abstract>Return true if the Species *s satisfies the desired predicate. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpeciesVisitorLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Abstract>Allows using C++11 lambda expressions to set the action to be performed on each Species of the node a...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>a09d2fbe0f3aec217fb587b7a4ad26733</Anchor>
    <Abstract>Sets the action to be perfomed on each node as std::function&lt;bool (Component*)&gt; g. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambdaPred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>a9e47f21aa9709e39065e8f393ed094c5</Anchor>
    <Abstract>Sets the predicate which checks whether the node should be evaluated as std::function&lt;bool (Component...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitor</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitor.html</Path>
    <Anchor>a1a3573d237d36307cc35e123e67875db</Anchor>
    <Abstract>When this Visitor, *v, is propagated through the Composite hieararchy, at each Component node pointer...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>aa98d74ce907a46e8f7ad1ce25d5445fe</Anchor>
    <Abstract>Implementation of the visit(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>addaad814d443e92eff749acae08f9e3d</Anchor>
    <Abstract>Implementation of the pred(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>a3ebed66a4854319a21d1386558bb02f5</Anchor>
    <Abstract>The function to be perfomed on each node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SpeciesVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classSpeciesVisitorLambda.html</Path>
    <Anchor>abf8ae012adcc257d55c0280ad2173eac</Anchor>
    <Abstract>The predicate which checks whether the Species should be evaluated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>classSphere.html</Path>
    <Abstract>A simple implementation of the BoundarySurface class. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>classSphere.html</Path>
    <Anchor>a666bb65e4d9db394c6e91c3fa6d1cffb</Anchor>
    <Abstract>Constructor, creates boundary elements. </Abstract>
    <DeclaredIn>BoundarySurfaceImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a402dcf23f4f96110569d01e401edee5a</Anchor>
    <Abstract>Get boundary elements. </Abstract>
    <DeclaredIn>BoundarySurface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundaryElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>a67f60b2d22fb67f097e98025803d3d34</Anchor>
    <Abstract>Vector of boundary elements that make up this surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nDim</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundarySurface</Scope>
    </TokenIdentifier>
    <Path>classBoundarySurface.html</Path>
    <Anchor>af3ed79310c6ba6cdc8e9f176bf463eb1</Anchor>
    <Abstract>Dimensionality of surface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>classSphere.html</Path>
    <Anchor>a68255c3822c940da2e423d17aaaf6190</Anchor>
    <Abstract>Center of sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>classSphere.html</Path>
    <Anchor>a3e97d05676e0513fa6b01b419b071bc6</Anchor>
    <Abstract>Radius of sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphereBoundaryElement</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Abstract>A spherical implementation of a BoundaryElement. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphereBoundaryElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a03cc51e8db0d5f638d772ac95720f436</Anchor>
    <Abstract>Constructor, sets parameters of equation. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>distance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a8e28d60646f36a7ff943e69e62f248e4</Anchor>
    <Abstract>Implement for all boundary elements Returns the distance from a given point to this boundary element...</Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stretchedDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a41d124459d11422c46c578f70d1af1b0</Anchor>
    <Abstract>Returns stretched distance, similar to distance above. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a505ad6dae8dfaff38f2b845d6f7b7ee5</Anchor>
    <Abstract>Returns normal vector of point to plane. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRepulsionConst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>aa9b8bd814e79f335232d3aac100148a0</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreeningLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>aacda85af577d438ce939274960d72045</Anchor>
    <Abstract>Getter for parameters. </Abstract>
    <DeclaredIn>BoundaryElementImpl.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ace76817d750bb44c11edd918f1a8b78f</Anchor>
    <Abstract>return coordinates of boundary element </Abstract>
    <DeclaredIn>BoundaryElement.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_coords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>BoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classBoundaryElement.html</Path>
    <Anchor>ab51302e10e3e2def98438234ba5bf801</Anchor>
    <Abstract>coordinates </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a292f2562c66472f77e516ea19121f360</Anchor>
    <Abstract>Radius of sphere. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_k_rep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a4bca6baf26a3fb1718aaaed348646a58</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_r0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SphereBoundaryElement</Scope>
    </TokenIdentifier>
    <Path>classSphereBoundaryElement.html</Path>
    <Anchor>a3e80ad9724c8ae7ff03631b4f2f84d1b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Abstract>Manages all objects in the system, including Filaments, Linkers, and MotorGhosts. ...</Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBoundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>af188159f69852d5383100f4498257166</Anchor>
    <Abstract>Add a boundary to this subsystem. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewFilaments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a000317a5714fd01c6666b1eefaf93fbe</Anchor>
    <Abstract>Add new filaments. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a094ae54ea558c3768cd0d682db4d73f5</Anchor>
    <Abstract>Add a new filament at runtime. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFilament</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ae70ef1e424504db17cbe5aefeb37f2ab</Anchor>
    <Abstract>Remove a filament from the system. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewLinkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>adf05a391a38d960204fe11b5aa482f70</Anchor>
    <Abstract>Add a linker at initialization. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a06f803275900f8fe1bec0b924ad6ea96</Anchor>
    <Abstract>Add a single linker during runtime. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLinker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ab9855ef25754ca903fc8039646fc6175</Anchor>
    <Abstract>Remove a linker from the system. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewMotorGhosts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a0f9e863b6c639fe5ee2d321c24085146</Anchor>
    <Abstract>Add a motor at initialization. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNewMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>aeb47884d24b1e2f6df9225f75ae675f0</Anchor>
    <Abstract>Add a motor during runtime. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMotorGhost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>acdfe4026f3baf5b09071f2abc687df9c</Anchor>
    <Abstract>remove a motor ghost from the system </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMovables</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>acac40388fed2315149a5e30a481f495c</Anchor>
    <Abstract>Get all movables in the subsystem. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReactables</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>afc90cc477977cad9ba0d963eeacadc0a</Anchor>
    <Abstract>Get all reactables in the subsystem. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSystemSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>af7062aeb03076cfd96446921682381ac</Anchor>
    <Abstract>Return the number of beads in the system. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSubSystemEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ad36970bb95e0dc35b9b75de449c7f9cb</Anchor>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a969b757cf8d54ce0a6c491c3d3286faa</Anchor>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubSystemEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ab17565f7dbc61ee5acdaacc829b359f1</Anchor>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMovable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a08011422ab842179aef8db76e92698f1</Anchor>
    <Abstract>Setter functions for movables. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMovable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ac523c7c0e590874bdafdef8fc1a85255</Anchor>
    <Abstract>Setter functions for movables. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReactable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a6eabe25eb8ab69b96656c569de45aa71</Anchor>
    <Abstract>Setter function for reactables. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeReactable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>af09f92179b407453f016c1c133c6531a</Anchor>
    <Abstract>Setter function for reactables. </Abstract>
    <DeclaredIn>SubSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>ad6f7f51491f99102870b8907926acc40</Anchor>
    <Abstract>energy of subsystem </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_boundary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a5500deb6aaeccd7418d264ff4e54484f</Anchor>
    <Abstract>subsystem boundary </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_movables</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>a746593123598cdda62ba3d3c51d31111</Anchor>
    <Abstract>All movables in the subsystem. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactables</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SubSystem</Scope>
    </TokenIdentifier>
    <Path>classSubSystem.html</Path>
    <Anchor>af9ffdc91d0631686e9f433729a216858</Anchor>
    <Abstract>All reactables in the subsystem. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Abstract>Static class that holds all simulation parameters, initialized by the SystemParser. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mechanics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a8099e2ebea135ea5d7c7e79d34600f52</Anchor>
    <Abstract>Const getter. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Chemistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a05c9527eb94d2cf4f164de3ef09afc4b</Anchor>
    <Abstract>Const getter. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Geometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a9211bca7e3422c076f4e9ba2dc29c599</Anchor>
    <Abstract>Const getter. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Boundaries</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a6e73fd102a3699c854d9e503c1b75fc1</Anchor>
    <Abstract>Const getter. </Abstract>
    <DeclaredIn>SystemParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a6640957e85bee1d107f2c9e8e0f4ca9d</Anchor>
    <Abstract>Public access if testing only. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>aca60412ffdeba39dd42733d8c7ce13a8</Anchor>
    <Abstract>The chemistry parameters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>ae96aa9a5a7f9accf304a44349b97a5ed</Anchor>
    <Abstract>The geometry parameters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>a74866443b1beee882b4e053fa1120969</Anchor>
    <Abstract>The boundary parameters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>SystemParameters</Scope>
    </TokenIdentifier>
    <Path>classSystemParameters.html</Path>
    <Anchor>ac46a56866fc9d9abe5fc1b873c8c8cb8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Abstract>To parse a system input file, initialized by the Controller. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SystemParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a47fe3046a8f228b77f06e84c56cccb39</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SystemParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a4603ce762d5b206694d97bb6c38f83ea</Anchor>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFilamentSetup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a2dac7ad3e016ee4ce9b93660c5192b2b</Anchor>
    <Abstract>Read Filament information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readChemistrySetup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a8d3ff2c2163a7d141e751530c29181c8</Anchor>
    <Abstract>Chemistry information. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMechanicsParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a746e657d409e3dd3b40b08558a072932</Anchor>
    <Abstract>Parameter parser. Reads input directly into system parameters. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readChemistryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a9170d246867cd58d69121ca6907baaf5</Anchor>
    <Abstract>Parameter parser. Reads input directly into system parameters. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>add4252ac4e2c4f2864a02ee13c45ad46</Anchor>
    <Abstract>Parameter parser. Reads input directly into system parameters. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBoundaryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a2a198730cbe281f0db40e1ddb529e878</Anchor>
    <Abstract>Parameter parser. Reads input directly into system parameters. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMechanicsAlgorithm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a93017271d75297c49a49e08871fa29e9</Anchor>
    <Abstract>Algorithm parser. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readChemistryAlgorithm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>aa4dc61cfb269e17ae8adcfe58a2d41de</Anchor>
    <Abstract>Algorithm parser. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMechanicsFFType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a4f4f2aafdb994a6e301f72874cc5c7d7</Anchor>
    <Abstract>Type parser. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBoundaryType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SystemParser</Scope>
    </TokenIdentifier>
    <Path>classSystemParser.html</Path>
    <Anchor>a722843391cea1893b49b55e9670b3c5a</Anchor>
    <Abstract>Type parser. </Abstract>
    <DeclaredIn>Parser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_inputFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Parser</Scope>
    </TokenIdentifier>
    <Path>classParser.html</Path>
    <Anchor>adc64c51d84a8fe723f7b4f13ca4d37cd</Anchor>
    <Abstract>input file being used </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeVisitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>TypeVisitor</Scope>
    </TokenIdentifier>
    <Path>classTypeVisitor.html</Path>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a3f8ea7ad6aa61e99d8d1bc0576bdf23c</Anchor>
    <Abstract>When this conditional Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointer *c, the following method is called: v-&gt;visit(c), if v-&gt;pred(c) returns true. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TypeVisitor</Scope>
    </TokenIdentifier>
    <Path>classTypeVisitor.html</Path>
    <Anchor>a567bc776ee742b262ba7aa12c83c8dcf</Anchor>
    <Abstract>Return true if the Component *c satisfies the desired predicate. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a1ebdba266c77626f67a22fc2300d8dc3</Anchor>
    <Abstract>When this Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointe...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeVisitorLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>TypeVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classTypeVisitorLambda.html</Path>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a77004dd1388b4b7ebc5d1d6fe1adb747</Anchor>
    <Abstract>Sets the action to be perfomed on each node as std::function&lt;bool (Component*)&gt; g. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambdaPred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a46d9cc856e3fbc7155dd2212981a8902</Anchor>
    <Abstract>Sets the predicate which checks whether the node should be evaluated as std::function&lt;bool (Component...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a3f8ea7ad6aa61e99d8d1bc0576bdf23c</Anchor>
    <Abstract>When this conditional Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointer *c, the following method is called: v-&gt;visit(c), if v-&gt;pred(c) returns true. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TypeVisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classTypeVisitorLambda.html</Path>
    <Anchor>a3157fca6f97df070135388705836899a</Anchor>
    <Abstract>Implementation of the pred(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>af934df1d8669dd315d824d9ee706f250</Anchor>
    <Abstract>Implementation of the visit(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a098597c2b62c63a2fd2a833add3cc43d</Anchor>
    <Abstract>The function to be perfomed on each node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>adfd5fc76108d52d9abc981c020379661</Anchor>
    <Abstract>The predicate which checks whether the node should be evaluated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnbindingCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>UnbindingCallback</Scope>
    </TokenIdentifier>
    <Path>structUnbindingCallback.html</Path>
    <Abstract>Callback to unbind a CBound from a Filament. </Abstract>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnbindingCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>UnbindingCallback</Scope>
    </TokenIdentifier>
    <Path>structUnbindingCallback.html</Path>
    <Anchor>af56dfa37467fed8f79f345b8ab85fedd</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>UnbindingCallback</Scope>
    </TokenIdentifier>
    <Path>structUnbindingCallback.html</Path>
    <Anchor>a9e2633d821ddd1442cb89561f3212eab</Anchor>
    <DeclaredIn>ChemCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>UnbindingCallback</Scope>
    </TokenIdentifier>
    <Path>structUnbindingCallback.html</Path>
    <Anchor>a1f765dfa9321fa8bba9924350f785985</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_s1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>UnbindingCallback</Scope>
    </TokenIdentifier>
    <Path>structUnbindingCallback.html</Path>
    <Anchor>a46d4f3151efafaee548438cd83d65122</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnbindingManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>UnbindingManager</Scope>
    </TokenIdentifier>
    <Path>classUnbindingManager.html</Path>
    <Abstract>Manager for all unbinding from Filament. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnbindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UnbindingManager</Scope>
    </TokenIdentifier>
    <Path>classUnbindingManager.html</Path>
    <Anchor>a701803bce8134c0dff76f3e5af78c687</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~UnbindingManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UnbindingManager</Scope>
    </TokenIdentifier>
    <Path>classUnbindingManager.html</Path>
    <Anchor>af1a852cd326b5f62e18e9389e2ee8b8c</Anchor>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UnbindingManager</Scope>
    </TokenIdentifier>
    <Path>classUnbindingManager.html</Path>
    <Anchor>a75a0b4e709bfb0787c8cec09b7255229</Anchor>
    <Abstract>Add this chemical reaction to a CCylinder. Adds all extension and retraction callbacks needed...</Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addReaction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UnbindingManager</Scope>
    </TokenIdentifier>
    <Path>classUnbindingManager.html</Path>
    <Anchor>a94018a46f879c98bd8b82f832a07b92d</Anchor>
    <Abstract>Add this chemical reaction cross two CCylinders. </Abstract>
    <DeclaredIn>ReactionManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reactants</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a63de9061c3da4ad03cf4c530d2774979</Anchor>
    <Abstract>Species identifier vectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_products</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>afd213da1a3706e2e88962e5da886a5dc</Anchor>
    <Abstract>Products in this reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a8b98dd9e6f5d016149f5434b891806df</Anchor>
    <Abstract>Rate of reaction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>InternalFilamentRxnManager</Scope>
    </TokenIdentifier>
    <Path>classInternalFilamentRxnManager.html</Path>
    <Anchor>a973ce9cc2aae811e6867afa46193c5f2</Anchor>
    <Abstract>A subsystem pointer to initialize and call chemical callbacks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Visitor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Abstract>An abstract interface to traverse those nodes in the Composite pattern which fulfill a certain predic...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a3f8ea7ad6aa61e99d8d1bc0576bdf23c</Anchor>
    <Abstract>When this conditional Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointer *c, the following method is called: v-&gt;visit(c), if v-&gt;pred(c) returns true. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a2c9cc57ee3a518a193ea88384cbf3937</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a1ebdba266c77626f67a22fc2300d8dc3</Anchor>
    <Abstract>When this Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointe...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a5f9d231f1ac00bd232085ee6e6547de0</Anchor>
    <Abstract>Return true if the Component *c satisfies the desired predicate. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VisitorLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Abstract>Allows using C++11 lambda expressions to set the action to be performed on each node, and also check via a lambda predicate whether the given node needs to be acted upon. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambda</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a77004dd1388b4b7ebc5d1d6fe1adb747</Anchor>
    <Abstract>Sets the action to be perfomed on each node as std::function&lt;bool (Component*)&gt; g. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLambdaPred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a46d9cc856e3fbc7155dd2212981a8902</Anchor>
    <Abstract>Sets the predicate which checks whether the node should be evaluated as std::function&lt;bool (Component...</Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Visitor</Scope>
    </TokenIdentifier>
    <Path>classVisitor.html</Path>
    <Anchor>a3f8ea7ad6aa61e99d8d1bc0576bdf23c</Anchor>
    <Abstract>When this conditional Visitor, *cv, is propagated through the Composite hieararchy, at each Component node pointer *c, the following method is called: v-&gt;visit(c), if v-&gt;pred(c) returns true. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>af934df1d8669dd315d824d9ee706f250</Anchor>
    <Abstract>Implementation of the visit(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>predImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>ad41ffd99799d4ce452e5a9aaf6b62d46</Anchor>
    <Abstract>Implementation of the pred(...) method. </Abstract>
    <DeclaredIn>Visitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>a098597c2b62c63a2fd2a833add3cc43d</Anchor>
    <Abstract>The function to be perfomed on each node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_pred</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>VisitorLambda</Scope>
    </TokenIdentifier>
    <Path>classVisitorLambda.html</Path>
    <Anchor>adfd5fc76108d52d9abc981c020379661</Anchor>
    <Abstract>The predicate which checks whether the node should be evaluated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeCylindricalFF</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Abstract>An implementation of the ForceField class that calculates Cylinder volume interactions. </Abstract>
    <DeclaredIn>VolumeCylindricalFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeCylindricalFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Anchor>a803cbed635525100015efc8094e1bf11</Anchor>
    <Abstract>Initialize the volume forcefields. </Abstract>
    <DeclaredIn>VolumeCylindricalFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeEnergy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Anchor>ab5ddebdb54f582dfd07d6cf82e92a78b</Anchor>
    <Abstract>Compute total energy of this forcefield in the system. </Abstract>
    <DeclaredIn>VolumeCylindricalFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Anchor>a777849c01725bdc05562df0961c85f25</Anchor>
    <Abstract>Compute forces of this forcefield in the system. Update Bead forces accordingly. </Abstract>
    <DeclaredIn>VolumeCylindricalFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeForcesAux</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Anchor>a26fe078612a7fb4ff7d82e9235cd72e7</Anchor>
    <Abstract>Compute auxiliary forces of this forcefield in the system. Update Bead auxiliary forces accordingly...</Abstract>
    <DeclaredIn>VolumeCylindricalFF.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ForceField</Scope>
    </TokenIdentifier>
    <Path>classForceField.html</Path>
    <Anchor>a4a09e09603b4c4650dc7b3b0f0912fd2</Anchor>
    <Abstract>Get the name of this forcefield. </Abstract>
    <DeclaredIn>ForceField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cylinderVolInteractionVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>VolumeCylindricalFF</Scope>
    </TokenIdentifier>
    <Path>classVolumeCylindricalFF.html</Path>
    <Anchor>acb78c1fd7c964a6fe658b498ae91b44f</Anchor>
    <Abstract>Vector of initialized volume interactions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>A_B_C_Cycle</Name>
      <APILanguage>python</APILanguage>
      <Type>ns</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute_T</Name>
      <APILanguage>python</APILanguage>
      <Type>func</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a5185de4b3f647f2c0fd827dc61787e74</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propagate</Name>
      <APILanguage>python</APILanguage>
      <Type>func</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a59ce12842045f3ad4619feb145abdcf8</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a23b7c1024d319feae9e3a687526aeb94</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>t</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>ab55624a349d5a1ba164d1dde7d24524d</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>af487b8de68dc3e23fe5f16f3580525a7</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alpha</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a11169d0a2c42df806b8825edefea9f4d</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>A</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a2e58583729f8a298b9a4fa611c0ac787</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>B</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a9771d340c90ea87ee784c884fe2de3dc</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>C</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a6b1467f9bbedb7a62110239efb9e068b</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xx1</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>ada302b2e3d775f1258d503301d1c2377</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xx2</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a9a299d8ac16b9cdc11b6643776732552</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T_analyt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_B_C_Cycle</Scope>
    </TokenIdentifier>
    <Path>namespaceA__B__C__Cycle.html</Path>
    <Anchor>a36440b61a4f8a38a160c7d71c35e0af3</Anchor>
    <DeclaredIn>A_B_C_Cycle.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>A_reversible_B_numeric</Name>
      <APILanguage>python</APILanguage>
      <Type>ns</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>N</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ac17162d2d7790ca7d605541ee4c919bb</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>t</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a63df2169b3cb7b9db0743a51320bbf4f</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kf</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a772b5e72a16864c6d0d2895bf2bb5ada</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kb</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a2f4e77a45b10e727874ecd0a83be77fd</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>R</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a7095a52e98b19868ca09b3ea24726258</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ONES</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ab14192a58d248288a57a53a88e824aa1</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a238e2ae63555f68c3395add1edad1692</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p0</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>ad5efb9fc14774d8a02dccd90d7978214</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>aae033c0920890d37257bb86daf8996f8</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p_analyt</Name>
      <APILanguage>python</APILanguage>
      <Type>data</Type>
      <Scope>A_reversible_B_numeric</Scope>
    </TokenIdentifier>
    <Path>namespaceA__reversible__B__numeric.html</Path>
    <Anchor>a2f98730f45b559f9aece65c8682734bf</Anchor>
    <DeclaredIn>A_reversible_B_numeric.py</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mathfunc</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Abstract>is used for the mathematics module for the entire codebase mathfunc includes functions to calculate d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoSegmentDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a4f2e296612642f3ac1b4789f85b02c41</Anchor>
    <Abstract>Function to calculate a diatance between two segments. </Abstract>
    <DeclaredIn>MathFunctions.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a43b9be958a97530eba2073e9816881eb</Anchor>
    <Abstract>Compute distance between two points with coordinates: (x1,y1,z1) and (x2,y2,z3);. ...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDistanceStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a79cd843c8fc2ad6513a091c86744e9f4</Anchor>
    <Abstract>Compute distance between two points with coordinates (x1 -d*p1x,y1-d*p1y,z1-d*p1z) and (x2-d*p2x...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TwoPointDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>aa45b754771ac16d546864a1a7fb9bf59</Anchor>
    <Abstract>Calculates a normal to a line starting at (x1,y1,z1) and ending at (x2,y2,z2);. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScalarProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a003be58c2f6df9098c88b2ae33d5b5d4</Anchor>
    <Abstract>Scalar product of two vectors with coordinates: (x2-x1,y2-y1,z2-z1) and (x4-x3,y4-y3,z4-z3) </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScalarProductStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a3dffb1288c676c7809d4a6caae9601bb</Anchor>
    <Abstract>Scalar product of two vectors with coordinates: (x2-x1,y2-y1,z2-z1) and (x4-x3,y4-y3,z4-z3) but with x-d*p coordinates. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NextPointProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a1781854650a2eb9e2d88ad0ee14a8a69</Anchor>
    <Abstract>Projection of a new point based on a given direction and starting point. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MidPointCoordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>a5c9392edbc56add20a4f95d7406a6757</Anchor>
    <Abstract>Returns coordinates of a point v located on a line between v1 and v2. |v-v1|/|v2-v| = alpha...</Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MidPointCoordinateStretched</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mathfunc</Scope>
    </TokenIdentifier>
    <Path>namespacemathfunc.html</Path>
    <Anchor>aaaf523827e15939d17307f0c3724973c</Anchor>
    <Abstract>Returns coordinates of a point v located on a line between v1 and v2. </Abstract>
    <DeclaredIn>MathFunctions.h</DeclaredIn>
  </Token>
</Tokens>
